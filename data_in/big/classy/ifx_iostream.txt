// abstract interface for input-output character streams

class ifx_iostream /// input-output stream interface
	void *impl = 0; // used by implementations to store state
	void *putch = 0; // void putch(void* impl, char C);
	int *getch = 0; // int getch(void* impl); // returns the next character in the stream or 0 for EOF
	int *hasch = 0; // int hasch(void* impl); // returns 1 if there is a character ready to be read
end

class ifx_iostream std_in;
class ifx_iostream std_out;

void fputch(class ifx_iostream f, char C)
	if(f.putch)
		f.putch(f.impl, C);
	else
		error("iostream error: putch not set");
	end
end

void putch(char C) fputch(std_out, C); end

int fgetch(class ifx_iostream f)
	if(f.getch)
		return f.getch(f.impl);
	else
		error("iostream error: getch not set");
	end
end

int getch() return fgetch(std_in) end

int fhasch(class ifx_iostream f)
	if(f.hasch)
		return f.hasch(f.impl);
	else
		error("iostream error: hasch not set");
	end	
end

int hasch() return fhasch(std_in) end

void fputs(class ifx_iostream f, char *str)
	while(*str)
		fputch(f, *str++);
	end
end

void puts(char *str) fputs(std_out, str); end
