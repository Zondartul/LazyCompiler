#include "data_in/big/unit_tests.txt"
#include "data_in/big/testOutput.txt"
#include "data_in/big/printf.txt"
//#include "data_in/big/class_csprinter.txt"

int addr_bus[4];

void init_printf()
	addr_bus = {65536, 65536+20000, 65536+20000*2, 65536+20000*3};
	screen_set(addr_bus[2]);
	screen_clear();
end


/*
void stuff_test_2()
	int x;
	printf("t2 x1: %d\n", x); // ???
	x = 12;
	printf("t2 x2: %d\n", x); // 12
end


class Dev_address_bus
	int addr[4];
	void constructor(int base_offset, int size1, int size2, int size3)
		addr[0] = base_offset;
		addr[1] = addr[0] + size1;
		addr[2] = addr[1] + size2;
		addr[3] = addr[2] + size3;
	end
	void write(int dev_num, int* offset, int byte)
		int *ptr = addr[dev_num] + offset;
		*ptr = byte;
	end
	int read(int dev_num, int* offset) /// variable was shadowed (addr)
		int *ptr = addr[dev_num] + offset;
		int byte = *ptr;
		return *ptr;
	end
end


class Derp
	int x = 2;
	void constructor(int new_x, int new_y)
		x = new_x+new_y;
		printf("called user constructor:\nnew_x = %d, new_y = %d, x = %d\n",new_x,new_y,x);
		//derpyfunc("called user constructor:\nnew_x = %d, new_y = %d, x = %d\n",new_x,new_y,x);
	end
end

void derpyfunc(int arg1, int arg2, int arg3)
end
*/

int main()
	setup();
	
	init_printf();
	printf("Running LazyComp unit tests\n");
	run_all_tests();
	Prints("All tests green",90); 	
	screen_clear(); setPrintCursor(0,0);
	//printf("hello world!\n");
	
	printf("Hello [%s] %d!\n", "world", 123);
	
	//class Dev_address_bus addr_bus;
	
	
	//class CScreen scr;
	
	
	//class CSPrinter printer;
	//printf("bus %d, CScreen %d, CSPrinter %d\n", &addr_bus, &scr, &printer);
	//printf("step 0.");
	//addr_bus.constructor(65536, 20000, 20000, 20000);
	//printf("1.");

	//scr.constructor();
	//printf("2.");
	//scr.set(addr_bus.addr[2]);
	//printf("... scr.memscr = %d\n", scr.mem_scr);
	//printf("3.");
	//printer.init();
	//printf("4.");
	//printer.scr = &scr;
	//printf("... printer.scr = %d\n", printer.scr);
	//printf(".printer.scr.memscr = %d\n", printer.scr.mem_scr);
	//printf("... scr.memscr = %d\n", scr.mem_scr);
	//printf("5.");
	//printer.puts("Hello from CSPrinter!\n");
	//printf("z.");
	
	//class Derp derp(4, 10);
	//printf("&derp = %d, derp.x = %d\n", &derp, derp.x);
	
	infloop();
end
