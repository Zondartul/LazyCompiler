semantic got program, prod 0, @ 0-1020, imperative pass
-----------------
float *adr_buttons = 65536;  	//buttons
float *adr_leds = 65546;		//leds
float *adr_screen = 65556;		//val screens
float *adr_keyboard = 65566;	//keyboard
float *adr_console = 65866;		//console screen

float delay(float n)
	while(n--) end
end

//float T = 0;
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end

float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
endÿ
-----------------
new symbol table: ST
symbol table ST saved
analyzing (decl) scope ST
symbol table so far:
Symbol table 'ST':
 semantic got decl_stmt_list, prod 0, @ 0-1020, declarative pass
-----------------
float *adr_buttons = 65536;  	//buttons
float *adr_leds = 65546;		//leds
float *adr_screen = 65556;		//val screens
float *adr_keyboard = 65566;	//keyboard
float *adr_console = 65866;		//console screen

float delay(float n)
	while(n--) end
end

//float T = 0;
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end

float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
endÿ
-----------------
  semantic got decl_stmt, prod 2, @ 0-27, declarative pass
-----------------
float *adr_buttons = 65536;
-----------------
   semantic got var_decl_assign, "adr_buttons", prod 0, @ 0-26, declarative pass
-----------------
float *adr_buttons = 65536
-----------------
pushing symbol adr_buttons -> ST
  semantic got decl_stmt, prod 2, @ 40-64, declarative pass
-----------------
float *adr_leds = 65546;
-----------------
   semantic got var_decl_assign, "adr_leds", prod 0, @ 40-63, declarative pass
-----------------
float *adr_leds = 65546
-----------------
pushing symbol adr_leds -> ST
  semantic got decl_stmt, prod 2, @ 73-99, declarative pass
-----------------
float *adr_screen = 65556;
-----------------
   semantic got var_decl_assign, "adr_screen", prod 0, @ 73-98, declarative pass
-----------------
float *adr_screen = 65556
-----------------
pushing symbol adr_screen -> ST
  semantic got decl_stmt, prod 2, @ 115-143, declarative pass
-----------------
float *adr_keyboard = 65566;
-----------------
   semantic got var_decl_assign, "adr_keyboard", prod 0, @ 115-142, declarative pass
-----------------
float *adr_keyboard = 65566
-----------------
pushing symbol adr_keyboard -> ST
  semantic got decl_stmt, prod 2, @ 155-182, declarative pass
-----------------
float *adr_console = 65866;
-----------------
   semantic got var_decl_assign, "adr_console", prod 0, @ 155-181, declarative pass
-----------------
float *adr_console = 65866
-----------------
pushing symbol adr_console -> ST
  semantic got decl_stmt, prod 1, @ 202-242, declarative pass
-----------------
float delay(float n)
	while(n--) end
end
-----------------
   semantic got func_def, "delay", prod 0, @ 202-242, declarative pass
-----------------
float delay(float n)
	while(n--) end
end
-----------------
symbol table ST saved
new symbol table: ST_1
    semantic got var_decl, "n", prod 0, @ 214-221, declarative pass
-----------------
float n
-----------------
pushing symbol n -> ST_1
symbol table ST loaded
pushing symbol delay -> ST
symbol table ST saved
symbol table ST_1 saved
analyzing (decl) scope ST_1
symbol table so far:
Symbol table 'ST_1'->'ST':
parameters:
type	name	ir_name	size	pos
float	n	n	1	0
    semantic got stmt_list, prod 0, @ 224-238, declarative pass
-----------------
while(n--) end
-----------------
     semantic got stmt, prod 0, @ 224-238, declarative pass
-----------------
while(n--) end
-----------------
      semantic got imp_stmt, prod 1, @ 224-238, declarative pass
-----------------
while(n--) end
-----------------
       semantic got while_loop, prod 0, @ 224-238, declarative pass
-----------------
while(n--) end
-----------------
symbol table ST_1 saved
new symbol table: ST_2
symbol table ST_2 saved
analyzing (decl) scope ST_2
symbol table so far:
Symbol table 'ST_2'->'ST_1':
        semantic got stmt_list, "<empty>", prod 1, @ 230-233, declarative pass
-----------------
n--
-----------------
symbol table ST_2 loaded
symbol table ST_1 loaded
symbol table ST_1 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 259-355, declarative pass
-----------------
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end
-----------------
   semantic got func_def, "scr", prod 0, @ 259-355, declarative pass
-----------------
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end
-----------------
symbol table ST saved
new symbol table: ST_3
    semantic got var_decl, "a", prod 0, @ 269-276, declarative pass
-----------------
float a
-----------------
pushing symbol a -> ST_3
    semantic got var_decl, "b", prod 0, @ 278-285, declarative pass
-----------------
float b
-----------------
pushing symbol b -> ST_3
symbol table ST loaded
pushing symbol scr -> ST
symbol table ST saved
symbol table ST_3 saved
analyzing (decl) scope ST_3
symbol table so far:
Symbol table 'ST_3'->'ST':
parameters:
type	name	ir_name	size	pos
float	a	a	1	0
float	b	b	1	1
    semantic got stmt_list, prod 0, @ 288-306, declarative pass
-----------------
adr_screen[a] = b;
-----------------
     semantic got stmt, prod 0, @ 288-306, declarative pass
-----------------
adr_screen[a] = b;
-----------------
      semantic got imp_stmt, prod 2, @ 288-306, declarative pass
-----------------
adr_screen[a] = b;
-----------------
symbol table ST_3 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 357-429, declarative pass
-----------------
float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
end
-----------------
   semantic got func_def, "strtest", prod 0, @ 357-429, declarative pass
-----------------
float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
end
-----------------
symbol table ST saved
new symbol table: ST_4
    semantic got var_decl, "str", prod 0, @ 371-381, declarative pass
-----------------
float *str
-----------------
pushing symbol str -> ST_4
symbol table ST loaded
pushing symbol strtest -> ST
symbol table ST saved
symbol table ST_4 saved
analyzing (decl) scope ST_4
symbol table so far:
Symbol table 'ST_4'->'ST':
parameters:
type	name	ir_name	size	pos
float	str	str	1	0
    semantic got stmt_list, prod 0, @ 384-425, declarative pass
-----------------
scr(3,str);
	scr(4,*str);
	scr(5,str[0])
-----------------
     semantic got stmt, prod 0, @ 384-395, declarative pass
-----------------
scr(3,str);
-----------------
      semantic got imp_stmt, prod 2, @ 384-395, declarative pass
-----------------
scr(3,str);
-----------------
     semantic got stmt, prod 0, @ 397-409, declarative pass
-----------------
scr(4,*str);
-----------------
      semantic got imp_stmt, prod 2, @ 397-409, declarative pass
-----------------
scr(4,*str);
-----------------
     semantic got stmt, prod 0, @ 411-425, declarative pass
-----------------
scr(5,str[0]);
-----------------
      semantic got imp_stmt, prod 2, @ 411-425, declarative pass
-----------------
scr(5,str[0]);
-----------------
symbol table ST_4 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 0-78, declarative pass
-----------------
float strlen(float *S)
	float len = 0;
	while(S[len++]) end
	return --len;
end
-----------------
   semantic got func_def, "strlen", prod 0, @ 0-78, declarative pass
-----------------
float strlen(float *S)
	float len = 0;
	while(S[len++]) end
	return --len;
end
-----------------
symbol table ST saved
new symbol table: ST_5
    semantic got var_decl, "S", prod 0, @ 13-21, declarative pass
-----------------
float *S
-----------------
pushing symbol S -> ST_5
symbol table ST loaded
pushing symbol strlen -> ST
symbol table ST saved
symbol table ST_5 saved
analyzing (decl) scope ST_5
symbol table so far:
Symbol table 'ST_5'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S	1	0
    semantic got stmt_list, prod 0, @ 24-74, declarative pass
-----------------
float len = 0;
	while(S[len++]) end
	return --len
-----------------
     semantic got stmt, prod 1, @ 24-38, declarative pass
-----------------
float len = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 24-38, declarative pass
-----------------
float len = 0;
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 24-37, declarative pass
-----------------
float len = 0
-----------------
pushing symbol len -> ST_5
     semantic got stmt, prod 0, @ 40-59, declarative pass
-----------------
while(S[len++]) end
-----------------
      semantic got imp_stmt, prod 1, @ 40-59, declarative pass
-----------------
while(S[len++]) end
-----------------
       semantic got while_loop, prod 0, @ 40-59, declarative pass
-----------------
while(S[len++]) end
-----------------
symbol table ST_5 saved
new symbol table: ST_6
symbol table ST_6 saved
analyzing (decl) scope ST_6
symbol table so far:
Symbol table 'ST_6'->'ST_5':
        semantic got stmt_list, "<empty>", prod 1, @ 46-54, declarative pass
-----------------
S[len++]
-----------------
symbol table ST_6 loaded
symbol table ST_5 loaded
     semantic got stmt, prod 0, @ 61-74, declarative pass
-----------------
return --len;
-----------------
      semantic got imp_stmt, prod 4, @ 61-74, declarative pass
-----------------
return --len;
-----------------
symbol table ST_5 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 80-230, declarative pass
-----------------
float strrev(float *S)
	float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	end
end
-----------------
   semantic got func_def, "strrev", prod 0, @ 80-230, declarative pass
-----------------
float strrev(float *S)
	float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	end
end
-----------------
symbol table ST saved
new symbol table: ST_7
    semantic got var_decl, "S", prod 0, @ 93-101, declarative pass
-----------------
float *S
-----------------
pushing symbol S -> ST_7
symbol table ST loaded
pushing symbol strrev -> ST
symbol table ST saved
symbol table ST_7 saved
analyzing (decl) scope ST_7
symbol table so far:
Symbol table 'ST_7'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_1	1	0
    semantic got stmt_list, prod 0, @ 104-226, declarative pass
-----------------
float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
     semantic got stmt, prod 1, @ 104-126, declarative pass
-----------------
float len = strlen(S);
-----------------
      semantic got decl_stmt, prod 2, @ 104-126, declarative pass
-----------------
float len = strlen(S);
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 104-125, declarative pass
-----------------
float len = strlen(S)
-----------------
pushing symbol len -> ST_7
     semantic got stmt, prod 1, @ 128-136, declarative pass
-----------------
float I;
-----------------
      semantic got decl_stmt, prod 2, @ 128-136, declarative pass
-----------------
float I;
-----------------
       semantic got var_decl, "I", prod 0, @ 128-135, declarative pass
-----------------
float I
-----------------
pushing symbol I -> ST_7
     semantic got stmt, prod 0, @ 138-226, declarative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
      semantic got imp_stmt, prod 5, @ 138-226, declarative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
       semantic got for_loop, prod 0, @ 138-226, declarative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
symbol table ST_7 saved
new symbol table: ST_8
        semantic got stmt, prod 0, @ 142-148, declarative pass
-----------------
I = 0;
-----------------
         semantic got imp_stmt, prod 2, @ 142-148, declarative pass
-----------------
I = 0;
-----------------
        semantic got stmt_list, prod 0, @ 167-221, declarative pass
-----------------
float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = 
-----------------
         semantic got stmt, prod 1, @ 167-182, declarative pass
-----------------
float C = S[I];
-----------------
          semantic got decl_stmt, prod 2, @ 167-182, declarative pass
-----------------
float C = S[I];
-----------------
           semantic got var_decl_assign, "C", prod 0, @ 167-181, declarative pass
-----------------
float C = S[I]
-----------------
pushing symbol C -> ST_8
         semantic got stmt, prod 0, @ 185-203, declarative pass
-----------------
S[I] = S[len-1-I];
-----------------
          semantic got imp_stmt, prod 2, @ 185-203, declarative pass
-----------------
S[I] = S[len-1-I];
-----------------
         semantic got stmt, prod 0, @ 206-221, declarative pass
-----------------
S[len-1-I] = C;
-----------------
          semantic got imp_stmt, prod 2, @ 206-221, declarative pass
-----------------
S[len-1-I] = C;
-----------------
symbol table ST_7 loaded
symbol table ST_7 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 232-393, declarative pass
-----------------
float itoa(float *buff, float N)
	float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff);
end
-----------------
   semantic got func_def, "itoa", prod 0, @ 232-393, declarative pass
-----------------
float itoa(float *buff, float N)
	float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff);
end
-----------------
symbol table ST saved
new symbol table: ST_9
    semantic got var_decl, "buff", prod 0, @ 243-254, declarative pass
-----------------
float *buff
-----------------
pushing symbol buff -> ST_9
    semantic got var_decl, "N", prod 0, @ 256-263, declarative pass
-----------------
float N
-----------------
pushing symbol N -> ST_9
symbol table ST loaded
pushing symbol itoa -> ST
symbol table ST saved
symbol table ST_9 saved
analyzing (decl) scope ST_9
symbol table so far:
Symbol table 'ST_9'->'ST':
parameters:
type	name	ir_name	size	pos
float	buff	buff	1	0
float	N	N	1	1
    semantic got stmt_list, prod 0, @ 266-389, declarative pass
-----------------
float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff)
-----------------
     semantic got stmt, prod 1, @ 266-278, declarative pass
-----------------
float I = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 266-278, declarative pass
-----------------
float I = 0;
-----------------
       semantic got var_decl_assign, "I", prod 0, @ 266-277, declarative pass
-----------------
float I = 0
-----------------
pushing symbol I -> ST_9
     semantic got stmt, prod 0, @ 280-329, declarative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
      semantic got imp_stmt, prod 1, @ 280-329, declarative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
       semantic got while_loop, prod 0, @ 280-329, declarative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
symbol table ST_9 saved
new symbol table: ST_10
symbol table ST_10 saved
analyzing (decl) scope ST_10
symbol table so far:
Symbol table 'ST_10'->'ST_9':
        semantic got stmt_list, prod 0, @ 291-324, declarative pass
-----------------
buff[I++] = '0'+N%10;
		N = N/1
-----------------
         semantic got stmt, prod 0, @ 291-312, declarative pass
-----------------
buff[I++] = '0'+N%10;
-----------------
          semantic got imp_stmt, prod 2, @ 291-312, declarative pass
-----------------
buff[I++] = '0'+N%10;
-----------------
         semantic got stmt, prod 0, @ 315-324, declarative pass
-----------------
N = N/10;
-----------------
          semantic got imp_stmt, prod 2, @ 315-324, declarative pass
-----------------
N = N/10;
-----------------
symbol table ST_10 loaded
symbol table ST_9 loaded
     semantic got stmt, prod 0, @ 331-360, declarative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
      semantic got imp_stmt, prod 0, @ 331-360, declarative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
       semantic got if_block, prod 0, @ 331-360, declarative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
symbol table ST_9 saved
        semantic got if_then, prod 0, @ 331-356, declarative pass
-----------------
if(I==0) buff[I++] = '0';
-----------------
symbol table ST_9 saved
new symbol table: ST_11
symbol table ST_11 saved
analyzing (decl) scope ST_11
symbol table so far:
Symbol table 'ST_11'->'ST_9':
         semantic got stmt_list, prod 0, @ 340-356, declarative pass
-----------------
buff[I++] = '0';
-----------------
          semantic got stmt, prod 0, @ 340-356, declarative pass
-----------------
buff[I++] = '0';
-----------------
           semantic got imp_stmt, prod 2, @ 340-356, declarative pass
-----------------
buff[I++] = '0';
-----------------
symbol table ST_11 loaded
symbol table ST_9 loaded
symbol table ST_9 loaded
     semantic got stmt, prod 0, @ 362-374, declarative pass
-----------------
buff[I] = 0;
-----------------
      semantic got imp_stmt, prod 2, @ 362-374, declarative pass
-----------------
buff[I] = 0;
-----------------
     semantic got stmt, prod 0, @ 376-389, declarative pass
-----------------
strrev(buff);
-----------------
      semantic got imp_stmt, prod 2, @ 376-389, declarative pass
-----------------
strrev(buff);
-----------------
symbol table ST_9 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 2, @ 2-19, declarative pass
-----------------
float printX = 0;
-----------------
   semantic got var_decl_assign, "printX", prod 0, @ 2-18, declarative pass
-----------------
float printX = 0
-----------------
pushing symbol printX -> ST
  semantic got decl_stmt, prod 2, @ 20-37, declarative pass
-----------------
float printY = 0;
-----------------
   semantic got var_decl_assign, "printY", prod 0, @ 20-36, declarative pass
-----------------
float printY = 0
-----------------
pushing symbol printY -> ST
  semantic got decl_stmt, prod 1, @ 39-207, declarative pass
-----------------
float print(float *S)
	
	printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len;
end
-----------------
   semantic got func_def, "print", prod 0, @ 39-207, declarative pass
-----------------
float print(float *S)
	
	printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len;
end
-----------------
symbol table ST saved
new symbol table: ST_12
    semantic got var_decl, "S", prod 0, @ 51-59, declarative pass
-----------------
float *S
-----------------
pushing symbol S -> ST_12
symbol table ST loaded
pushing symbol print -> ST
symbol table ST saved
symbol table ST_12 saved
analyzing (decl) scope ST_12
symbol table so far:
Symbol table 'ST_12'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_2	1	0
    semantic got stmt_list, prod 0, @ 64-203, declarative pass
-----------------
printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len
-----------------
     semantic got stmt, prod 0, @ 64-89, declarative pass
-----------------
printXY(S,printX,printY);
-----------------
      semantic got imp_stmt, prod 2, @ 64-89, declarative pass
-----------------
printXY(S,printX,printY);
-----------------
     semantic got stmt, prod 1, @ 91-113, declarative pass
-----------------
float len = strlen(S);
-----------------
      semantic got decl_stmt, prod 2, @ 91-113, declarative pass
-----------------
float len = strlen(S);
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 91-112, declarative pass
-----------------
float len = strlen(S)
-----------------
pushing symbol len -> ST_12
     semantic got stmt, prod 0, @ 115-179, declarative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
      semantic got imp_stmt, prod 1, @ 115-179, declarative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
       semantic got while_loop, prod 0, @ 115-179, declarative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
symbol table ST_12 saved
new symbol table: ST_13
symbol table ST_13 saved
analyzing (decl) scope ST_13
symbol table so far:
Symbol table 'ST_13'->'ST_12':
        semantic got stmt_list, prod 0, @ 133-174, declarative pass
-----------------
len = len - 30;
		printX = 0;
		printY+
-----------------
         semantic got stmt, prod 0, @ 133-148, declarative pass
-----------------
len = len - 30;
-----------------
          semantic got imp_stmt, prod 2, @ 133-148, declarative pass
-----------------
len = len - 30;
-----------------
         semantic got stmt, prod 0, @ 151-162, declarative pass
-----------------
printX = 0;
-----------------
          semantic got imp_stmt, prod 2, @ 151-162, declarative pass
-----------------
printX = 0;
-----------------
         semantic got stmt, prod 0, @ 165-174, declarative pass
-----------------
printY++;
-----------------
          semantic got imp_stmt, prod 2, @ 165-174, declarative pass
-----------------
printY++;
-----------------
symbol table ST_13 loaded
symbol table ST_12 loaded
     semantic got stmt, prod 0, @ 181-203, declarative pass
-----------------
printX = printX + len;
-----------------
      semantic got imp_stmt, prod 2, @ 181-203, declarative pass
-----------------
printX = printX + len;
-----------------
symbol table ST_12 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 209-290, declarative pass
-----------------
float println(float *S)
	print(S);
	if(printX != 0) printY++; printX = 0; end
end
-----------------
   semantic got func_def, "println", prod 0, @ 209-290, declarative pass
-----------------
float println(float *S)
	print(S);
	if(printX != 0) printY++; printX = 0; end
end
-----------------
symbol table ST saved
new symbol table: ST_14
    semantic got var_decl, "S", prod 0, @ 223-231, declarative pass
-----------------
float *S
-----------------
pushing symbol S -> ST_14
symbol table ST loaded
pushing symbol println -> ST
symbol table ST saved
symbol table ST_14 saved
analyzing (decl) scope ST_14
symbol table so far:
Symbol table 'ST_14'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_3	1	0
    semantic got stmt_list, prod 0, @ 234-286, declarative pass
-----------------
print(S);
	if(printX != 0) printY++; printX = 0; en
-----------------
     semantic got stmt, prod 0, @ 234-243, declarative pass
-----------------
print(S);
-----------------
      semantic got imp_stmt, prod 2, @ 234-243, declarative pass
-----------------
print(S);
-----------------
     semantic got stmt, prod 0, @ 245-286, declarative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
      semantic got imp_stmt, prod 0, @ 245-286, declarative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
       semantic got if_block, prod 0, @ 245-286, declarative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
symbol table ST_14 saved
        semantic got if_then, prod 0, @ 245-282, declarative pass
-----------------
if(printX != 0) printY++; printX = 0;
-----------------
symbol table ST_14 saved
new symbol table: ST_15
symbol table ST_15 saved
analyzing (decl) scope ST_15
symbol table so far:
Symbol table 'ST_15'->'ST_14':
         semantic got stmt_list, prod 0, @ 261-282, declarative pass
-----------------
printY++; printX = 0;
-----------------
          semantic got stmt, prod 0, @ 261-270, declarative pass
-----------------
printY++;
-----------------
           semantic got imp_stmt, prod 2, @ 261-270, declarative pass
-----------------
printY++;
-----------------
          semantic got stmt, prod 0, @ 271-282, declarative pass
-----------------
printX = 0;
-----------------
           semantic got imp_stmt, prod 2, @ 271-282, declarative pass
-----------------
printX = 0;
-----------------
symbol table ST_15 loaded
symbol table ST_14 loaded
symbol table ST_14 loaded
symbol table ST_14 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 291-361, declarative pass
-----------------
float printnum(float N)
	float arr[20];
	itoa(arr,N);
	print(arr);
end
-----------------
   semantic got func_def, "printnum", prod 0, @ 291-361, declarative pass
-----------------
float printnum(float N)
	float arr[20];
	itoa(arr,N);
	print(arr);
end
-----------------
symbol table ST saved
new symbol table: ST_16
    semantic got var_decl, "N", prod 0, @ 306-313, declarative pass
-----------------
float N
-----------------
pushing symbol N -> ST_16
symbol table ST loaded
pushing symbol printnum -> ST
symbol table ST saved
symbol table ST_16 saved
analyzing (decl) scope ST_16
symbol table so far:
Symbol table 'ST_16'->'ST':
parameters:
type	name	ir_name	size	pos
float	N	N_1	1	0
    semantic got stmt_list, prod 0, @ 316-357, declarative pass
-----------------
float arr[20];
	itoa(arr,N);
	print(arr)
-----------------
     semantic got stmt, prod 1, @ 316-330, declarative pass
-----------------
float arr[20];
-----------------
      semantic got decl_stmt, prod 2, @ 316-330, declarative pass
-----------------
float arr[20];
-----------------
       semantic got var_decl, "arr", prod 1, @ 316-329, declarative pass
-----------------
float arr[20]
-----------------
pushing symbol arr -> ST_16
     semantic got stmt, prod 0, @ 332-344, declarative pass
-----------------
itoa(arr,N);
-----------------
      semantic got imp_stmt, prod 2, @ 332-344, declarative pass
-----------------
itoa(arr,N);
-----------------
     semantic got stmt, prod 0, @ 346-357, declarative pass
-----------------
print(arr);
-----------------
      semantic got imp_stmt, prod 2, @ 346-357, declarative pass
-----------------
print(arr);
-----------------
symbol table ST_16 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 362-656, declarative pass
-----------------
float printXY(float *S, float X, float Y)
	//scr(2,S);
	float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	end
end
-----------------
   semantic got func_def, "printXY", prod 0, @ 362-656, declarative pass
-----------------
float printXY(float *S, float X, float Y)
	//scr(2,S);
	float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	end
end
-----------------
symbol table ST saved
new symbol table: ST_17
    semantic got var_decl, "S", prod 0, @ 376-384, declarative pass
-----------------
float *S
-----------------
pushing symbol S -> ST_17
    semantic got var_decl, "X", prod 0, @ 386-393, declarative pass
-----------------
float X
-----------------
pushing symbol X -> ST_17
    semantic got var_decl, "Y", prod 0, @ 395-402, declarative pass
-----------------
float Y
-----------------
pushing symbol Y -> ST_17
symbol table ST loaded
pushing symbol printXY -> ST
symbol table ST saved
symbol table ST_17 saved
analyzing (decl) scope ST_17
symbol table so far:
Symbol table 'ST_17'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_4	1	0
float	X	X	1	1
float	Y	Y	1	2
    semantic got stmt_list, prod 0, @ 418-652, declarative pass
-----------------
float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
     semantic got stmt, prod 1, @ 418-430, declarative pass
-----------------
float I = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 418-430, declarative pass
-----------------
float I = 0;
-----------------
       semantic got var_decl_assign, "I", prod 0, @ 418-429, declarative pass
-----------------
float I = 0
-----------------
pushing symbol I -> ST_17
     semantic got stmt, prod 1, @ 432-447, declarative pass
-----------------
float C = *S++;
-----------------
      semantic got decl_stmt, prod 2, @ 432-447, declarative pass
-----------------
float C = *S++;
-----------------
       semantic got var_decl_assign, "C", prod 0, @ 432-446, declarative pass
-----------------
float C = *S++
-----------------
pushing symbol C -> ST_17
     semantic got stmt, prod 0, @ 470-652, declarative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
      semantic got imp_stmt, prod 1, @ 470-652, declarative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
       semantic got while_loop, prod 0, @ 470-652, declarative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
symbol table ST_17 saved
new symbol table: ST_18
symbol table ST_18 saved
analyzing (decl) scope ST_18
symbol table so far:
Symbol table 'ST_18'->'ST_17':
        semantic got stmt_list, prod 0, @ 537-631, declarative pass
-----------------
float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S+
-----------------
         semantic got stmt, prod 1, @ 537-556, declarative pass
-----------------
float Adr = 30*Y+X;
-----------------
          semantic got decl_stmt, prod 2, @ 537-556, declarative pass
-----------------
float Adr = 30*Y+X;
-----------------
           semantic got var_decl_assign, "Adr", prod 0, @ 537-555, declarative pass
-----------------
float Adr = 30*Y+X
-----------------
pushing symbol Adr -> ST_18
         semantic got stmt, prod 0, @ 559-582, declarative pass
-----------------
adr_console[2*Adr] = C;
-----------------
          semantic got imp_stmt, prod 2, @ 559-582, declarative pass
-----------------
adr_console[2*Adr] = C;
-----------------
         semantic got stmt, prod 0, @ 585-612, declarative pass
-----------------
adr_console[2*Adr+1] = 999;
-----------------
          semantic got imp_stmt, prod 2, @ 585-612, declarative pass
-----------------
adr_console[2*Adr+1] = 999;
-----------------
         semantic got stmt, prod 0, @ 615-619, declarative pass
-----------------
X++;
-----------------
          semantic got imp_stmt, prod 2, @ 615-619, declarative pass
-----------------
X++;
-----------------
         semantic got stmt, prod 0, @ 622-631, declarative pass
-----------------
C = *S++;
-----------------
          semantic got imp_stmt, prod 2, @ 622-631, declarative pass
-----------------
C = *S++;
-----------------
symbol table ST_18 loaded
symbol table ST_17 loaded
symbol table ST_17 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 269-305, declarative pass
-----------------
float unreachable() while(1) end end
-----------------
   semantic got func_def, "unreachable", prod 0, @ 269-305, declarative pass
-----------------
float unreachable() while(1) end end
-----------------
symbol table ST saved
new symbol table: ST_19
symbol table ST loaded
pushing symbol unreachable -> ST
symbol table ST saved
symbol table ST_19 saved
analyzing (decl) scope ST_19
symbol table so far:
Symbol table 'ST_19'->'ST':
    semantic got stmt_list, prod 0, @ 289-301, declarative pass
-----------------
while(1) end
-----------------
     semantic got stmt, prod 0, @ 289-301, declarative pass
-----------------
while(1) end
-----------------
      semantic got imp_stmt, prod 1, @ 289-301, declarative pass
-----------------
while(1) end
-----------------
       semantic got while_loop, prod 0, @ 289-301, declarative pass
-----------------
while(1) end
-----------------
symbol table ST_19 saved
new symbol table: ST_20
symbol table ST_20 saved
analyzing (decl) scope ST_20
symbol table so far:
Symbol table 'ST_20'->'ST_19':
        semantic got stmt_list, "<empty>", prod 1, @ 295-296, declarative pass
-----------------
1
-----------------
symbol table ST_20 loaded
symbol table ST_19 loaded
symbol table ST_19 loaded
symbol table ST loaded
  semantic got decl_stmt, prod 0, @ 354-478, declarative pass
-----------------
class vec2
	float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	end
end
-----------------
   semantic got class_def, "vec2", prod 0, @ 354-478, declarative pass
-----------------
class vec2
	float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	end
end
-----------------
pushing symbol (null) -> ST
symbol table ST saved
new symbol table: ST_21
pushing symbol this -> ST_21
    semantic got decl_stmt_list, prod 0, @ 366-474, declarative pass
-----------------
float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
     semantic got decl_stmt, prod 2, @ 366-374, declarative pass
-----------------
float X;
-----------------
      semantic got var_decl, "X", prod 0, @ 366-373, declarative pass
-----------------
float X
-----------------
pushing symbol X -> ST_21
     semantic got decl_stmt, prod 2, @ 376-384, declarative pass
-----------------
float Y;
-----------------
      semantic got var_decl, "Y", prod 0, @ 376-383, declarative pass
-----------------
float Y
-----------------
pushing symbol Y -> ST_21
     semantic got decl_stmt, prod 1, @ 386-420, declarative pass
-----------------
float avg()
		return (X+Y)/2;
	en
-----------------
      semantic got func_def, "avg", prod 0, @ 386-420, declarative pass
-----------------
float avg()
		return (X+Y)/2;
	en
-----------------
symbol table ST_21 saved
new symbol table: ST_22
found symbol 'vec2'->'ST'
pushing symbol this -> ST_22
symbol table ST_21 loaded
pushing symbol avg -> ST_21
symbol table ST_21 saved
symbol table ST_22 saved
analyzing (decl) scope ST_22
symbol table so far:
Symbol table 'ST_22'->'ST_21':
parameters:
type	name	ir_name	size	pos
vec2	this	this_1	1	0
       semantic got stmt_list, prod 0, @ 400-415, declarative pass
-----------------
return (X+Y)/2;
-----------------
        semantic got stmt, prod 0, @ 400-415, declarative pass
-----------------
return (X+Y)/2;
-----------------
         semantic got imp_stmt, prod 4, @ 400-415, declarative pass
-----------------
return (X+Y)/2;
-----------------
symbol table ST_22 loaded
symbol table ST_21 loaded
     semantic got decl_stmt, prod 1, @ 422-474, declarative pass
-----------------
float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
      semantic got func_def, "switch", prod 0, @ 422-474, declarative pass
-----------------
float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
symbol table ST_21 saved
new symbol table: ST_23
found symbol 'vec2'->'ST'
pushing symbol this -> ST_23
symbol table ST_21 loaded
pushing symbol switch -> ST_21
symbol table ST_21 saved
symbol table ST_23 saved
analyzing (decl) scope ST_23
symbol table so far:
Symbol table 'ST_23'->'ST_21':
parameters:
type	name	ir_name	size	pos
vec2	this	this_2	1	0
       semantic got stmt_list, prod 0, @ 439-469, declarative pass
-----------------
float Z = X;
		X = Y;
		Y = 
-----------------
        semantic got stmt, prod 1, @ 439-451, declarative pass
-----------------
float Z = X;
-----------------
         semantic got decl_stmt, prod 2, @ 439-451, declarative pass
-----------------
float Z = X;
-----------------
          semantic got var_decl_assign, "Z", prod 0, @ 439-450, declarative pass
-----------------
float Z = X
-----------------
pushing symbol Z -> ST_23
        semantic got stmt, prod 0, @ 454-460, declarative pass
-----------------
X = Y;
-----------------
         semantic got imp_stmt, prod 2, @ 454-460, declarative pass
-----------------
X = Y;
-----------------
        semantic got stmt, prod 0, @ 463-469, declarative pass
-----------------
Y = Z;
-----------------
         semantic got imp_stmt, prod 2, @ 463-469, declarative pass
-----------------
Y = Z;
-----------------
symbol table ST_23 loaded
symbol table ST_21 loaded
pushing symbol (null) -> ST_21
pushing symbol (null) -> ST_21
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 480-1020, declarative pass
-----------------
float main()
	println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) end
end
-----------------
   semantic got func_def, "main", prod 0, @ 480-1020, declarative pass
-----------------
float main()
	println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) end
end
-----------------
symbol table ST saved
new symbol table: ST_24
symbol table ST loaded
pushing symbol main -> ST
symbol table ST saved
symbol table ST_24 saved
analyzing (decl) scope ST_24
symbol table so far:
Symbol table 'ST_24'->'ST':
    semantic got stmt_list, prod 0, @ 494-1016, declarative pass
-----------------
println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) en
-----------------
     semantic got stmt, prod 0, @ 494-511, declarative pass
-----------------
println("Hello Wo
-----------------
      semantic got imp_stmt, prod 2, @ 494-511, declarative pass
-----------------
println("Hello Wo
-----------------
     semantic got stmt, prod 1, @ 513-526, declarative pass
-----------------
class vec2 A;
-----------------
      semantic got decl_stmt, prod 2, @ 513-526, declarative pass
-----------------
class vec2 A;
-----------------
       semantic got var_decl, "A", prod 0, @ 513-525, declarative pass
-----------------
class vec2 A
-----------------
found symbol 'vec2'->'ST'
pushing symbol A -> ST_24
     semantic got stmt, prod 1, @ 528-541, declarative pass
-----------------
class vec2 B;
-----------------
      semantic got decl_stmt, prod 2, @ 528-541, declarative pass
-----------------
class vec2 B;
-----------------
       semantic got var_decl, "B", prod 0, @ 528-540, declarative pass
-----------------
class vec2 B
-----------------
found symbol 'vec2'->'ST'
pushing symbol B -> ST_24
     semantic got stmt, prod 0, @ 543-551, declarative pass
-----------------
B.X = 1;
-----------------
      semantic got imp_stmt, prod 2, @ 543-551, declarative pass
-----------------
B.X = 1;
-----------------
     semantic got stmt, prod 0, @ 553-561, declarative pass
-----------------
B.Y = 3;
-----------------
      semantic got imp_stmt, prod 2, @ 553-561, declarative pass
-----------------
B.Y = 3;
-----------------
     semantic got stmt, prod 0, @ 563-571, declarative pass
-----------------
A.X = 5;
-----------------
      semantic got imp_stmt, prod 2, @ 563-571, declarative pass
-----------------
A.X = 5;
-----------------
     semantic got stmt, prod 0, @ 573-581, declarative pass
-----------------
A.Y = 7;
-----------------
      semantic got imp_stmt, prod 2, @ 573-581, declarative pass
-----------------
A.Y = 7;
-----------------
     semantic got stmt, prod 0, @ 583-603, declarative pass
-----------------
print("A.avg() = ");
-----------------
      semantic got imp_stmt, prod 2, @ 583-603, declarative pass
-----------------
print("A.avg() = ");
-----------------
     semantic got stmt, prod 0, @ 603-621, declarative pass
-----------------
printnum(A.avg());
-----------------
      semantic got imp_stmt, prod 2, @ 603-621, declarative pass
-----------------
printnum(A.avg());
-----------------
     semantic got stmt, prod 0, @ 621-633, declarative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 621-633, declarative pass
-----------------
println("");
-----------------
     semantic got stmt, prod 0, @ 635-655, declarative pass
-----------------
print("B.avg() = ");
-----------------
      semantic got imp_stmt, prod 2, @ 635-655, declarative pass
-----------------
print("B.avg() = ");
-----------------
     semantic got stmt, prod 0, @ 655-673, declarative pass
-----------------
printnum(B.avg());
-----------------
      semantic got imp_stmt, prod 2, @ 655-673, declarative pass
-----------------
printnum(B.avg());
-----------------
     semantic got stmt, prod 0, @ 673-685, declarative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 673-685, declarative pass
-----------------
println("");
-----------------
     semantic got stmt, prod 0, @ 687-703, declarative pass
-----------------
print("A.X = ");
-----------------
      semantic got imp_stmt, prod 2, @ 687-703, declarative pass
-----------------
print("A.X = ");
-----------------
     semantic got stmt, prod 0, @ 703-717, declarative pass
-----------------
printnum(A.X);
-----------------
      semantic got imp_stmt, prod 2, @ 703-717, declarative pass
-----------------
printnum(A.X);
-----------------
     semantic got stmt, prod 0, @ 717-735, declarative pass
-----------------
print(", A.Y = ");
-----------------
      semantic got imp_stmt, prod 2, @ 717-735, declarative pass
-----------------
print(", A.Y = ");
-----------------
     semantic got stmt, prod 0, @ 735-749, declarative pass
-----------------
printnum(A.Y);
-----------------
      semantic got imp_stmt, prod 2, @ 735-749, declarative pass
-----------------
printnum(A.Y);
-----------------
     semantic got stmt, prod 0, @ 749-761, declarative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 749-761, declarative pass
-----------------
println("");
-----------------
     semantic got stmt, prod 0, @ 763-774, declarative pass
-----------------
A.switch();
-----------------
      semantic got imp_stmt, prod 2, @ 763-774, declarative pass
-----------------
A.switch();
-----------------
     semantic got stmt, prod 0, @ 776-796, declarative pass
-----------------
println("switched");
-----------------
      semantic got imp_stmt, prod 2, @ 776-796, declarative pass
-----------------
println("switched");
-----------------
     semantic got stmt, prod 0, @ 798-814, declarative pass
-----------------
print("A.X = ");
-----------------
      semantic got imp_stmt, prod 2, @ 798-814, declarative pass
-----------------
print("A.X = ");
-----------------
     semantic got stmt, prod 0, @ 814-828, declarative pass
-----------------
printnum(A.X);
-----------------
      semantic got imp_stmt, prod 2, @ 814-828, declarative pass
-----------------
printnum(A.X);
-----------------
     semantic got stmt, prod 0, @ 828-846, declarative pass
-----------------
print(", A.Y = ");
-----------------
      semantic got imp_stmt, prod 2, @ 828-846, declarative pass
-----------------
print(", A.Y = ");
-----------------
     semantic got stmt, prod 0, @ 846-860, declarative pass
-----------------
printnum(A.Y);
-----------------
      semantic got imp_stmt, prod 2, @ 846-860, declarative pass
-----------------
printnum(A.Y);
-----------------
     semantic got stmt, prod 0, @ 860-872, declarative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 860-872, declarative pass
-----------------
println("");
-----------------
     semantic got stmt, prod 0, @ 1004-1016, declarative pass
-----------------
while(1) end
-----------------
      semantic got imp_stmt, prod 1, @ 1004-1016, declarative pass
-----------------
while(1) end
-----------------
       semantic got while_loop, prod 0, @ 1004-1016, declarative pass
-----------------
while(1) end
-----------------
symbol table ST_24 saved
new symbol table: ST_25
symbol table ST_25 saved
analyzing (decl) scope ST_25
symbol table so far:
Symbol table 'ST_25'->'ST_24':
        semantic got stmt_list, "<empty>", prod 1, @ 1010-1011, declarative pass
-----------------
1
-----------------
symbol table ST_25 loaded
symbol table ST_24 loaded
symbol table ST_24 loaded
symbol table ST loaded
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST / CS
symbol table so far:
Symbol table 'ST':
classes:
name	ir_name	scope
vec2	vec2	ST_21
functions:
type	name	ir_name	scope	code
float	delay	_delay	ST_1	?
float	scr	_scr	ST_3	?
float	strtest	_strtest	ST_4	?
float	strlen	_strlen	ST_5	?
float	strrev	_strrev	ST_7	?
float	itoa	_itoa	ST_9	?
float	print	_print	ST_12	?
float	println	_println	ST_14	?
float	printnum	_printnum	ST_16	?
float	printXY	_printXY	ST_17	?
float	unreachable	_unreachable	ST_19	?
float	main	_main	ST_24	?
variables:
type	name	ir_name	size	pos
float	adr_buttons	adr_buttons	1	0
float	adr_leds	adr_leds	1	1
float	adr_screen	adr_screen	1	2
float	adr_keyboard	adr_keyboard	1	3
float	adr_console	adr_console	1	4
float	printX	printX	1	5
float	printY	printY	1	6
 semantic got decl_stmt_list, prod 0, @ 0-1020, imperative pass
-----------------
float *adr_buttons = 65536;  	//buttons
float *adr_leds = 65546;		//leds
float *adr_screen = 65556;		//val screens
float *adr_keyboard = 65566;	//keyboard
float *adr_console = 65866;		//console screen

float delay(float n)
	while(n--) end
end

//float T = 0;
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end

float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
endÿ
-----------------
  semantic got decl_stmt, prod 2, @ 0-27, imperative pass
-----------------
float *adr_buttons = 65536;
-----------------
   semantic got var_decl_assign, "adr_buttons", prod 0, @ 0-26, imperative pass
-----------------
float *adr_buttons = 65536
-----------------
found symbol 'adr_buttons'->'ST'
    semantic got expr_const, "65536", prod 0, @ 21-26, imperative pass
-----------------
65536
-----------------
  semantic got decl_stmt, prod 2, @ 40-64, imperative pass
-----------------
float *adr_leds = 65546;
-----------------
   semantic got var_decl_assign, "adr_leds", prod 0, @ 40-63, imperative pass
-----------------
float *adr_leds = 65546
-----------------
found symbol 'adr_leds'->'ST'
    semantic got expr_const, "65546", prod 0, @ 58-63, imperative pass
-----------------
65546
-----------------
  semantic got decl_stmt, prod 2, @ 73-99, imperative pass
-----------------
float *adr_screen = 65556;
-----------------
   semantic got var_decl_assign, "adr_screen", prod 0, @ 73-98, imperative pass
-----------------
float *adr_screen = 65556
-----------------
found symbol 'adr_screen'->'ST'
    semantic got expr_const, "65556", prod 0, @ 93-98, imperative pass
-----------------
65556
-----------------
  semantic got decl_stmt, prod 2, @ 115-143, imperative pass
-----------------
float *adr_keyboard = 65566;
-----------------
   semantic got var_decl_assign, "adr_keyboard", prod 0, @ 115-142, imperative pass
-----------------
float *adr_keyboard = 65566
-----------------
found symbol 'adr_keyboard'->'ST'
    semantic got expr_const, "65566", prod 0, @ 137-142, imperative pass
-----------------
65566
-----------------
  semantic got decl_stmt, prod 2, @ 155-182, imperative pass
-----------------
float *adr_console = 65866;
-----------------
   semantic got var_decl_assign, "adr_console", prod 0, @ 155-181, imperative pass
-----------------
float *adr_console = 65866
-----------------
found symbol 'adr_console'->'ST'
    semantic got expr_const, "65866", prod 0, @ 176-181, imperative pass
-----------------
65866
-----------------
  semantic got decl_stmt, prod 1, @ 202-242, imperative pass
-----------------
float delay(float n)
	while(n--) end
end
-----------------
   semantic got func_def, "delay", prod 0, @ 202-242, imperative pass
-----------------
float delay(float n)
	while(n--) end
end
-----------------
found symbol 'delay'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_1 / CS_2
symbol table so far:
Symbol table 'ST_1'->'ST':
parameters:
type	name	ir_name	size	pos
float	n	n	1	0
    semantic got stmt_list, prod 0, @ 224-238, imperative pass
-----------------
while(n--) end
-----------------
     semantic got stmt, prod 0, @ 224-238, imperative pass
-----------------
while(n--) end
-----------------
      semantic got imp_stmt, prod 1, @ 224-238, imperative pass
-----------------
while(n--) end
-----------------
       semantic got while_loop, prod 0, @ 224-238, imperative pass
-----------------
while(n--) end
-----------------
        semantic got expr_--, prod 0, @ 230-233, imperative pass
-----------------
n--
-----------------
         semantic got expr_id, "n", prod 0, @ 230-231, imperative pass
-----------------
n
-----------------
found symbol 'n'->'ST_1'
found variable 'n' of type 'float'
symbol table ST_1 saved
symbol table ST_2 saved
analyzing (imp) scope ST_2 / CS_3
symbol table so far:
Symbol table 'ST_2'->'ST_1':
        semantic got stmt_list, "<empty>", prod 1, @ 230-233, imperative pass
-----------------
n--
-----------------
symbol table ST_2 loaded
emitting code segment CS_3
symbol table ST_1 loaded
symbol table ST loaded
emitting code segment CS_2
emitting command [  FRAME ENTER]
emitting command [  SYMBOL n ARG]
emitting command [  /* while(n--) */]
emitting command [  SYMBOL lbl_while_do LABEL]
emitting command [  SYMBOL lbl_while_exit LABEL]
emitting command [  LABEL lbl_while_do]
emitting command [  MOV temp n]
emitting command [  SUB n n 1]
emitting command [  JE 0 temp lbl_while_exit]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do]
emitting command [  LABEL lbl_while_exit]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 259-355, imperative pass
-----------------
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end
-----------------
   semantic got func_def, "scr", prod 0, @ 259-355, imperative pass
-----------------
float scr(float a, float b)
	adr_screen[a] = b;
	//delay(100);
	//T++;
	//adr_screen[a] = T;
end
-----------------
found symbol 'scr'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_3 / CS_4
symbol table so far:
Symbol table 'ST_3'->'ST':
parameters:
type	name	ir_name	size	pos
float	a	a	1	0
float	b	b	1	1
    semantic got stmt_list, prod 0, @ 288-306, imperative pass
-----------------
adr_screen[a] = b;
-----------------
     semantic got stmt, prod 0, @ 288-306, imperative pass
-----------------
adr_screen[a] = b;
-----------------
      semantic got imp_stmt, prod 2, @ 288-306, imperative pass
-----------------
adr_screen[a] = b;
-----------------
       semantic got expr_=, prod 0, @ 288-305, imperative pass
-----------------
adr_screen[a] = b
-----------------
        semantic got expr_index, prod 0, @ 288-301, imperative pass
-----------------
adr_screen[a]
-----------------
         semantic got expr_id, "a", prod 0, @ 299-300, imperative pass
-----------------
a
-----------------
found symbol 'a'->'ST_3'
found variable 'a' of type 'float'
         semantic got expr_id, "adr_screen", prod 0, @ 288-298, imperative pass
-----------------
adr_screen
-----------------
found symbol 'adr_screen'->'ST'
found variable 'adr_screen' of type 'float'
found symbol 'adr_screen'->'ST'
        semantic got expr_id, "b", prod 0, @ 304-305, imperative pass
-----------------
b
-----------------
found symbol 'b'->'ST_3'
found variable 'b' of type 'float'
symbol table ST loaded
emitting code segment CS_4
emitting command [  FRAME ENTER]
emitting command [  SYMBOL a ARG]
emitting command [  SYMBOL b ARG]
emitting command [  /* adr_screen[a] = b; */]
emitting command [  ADD temp_1 a adr_screen]
emitting command [  MOV *temp_1 b]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 357-429, imperative pass
-----------------
float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
end
-----------------
   semantic got func_def, "strtest", prod 0, @ 357-429, imperative pass
-----------------
float strtest(float *str)
	scr(3,str);
	scr(4,*str);
	scr(5,str[0]);
end
-----------------
found symbol 'strtest'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_4 / CS_5
symbol table so far:
Symbol table 'ST_4'->'ST':
parameters:
type	name	ir_name	size	pos
float	str	str	1	0
    semantic got stmt_list, prod 0, @ 384-425, imperative pass
-----------------
scr(3,str);
	scr(4,*str);
	scr(5,str[0])
-----------------
     semantic got stmt, prod 0, @ 384-395, imperative pass
-----------------
scr(3,str);
-----------------
      semantic got imp_stmt, prod 2, @ 384-395, imperative pass
-----------------
scr(3,str);
-----------------
       semantic got expr_call, prod 0, @ 384-394, imperative pass
-----------------
scr(3,str)
-----------------
        semantic got expr_id, "scr", prod 0, @ 384-387, imperative pass
-----------------
scr
-----------------
found symbol 'scr'->'ST'
found variable 'scr' of type '(null)'
        semantic got expr_const, "3", prod 0, @ 388-389, imperative pass
-----------------
3
-----------------
        semantic got expr_id, "str", prod 0, @ 390-393, imperative pass
-----------------
str
-----------------
found symbol 'str'->'ST_4'
found variable 'str' of type 'float'
     semantic got stmt, prod 0, @ 397-409, imperative pass
-----------------
scr(4,*str);
-----------------
      semantic got imp_stmt, prod 2, @ 397-409, imperative pass
-----------------
scr(4,*str);
-----------------
       semantic got expr_call, prod 0, @ 397-408, imperative pass
-----------------
scr(4,*str)
-----------------
        semantic got expr_id, "scr", prod 0, @ 397-400, imperative pass
-----------------
scr
-----------------
found symbol 'scr'->'ST'
found variable 'scr' of type '(null)'
        semantic got expr_const, "4", prod 0, @ 401-402, imperative pass
-----------------
4
-----------------
        semantic got expr_deref, prod 0, @ 403-407, imperative pass
-----------------
*str
-----------------
         semantic got expr_id, "str", prod 0, @ 404-407, imperative pass
-----------------
str
-----------------
found symbol 'str'->'ST_4'
found variable 'str' of type 'float'
     semantic got stmt, prod 0, @ 411-425, imperative pass
-----------------
scr(5,str[0]);
-----------------
      semantic got imp_stmt, prod 2, @ 411-425, imperative pass
-----------------
scr(5,str[0]);
-----------------
       semantic got expr_call, prod 0, @ 411-424, imperative pass
-----------------
scr(5,str[0])
-----------------
        semantic got expr_id, "scr", prod 0, @ 411-414, imperative pass
-----------------
scr
-----------------
found symbol 'scr'->'ST'
found variable 'scr' of type '(null)'
        semantic got expr_const, "5", prod 0, @ 415-416, imperative pass
-----------------
5
-----------------
        semantic got expr_index, prod 0, @ 417-423, imperative pass
-----------------
str[0]
-----------------
         semantic got expr_const, "0", prod 0, @ 421-422, imperative pass
-----------------
0
-----------------
         semantic got expr_id, "str", prod 0, @ 417-420, imperative pass
-----------------
str
-----------------
found symbol 'str'->'ST_4'
found variable 'str' of type 'float'
found symbol 'str'->'ST_4'
symbol table ST loaded
emitting code segment CS_5
emitting command [  FRAME ENTER]
emitting command [  SYMBOL str ARG]
emitting command [  /* scr(3,str); */]
emitting command [  CALL temp_2 _scr 3 str]
emitting command [  /* scr(4,*str); */]
emitting command [  MOV temp_3 *str]
emitting command [  CALL temp_4 _scr 4 temp_3]
emitting command [  /* scr(5,str[0]); */]
emitting command [  ADD temp_5 0 str]
emitting command [  CALL temp_6 _scr 5 *temp_5]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 0-78, imperative pass
-----------------
float strlen(float *S)
	float len = 0;
	while(S[len++]) end
	return --len;
end
-----------------
   semantic got func_def, "strlen", prod 0, @ 0-78, imperative pass
-----------------
float strlen(float *S)
	float len = 0;
	while(S[len++]) end
	return --len;
end
-----------------
found symbol 'strlen'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_5 / CS_6
symbol table so far:
Symbol table 'ST_5'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S	1	0
variables:
type	name	ir_name	size	pos
float	len	len	1	0
    semantic got stmt_list, prod 0, @ 24-74, imperative pass
-----------------
float len = 0;
	while(S[len++]) end
	return --len
-----------------
     semantic got stmt, prod 1, @ 24-38, imperative pass
-----------------
float len = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 24-38, imperative pass
-----------------
float len = 0;
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 24-37, imperative pass
-----------------
float len = 0
-----------------
found symbol 'len'->'ST_5'
        semantic got expr_const, "0", prod 0, @ 36-37, imperative pass
-----------------
0
-----------------
     semantic got stmt, prod 0, @ 40-59, imperative pass
-----------------
while(S[len++]) end
-----------------
      semantic got imp_stmt, prod 1, @ 40-59, imperative pass
-----------------
while(S[len++]) end
-----------------
       semantic got while_loop, prod 0, @ 40-59, imperative pass
-----------------
while(S[len++]) end
-----------------
        semantic got expr_index, prod 0, @ 46-54, imperative pass
-----------------
S[len++]
-----------------
         semantic got expr_++, prod 0, @ 48-53, imperative pass
-----------------
len++
-----------------
          semantic got expr_id, "len", prod 0, @ 48-51, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_5'
found variable 'len' of type 'float'
         semantic got expr_id, "S", prod 0, @ 46-47, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_5'
found variable 'S' of type 'float'
found symbol 'S'->'ST_5'
symbol table ST_5 saved
symbol table ST_6 saved
analyzing (imp) scope ST_6 / CS_7
symbol table so far:
Symbol table 'ST_6'->'ST_5':
        semantic got stmt_list, "<empty>", prod 1, @ 46-54, imperative pass
-----------------
S[len++]
-----------------
symbol table ST_6 loaded
emitting code segment CS_7
symbol table ST_5 loaded
     semantic got stmt, prod 0, @ 61-74, imperative pass
-----------------
return --len;
-----------------
      semantic got imp_stmt, prod 4, @ 61-74, imperative pass
-----------------
return --len;
-----------------
       semantic got expr_--, prod 1, @ 68-73, imperative pass
-----------------
--len
-----------------
        semantic got expr_id, "len", prod 0, @ 70-73, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_5'
found variable 'len' of type 'float'
symbol table ST loaded
emitting code segment CS_6
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S ARG]
emitting command [  SYMBOL len VAR]
emitting command [  MOV len 0]
emitting command [  /* while(S[len++]) */]
emitting command [  SYMBOL lbl_while_do_1 LABEL]
emitting command [  SYMBOL lbl_while_exit_1 LABEL]
emitting command [  LABEL lbl_while_do_1]
emitting command [  MOV temp_7 len]
emitting command [  ADD len len 1]
emitting command [  ADD temp_8 temp_7 S]
emitting command [  JE 0 *temp_8 lbl_while_exit_1]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_1]
emitting command [  LABEL lbl_while_exit_1]
emitting command [  /* end while*/]
emitting command [  /* return --len; */]
emitting command [  SUB len len 1]
emitting command [  RET len]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 80-230, imperative pass
-----------------
float strrev(float *S)
	float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	end
end
-----------------
   semantic got func_def, "strrev", prod 0, @ 80-230, imperative pass
-----------------
float strrev(float *S)
	float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	end
end
-----------------
found symbol 'strrev'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_7 / CS_8
symbol table so far:
Symbol table 'ST_7'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_1	1	0
variables:
type	name	ir_name	size	pos
float	len	len_1	1	0
float	I	I	1	1
    semantic got stmt_list, prod 0, @ 104-226, imperative pass
-----------------
float len = strlen(S);
	float I;
	for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
     semantic got stmt, prod 1, @ 104-126, imperative pass
-----------------
float len = strlen(S);
-----------------
      semantic got decl_stmt, prod 2, @ 104-126, imperative pass
-----------------
float len = strlen(S);
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 104-125, imperative pass
-----------------
float len = strlen(S)
-----------------
found symbol 'len'->'ST_7'
        semantic got expr_call, prod 0, @ 116-125, imperative pass
-----------------
strlen(S)
-----------------
         semantic got expr_id, "strlen", prod 0, @ 116-122, imperative pass
-----------------
strlen
-----------------
found symbol 'strlen'->'ST'
found variable 'strlen' of type '(null)'
         semantic got expr_id, "S", prod 0, @ 123-124, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_7'
found variable 'S' of type 'float'
     semantic got stmt, prod 1, @ 128-136, imperative pass
-----------------
float I;
-----------------
      semantic got decl_stmt, prod 2, @ 128-136, imperative pass
-----------------
float I;
-----------------
       semantic got var_decl, "I", prod 0, @ 128-135, imperative pass
-----------------
float I
-----------------
     semantic got stmt, prod 0, @ 138-226, imperative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
      semantic got imp_stmt, prod 5, @ 138-226, imperative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
       semantic got for_loop, prod 0, @ 138-226, imperative pass
-----------------
for(I = 0; I < len/2; I++)
		float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = C;
	en
-----------------
symbol table ST_7 saved
        semantic got stmt, prod 0, @ 142-148, imperative pass
-----------------
I = 0;
-----------------
         semantic got imp_stmt, prod 2, @ 142-148, imperative pass
-----------------
I = 0;
-----------------
          semantic got expr_=, prod 0, @ 142-147, imperative pass
-----------------
I = 0
-----------------
           semantic got expr_id, "I", prod 0, @ 142-143, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
           semantic got expr_const, "0", prod 0, @ 146-147, imperative pass
-----------------
0
-----------------
        semantic got expr_<, prod 0, @ 149-158, imperative pass
-----------------
I < len/2
-----------------
         semantic got expr_id, "I", prod 0, @ 149-150, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
         semantic got expr_/, prod 0, @ 153-158, imperative pass
-----------------
len/2
-----------------
          semantic got expr_id, "len", prod 0, @ 153-156, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_7'
found variable 'len' of type 'float'
          semantic got expr_const, "2", prod 0, @ 157-158, imperative pass
-----------------
2
-----------------
        semantic got stmt_list, prod 0, @ 167-221, imperative pass
-----------------
float C = S[I];
		S[I] = S[len-1-I];
		S[len-1-I] = 
-----------------
         semantic got stmt, prod 1, @ 167-182, imperative pass
-----------------
float C = S[I];
-----------------
          semantic got decl_stmt, prod 2, @ 167-182, imperative pass
-----------------
float C = S[I];
-----------------
           semantic got var_decl_assign, "C", prod 0, @ 167-181, imperative pass
-----------------
float C = S[I]
-----------------
found symbol 'C'->'ST_8'
            semantic got expr_index, prod 0, @ 177-181, imperative pass
-----------------
S[I]
-----------------
             semantic got expr_id, "I", prod 0, @ 179-180, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
             semantic got expr_id, "S", prod 0, @ 177-178, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_7'
found variable 'S' of type 'float'
found symbol 'S_1'->'ST_7'
         semantic got stmt, prod 0, @ 185-203, imperative pass
-----------------
S[I] = S[len-1-I];
-----------------
          semantic got imp_stmt, prod 2, @ 185-203, imperative pass
-----------------
S[I] = S[len-1-I];
-----------------
           semantic got expr_=, prod 0, @ 185-202, imperative pass
-----------------
S[I] = S[len-1-I]
-----------------
            semantic got expr_index, prod 0, @ 185-189, imperative pass
-----------------
S[I]
-----------------
             semantic got expr_id, "I", prod 0, @ 187-188, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
             semantic got expr_id, "S", prod 0, @ 185-186, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_7'
found variable 'S' of type 'float'
found symbol 'S_1'->'ST_7'
            semantic got expr_index, prod 0, @ 192-202, imperative pass
-----------------
S[len-1-I]
-----------------
             semantic got expr_-, prod 0, @ 194-201, imperative pass
-----------------
len-1-I
-----------------
              semantic got expr_-, prod 0, @ 194-199, imperative pass
-----------------
len-1
-----------------
               semantic got expr_id, "len", prod 0, @ 194-197, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_7'
found variable 'len' of type 'float'
               semantic got expr_const, "1", prod 0, @ 198-199, imperative pass
-----------------
1
-----------------
              semantic got expr_id, "I", prod 0, @ 200-201, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
             semantic got expr_id, "S", prod 0, @ 192-193, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_7'
found variable 'S' of type 'float'
found symbol 'S_1'->'ST_7'
         semantic got stmt, prod 0, @ 206-221, imperative pass
-----------------
S[len-1-I] = C;
-----------------
          semantic got imp_stmt, prod 2, @ 206-221, imperative pass
-----------------
S[len-1-I] = C;
-----------------
           semantic got expr_=, prod 0, @ 206-220, imperative pass
-----------------
S[len-1-I] = C
-----------------
            semantic got expr_index, prod 0, @ 206-216, imperative pass
-----------------
S[len-1-I]
-----------------
             semantic got expr_-, prod 0, @ 208-215, imperative pass
-----------------
len-1-I
-----------------
              semantic got expr_-, prod 0, @ 208-213, imperative pass
-----------------
len-1
-----------------
               semantic got expr_id, "len", prod 0, @ 208-211, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_7'
found variable 'len' of type 'float'
               semantic got expr_const, "1", prod 0, @ 212-213, imperative pass
-----------------
1
-----------------
              semantic got expr_id, "I", prod 0, @ 214-215, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
             semantic got expr_id, "S", prod 0, @ 206-207, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_7'
found variable 'S' of type 'float'
found symbol 'S_1'->'ST_7'
            semantic got expr_id, "C", prod 0, @ 219-220, imperative pass
-----------------
C
-----------------
found symbol 'C'->'ST_8'
found variable 'C' of type 'float'
        semantic got expr_++, prod 0, @ 160-163, imperative pass
-----------------
I++
-----------------
         semantic got expr_id, "I", prod 0, @ 160-161, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_7'
found variable 'I' of type 'float'
emitting code segment CS_9
emitting command [   /* I = 0; */]
emitting command [   /* I = 0; */]
emitting command [   MOV I 0]
emitting command [   SYMBOL lbl_for LABEL]
emitting command [   SYMBOL lbl_for_exit LABEL]
emitting command [   LABEL lbl_for]
emitting command [   /* I < len/2 */]
emitting command [   DIV temp_10 len_1 2]
emitting command [   LESS temp_11 I temp_10]
emitting command [   JE 0 temp_11 lbl_for_exit]
emitting command [   /* loop body */]
emitting command [   ADD temp_12 I S_1]
emitting command [   MOV C *temp_12]
emitting command [   /* S[I] = S[len-1-I]; */]
emitting command [   ADD temp_13 I S_1]
emitting command [   SUB temp_14 len_1 1]
emitting command [   SUB temp_15 temp_14 I]
emitting command [   ADD temp_16 temp_15 S_1]
emitting command [   MOV *temp_13 *temp_16]
emitting command [   /* S[len-1-I] = C; */]
emitting command [   SUB temp_17 len_1 1]
emitting command [   SUB temp_18 temp_17 I]
emitting command [   ADD temp_19 temp_18 S_1]
emitting command [   MOV *temp_19 C]
emitting command [   /* I++ */]
emitting command [   MOV temp_20 I]
emitting command [   ADD I I 1]
emitting command [   JMP lbl_for]
emitting command [   LABEL lbl_for_exit]
emitting command [   /* end for */]
symbol table ST_7 loaded
symbol table ST loaded
emitting code segment CS_8
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_1 ARG]
emitting command [  SYMBOL len_1 VAR]
emitting command [  SYMBOL I VAR]
emitting command [  CALL temp_9 _strlen S_1]
emitting command [  MOV len_1 temp_9]
emitting command [  /* for(I = 0; I < len/2; I++) */]
emitting command [     /* I = 0; */]
emitting command [     /* I = 0; */]
emitting command [     MOV I 0]
emitting command [     SYMBOL lbl_for LABEL]
emitting command [     SYMBOL lbl_for_exit LABEL]
emitting command [     LABEL lbl_for]
emitting command [     /* I < len/2 */]
emitting command [     DIV temp_10 len_1 2]
emitting command [     LESS temp_11 I temp_10]
emitting command [     JE 0 temp_11 lbl_for_exit]
emitting command [     /* loop body */]
emitting command [     ADD temp_12 I S_1]
emitting command [     MOV C *temp_12]
emitting command [     /* S[I] = S[len-1-I]; */]
emitting command [     ADD temp_13 I S_1]
emitting command [     SUB temp_14 len_1 1]
emitting command [     SUB temp_15 temp_14 I]
emitting command [     ADD temp_16 temp_15 S_1]
emitting command [     MOV *temp_13 *temp_16]
emitting command [     /* S[len-1-I] = C; */]
emitting command [     SUB temp_17 len_1 1]
emitting command [     SUB temp_18 temp_17 I]
emitting command [     ADD temp_19 temp_18 S_1]
emitting command [     MOV *temp_19 C]
emitting command [     /* I++ */]
emitting command [     MOV temp_20 I]
emitting command [     ADD I I 1]
emitting command [     JMP lbl_for]
emitting command [     LABEL lbl_for_exit]
emitting command [     /* end for */]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 232-393, imperative pass
-----------------
float itoa(float *buff, float N)
	float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff);
end
-----------------
   semantic got func_def, "itoa", prod 0, @ 232-393, imperative pass
-----------------
float itoa(float *buff, float N)
	float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff);
end
-----------------
found symbol 'itoa'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_9 / CS_10
symbol table so far:
Symbol table 'ST_9'->'ST':
parameters:
type	name	ir_name	size	pos
float	buff	buff	1	0
float	N	N	1	1
variables:
type	name	ir_name	size	pos
float	I	I_1	1	0
    semantic got stmt_list, prod 0, @ 266-389, imperative pass
-----------------
float I = 0;
	while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	end
	if(I==0) buff[I++] = '0'; end
	buff[I] = 0;
	strrev(buff)
-----------------
     semantic got stmt, prod 1, @ 266-278, imperative pass
-----------------
float I = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 266-278, imperative pass
-----------------
float I = 0;
-----------------
       semantic got var_decl_assign, "I", prod 0, @ 266-277, imperative pass
-----------------
float I = 0
-----------------
found symbol 'I'->'ST_9'
        semantic got expr_const, "0", prod 0, @ 276-277, imperative pass
-----------------
0
-----------------
     semantic got stmt, prod 0, @ 280-329, imperative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
      semantic got imp_stmt, prod 1, @ 280-329, imperative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
       semantic got while_loop, prod 0, @ 280-329, imperative pass
-----------------
while(N)
		buff[I++] = '0'+N%10;
		N = N/10;
	en
-----------------
        semantic got expr_id, "N", prod 0, @ 286-287, imperative pass
-----------------
N
-----------------
found symbol 'N'->'ST_9'
found variable 'N' of type 'float'
symbol table ST_9 saved
symbol table ST_10 saved
analyzing (imp) scope ST_10 / CS_11
symbol table so far:
Symbol table 'ST_10'->'ST_9':
        semantic got stmt_list, prod 0, @ 291-324, imperative pass
-----------------
buff[I++] = '0'+N%10;
		N = N/1
-----------------
         semantic got stmt, prod 0, @ 291-312, imperative pass
-----------------
buff[I++] = '0'+N%10;
-----------------
          semantic got imp_stmt, prod 2, @ 291-312, imperative pass
-----------------
buff[I++] = '0'+N%10;
-----------------
           semantic got expr_=, prod 0, @ 291-311, imperative pass
-----------------
buff[I++] = '0'+N%10
-----------------
            semantic got expr_index, prod 0, @ 291-300, imperative pass
-----------------
buff[I++]
-----------------
             semantic got expr_++, prod 0, @ 296-299, imperative pass
-----------------
I++
-----------------
              semantic got expr_id, "I", prod 0, @ 296-297, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_9'
found variable 'I' of type 'float'
             semantic got expr_id, "buff", prod 0, @ 291-295, imperative pass
-----------------
buff
-----------------
found symbol 'buff'->'ST_9'
found variable 'buff' of type 'float'
found symbol 'buff'->'ST_9'
            semantic got expr_+, prod 0, @ 303-311, imperative pass
-----------------
'0'+N%10
-----------------
             semantic got expr_const, "'0'", prod 4, @ 303-306, imperative pass
-----------------
'0'
-----------------
             semantic got expr_%, prod 0, @ 307-311, imperative pass
-----------------
N%10
-----------------
              semantic got expr_id, "N", prod 0, @ 307-308, imperative pass
-----------------
N
-----------------
found symbol 'N'->'ST_9'
found variable 'N' of type 'float'
              semantic got expr_const, "10", prod 0, @ 309-311, imperative pass
-----------------
10
-----------------
         semantic got stmt, prod 0, @ 315-324, imperative pass
-----------------
N = N/10;
-----------------
          semantic got imp_stmt, prod 2, @ 315-324, imperative pass
-----------------
N = N/10;
-----------------
           semantic got expr_=, prod 0, @ 315-323, imperative pass
-----------------
N = N/10
-----------------
            semantic got expr_id, "N", prod 0, @ 315-316, imperative pass
-----------------
N
-----------------
found symbol 'N'->'ST_9'
found variable 'N' of type 'float'
            semantic got expr_/, prod 0, @ 319-323, imperative pass
-----------------
N/10
-----------------
             semantic got expr_id, "N", prod 0, @ 319-320, imperative pass
-----------------
N
-----------------
found symbol 'N'->'ST_9'
found variable 'N' of type 'float'
             semantic got expr_const, "10", prod 0, @ 321-323, imperative pass
-----------------
10
-----------------
symbol table ST_10 loaded
emitting code segment CS_11
emitting command [   /* buff[I++] = '0'+N%10; */]
emitting command [   MOV temp_21 I_1]
emitting command [   ADD I_1 I_1 1]
emitting command [   ADD temp_22 temp_21 buff]
emitting command [   MOD temp_23 N 10]
emitting command [   ADD temp_24 48 temp_23]
emitting command [   MOV *temp_22 temp_24]
emitting command [   /* N = N/10; */]
emitting command [   DIV temp_25 N 10]
emitting command [   MOV N temp_25]
symbol table ST_9 loaded
     semantic got stmt, prod 0, @ 331-360, imperative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
      semantic got imp_stmt, prod 0, @ 331-360, imperative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
       semantic got if_block, prod 0, @ 331-360, imperative pass
-----------------
if(I==0) buff[I++] = '0'; end
-----------------
symbol table ST_9 saved
        semantic got if_then, prod 0, @ 331-356, imperative pass
-----------------
if(I==0) buff[I++] = '0';
-----------------
symbol table ST_9 saved
         semantic got expr_==, prod 0, @ 334-338, imperative pass
-----------------
I==0
-----------------
          semantic got expr_id, "I", prod 0, @ 334-335, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_9'
found variable 'I' of type 'float'
          semantic got expr_const, "0", prod 0, @ 337-338, imperative pass
-----------------
0
-----------------
symbol table ST_11 saved
analyzing (imp) scope ST_11 / CS_12
symbol table so far:
Symbol table 'ST_11'->'ST_9':
         semantic got stmt_list, prod 0, @ 340-356, imperative pass
-----------------
buff[I++] = '0';
-----------------
          semantic got stmt, prod 0, @ 340-356, imperative pass
-----------------
buff[I++] = '0';
-----------------
           semantic got imp_stmt, prod 2, @ 340-356, imperative pass
-----------------
buff[I++] = '0';
-----------------
            semantic got expr_=, prod 0, @ 340-355, imperative pass
-----------------
buff[I++] = '0'
-----------------
             semantic got expr_index, prod 0, @ 340-349, imperative pass
-----------------
buff[I++]
-----------------
              semantic got expr_++, prod 0, @ 345-348, imperative pass
-----------------
I++
-----------------
               semantic got expr_id, "I", prod 0, @ 345-346, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_9'
found variable 'I' of type 'float'
              semantic got expr_id, "buff", prod 0, @ 340-344, imperative pass
-----------------
buff
-----------------
found symbol 'buff'->'ST_9'
found variable 'buff' of type 'float'
found symbol 'buff'->'ST_9'
             semantic got expr_const, "'0'", prod 4, @ 352-355, imperative pass
-----------------
'0'
-----------------
symbol table ST_11 loaded
emitting code segment CS_12
emitting command [   /* buff[I++] = '0'; */]
emitting command [   MOV temp_27 I_1]
emitting command [   ADD I_1 I_1 1]
emitting command [   ADD temp_28 temp_27 buff]
emitting command [   MOV *temp_28 48]
symbol table ST_9 loaded
symbol table ST_9 loaded
     semantic got stmt, prod 0, @ 362-374, imperative pass
-----------------
buff[I] = 0;
-----------------
      semantic got imp_stmt, prod 2, @ 362-374, imperative pass
-----------------
buff[I] = 0;
-----------------
       semantic got expr_=, prod 0, @ 362-373, imperative pass
-----------------
buff[I] = 0
-----------------
        semantic got expr_index, prod 0, @ 362-369, imperative pass
-----------------
buff[I]
-----------------
         semantic got expr_id, "I", prod 0, @ 367-368, imperative pass
-----------------
I
-----------------
found symbol 'I'->'ST_9'
found variable 'I' of type 'float'
         semantic got expr_id, "buff", prod 0, @ 362-366, imperative pass
-----------------
buff
-----------------
found symbol 'buff'->'ST_9'
found variable 'buff' of type 'float'
found symbol 'buff'->'ST_9'
        semantic got expr_const, "0", prod 0, @ 372-373, imperative pass
-----------------
0
-----------------
     semantic got stmt, prod 0, @ 376-389, imperative pass
-----------------
strrev(buff);
-----------------
      semantic got imp_stmt, prod 2, @ 376-389, imperative pass
-----------------
strrev(buff);
-----------------
       semantic got expr_call, prod 0, @ 376-388, imperative pass
-----------------
strrev(buff)
-----------------
        semantic got expr_id, "strrev", prod 0, @ 376-382, imperative pass
-----------------
strrev
-----------------
found symbol 'strrev'->'ST'
found variable 'strrev' of type '(null)'
        semantic got expr_id, "buff", prod 0, @ 383-387, imperative pass
-----------------
buff
-----------------
found symbol 'buff'->'ST_9'
found variable 'buff' of type 'float'
symbol table ST loaded
emitting code segment CS_10
emitting command [  FRAME ENTER]
emitting command [  SYMBOL buff ARG]
emitting command [  SYMBOL N ARG]
emitting command [  SYMBOL I_1 VAR]
emitting command [  MOV I_1 0]
emitting command [  /* while(N) */]
emitting command [  SYMBOL lbl_while_do_2 LABEL]
emitting command [  SYMBOL lbl_while_exit_2 LABEL]
emitting command [  LABEL lbl_while_do_2]
emitting command [  JE 0 N lbl_while_exit_2]
emitting command [  /* do */]
emitting command [     /* buff[I++] = '0'+N%10; */]
emitting command [     MOV temp_21 I_1]
emitting command [     ADD I_1 I_1 1]
emitting command [     ADD temp_22 temp_21 buff]
emitting command [     MOD temp_23 N 10]
emitting command [     ADD temp_24 48 temp_23]
emitting command [     MOV *temp_22 temp_24]
emitting command [     /* N = N/10; */]
emitting command [     DIV temp_25 N 10]
emitting command [     MOV N temp_25]
emitting command [  JMP lbl_while_do_2]
emitting command [  LABEL lbl_while_exit_2]
emitting command [  /* end while*/]
emitting command [  /* if(I==0) */]
emitting command [  EQUAL temp_26 I_1 0]
emitting command [  SYMBOL lbl_if_then LABEL]
emitting command [  JE 0 temp_26 lbl_if_then]
emitting command [  /* then */]
emitting command [     /* buff[I++] = '0'; */]
emitting command [     MOV temp_27 I_1]
emitting command [     ADD I_1 I_1 1]
emitting command [     ADD temp_28 temp_27 buff]
emitting command [     MOV *temp_28 48]
emitting command [  SYMBOL lbl_if_exit LABEL]
emitting command [  JMP lbl_if_exit]
emitting command [  LABEL lbl_if_then]
emitting command [  LABEL lbl_if_exit]
emitting command [  /* end */]
emitting command [  /* buff[I] = 0; */]
emitting command [  ADD temp_29 I_1 buff]
emitting command [  MOV *temp_29 0]
emitting command [  /* strrev(buff); */]
emitting command [  CALL temp_30 _strrev buff]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 2, @ 2-19, imperative pass
-----------------
float printX = 0;
-----------------
   semantic got var_decl_assign, "printX", prod 0, @ 2-18, imperative pass
-----------------
float printX = 0
-----------------
found symbol 'printX'->'ST'
    semantic got expr_const, "0", prod 0, @ 17-18, imperative pass
-----------------
0
-----------------
  semantic got decl_stmt, prod 2, @ 20-37, imperative pass
-----------------
float printY = 0;
-----------------
   semantic got var_decl_assign, "printY", prod 0, @ 20-36, imperative pass
-----------------
float printY = 0
-----------------
found symbol 'printY'->'ST'
    semantic got expr_const, "0", prod 0, @ 35-36, imperative pass
-----------------
0
-----------------
  semantic got decl_stmt, prod 1, @ 39-207, imperative pass
-----------------
float print(float *S)
	
	printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len;
end
-----------------
   semantic got func_def, "print", prod 0, @ 39-207, imperative pass
-----------------
float print(float *S)
	
	printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len;
end
-----------------
found symbol 'print'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_12 / CS_13
symbol table so far:
Symbol table 'ST_12'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_2	1	0
variables:
type	name	ir_name	size	pos
float	len	len_2	1	0
    semantic got stmt_list, prod 0, @ 64-203, imperative pass
-----------------
printXY(S,printX,printY);
	float len = strlen(S);
	while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	end
	printX = printX + len
-----------------
     semantic got stmt, prod 0, @ 64-89, imperative pass
-----------------
printXY(S,printX,printY);
-----------------
      semantic got imp_stmt, prod 2, @ 64-89, imperative pass
-----------------
printXY(S,printX,printY);
-----------------
       semantic got expr_call, prod 0, @ 64-88, imperative pass
-----------------
printXY(S,printX,printY)
-----------------
        semantic got expr_id, "printXY", prod 0, @ 64-71, imperative pass
-----------------
printXY
-----------------
found symbol 'printXY'->'ST'
found variable 'printXY' of type '(null)'
        semantic got expr_id, "S", prod 0, @ 72-73, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_12'
found variable 'S' of type 'float'
        semantic got expr_id, "printX", prod 0, @ 74-80, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
        semantic got expr_id, "printY", prod 0, @ 81-87, imperative pass
-----------------
printY
-----------------
found symbol 'printY'->'ST'
found variable 'printY' of type 'float'
     semantic got stmt, prod 1, @ 91-113, imperative pass
-----------------
float len = strlen(S);
-----------------
      semantic got decl_stmt, prod 2, @ 91-113, imperative pass
-----------------
float len = strlen(S);
-----------------
       semantic got var_decl_assign, "len", prod 0, @ 91-112, imperative pass
-----------------
float len = strlen(S)
-----------------
found symbol 'len'->'ST_12'
        semantic got expr_call, prod 0, @ 103-112, imperative pass
-----------------
strlen(S)
-----------------
         semantic got expr_id, "strlen", prod 0, @ 103-109, imperative pass
-----------------
strlen
-----------------
found symbol 'strlen'->'ST'
found variable 'strlen' of type '(null)'
         semantic got expr_id, "S", prod 0, @ 110-111, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_12'
found variable 'S' of type 'float'
     semantic got stmt, prod 0, @ 115-179, imperative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
      semantic got imp_stmt, prod 1, @ 115-179, imperative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
       semantic got while_loop, prod 0, @ 115-179, imperative pass
-----------------
while(len > 29)
		len = len - 30;
		printX = 0;
		printY++;
	en
-----------------
        semantic got expr_>, prod 0, @ 121-129, imperative pass
-----------------
len > 29
-----------------
         semantic got expr_id, "len", prod 0, @ 121-124, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_12'
found variable 'len' of type 'float'
         semantic got expr_const, "29", prod 0, @ 127-129, imperative pass
-----------------
29
-----------------
symbol table ST_12 saved
symbol table ST_13 saved
analyzing (imp) scope ST_13 / CS_14
symbol table so far:
Symbol table 'ST_13'->'ST_12':
        semantic got stmt_list, prod 0, @ 133-174, imperative pass
-----------------
len = len - 30;
		printX = 0;
		printY+
-----------------
         semantic got stmt, prod 0, @ 133-148, imperative pass
-----------------
len = len - 30;
-----------------
          semantic got imp_stmt, prod 2, @ 133-148, imperative pass
-----------------
len = len - 30;
-----------------
           semantic got expr_=, prod 0, @ 133-147, imperative pass
-----------------
len = len - 30
-----------------
            semantic got expr_id, "len", prod 0, @ 133-136, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_12'
found variable 'len' of type 'float'
            semantic got expr_-, prod 0, @ 139-147, imperative pass
-----------------
len - 30
-----------------
             semantic got expr_id, "len", prod 0, @ 139-142, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_12'
found variable 'len' of type 'float'
             semantic got expr_const, "30", prod 0, @ 145-147, imperative pass
-----------------
30
-----------------
         semantic got stmt, prod 0, @ 151-162, imperative pass
-----------------
printX = 0;
-----------------
          semantic got imp_stmt, prod 2, @ 151-162, imperative pass
-----------------
printX = 0;
-----------------
           semantic got expr_=, prod 0, @ 151-161, imperative pass
-----------------
printX = 0
-----------------
            semantic got expr_id, "printX", prod 0, @ 151-157, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
            semantic got expr_const, "0", prod 0, @ 160-161, imperative pass
-----------------
0
-----------------
         semantic got stmt, prod 0, @ 165-174, imperative pass
-----------------
printY++;
-----------------
          semantic got imp_stmt, prod 2, @ 165-174, imperative pass
-----------------
printY++;
-----------------
           semantic got expr_++, prod 0, @ 165-173, imperative pass
-----------------
printY++
-----------------
            semantic got expr_id, "printY", prod 0, @ 165-171, imperative pass
-----------------
printY
-----------------
found symbol 'printY'->'ST'
found variable 'printY' of type 'float'
symbol table ST_13 loaded
emitting code segment CS_14
emitting command [   /* len = len - 30; */]
emitting command [   SUB temp_34 len_2 30]
emitting command [   MOV len_2 temp_34]
emitting command [   /* printX = 0; */]
emitting command [   MOV printX 0]
emitting command [   /* printY++; */]
emitting command [   MOV temp_35 printY]
emitting command [   ADD printY printY 1]
symbol table ST_12 loaded
     semantic got stmt, prod 0, @ 181-203, imperative pass
-----------------
printX = printX + len;
-----------------
      semantic got imp_stmt, prod 2, @ 181-203, imperative pass
-----------------
printX = printX + len;
-----------------
       semantic got expr_=, prod 0, @ 181-202, imperative pass
-----------------
printX = printX + len
-----------------
        semantic got expr_id, "printX", prod 0, @ 181-187, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
        semantic got expr_+, prod 0, @ 190-202, imperative pass
-----------------
printX + len
-----------------
         semantic got expr_id, "printX", prod 0, @ 190-196, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
         semantic got expr_id, "len", prod 0, @ 199-202, imperative pass
-----------------
len
-----------------
found symbol 'len'->'ST_12'
found variable 'len' of type 'float'
symbol table ST loaded
emitting code segment CS_13
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_2 ARG]
emitting command [  SYMBOL len_2 VAR]
emitting command [  /* printXY(S,printX,printY); */]
emitting command [  CALL temp_31 _printXY S_2 printX printY]
emitting command [  CALL temp_32 _strlen S_2]
emitting command [  MOV len_2 temp_32]
emitting command [  /* while(len > 29) */]
emitting command [  SYMBOL lbl_while_do_3 LABEL]
emitting command [  SYMBOL lbl_while_exit_3 LABEL]
emitting command [  LABEL lbl_while_do_3]
emitting command [  GREATER temp_33 len_2 29]
emitting command [  JE 0 temp_33 lbl_while_exit_3]
emitting command [  /* do */]
emitting command [     /* len = len - 30; */]
emitting command [     SUB temp_34 len_2 30]
emitting command [     MOV len_2 temp_34]
emitting command [     /* printX = 0; */]
emitting command [     MOV printX 0]
emitting command [     /* printY++; */]
emitting command [     MOV temp_35 printY]
emitting command [     ADD printY printY 1]
emitting command [  JMP lbl_while_do_3]
emitting command [  LABEL lbl_while_exit_3]
emitting command [  /* end while*/]
emitting command [  /* printX = printX + len; */]
emitting command [  ADD temp_36 printX len_2]
emitting command [  MOV printX temp_36]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 209-290, imperative pass
-----------------
float println(float *S)
	print(S);
	if(printX != 0) printY++; printX = 0; end
end
-----------------
   semantic got func_def, "println", prod 0, @ 209-290, imperative pass
-----------------
float println(float *S)
	print(S);
	if(printX != 0) printY++; printX = 0; end
end
-----------------
found symbol 'println'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_14 / CS_15
symbol table so far:
Symbol table 'ST_14'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_3	1	0
    semantic got stmt_list, prod 0, @ 234-286, imperative pass
-----------------
print(S);
	if(printX != 0) printY++; printX = 0; en
-----------------
     semantic got stmt, prod 0, @ 234-243, imperative pass
-----------------
print(S);
-----------------
      semantic got imp_stmt, prod 2, @ 234-243, imperative pass
-----------------
print(S);
-----------------
       semantic got expr_call, prod 0, @ 234-242, imperative pass
-----------------
print(S)
-----------------
        semantic got expr_id, "print", prod 0, @ 234-239, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_id, "S", prod 0, @ 240-241, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_14'
found variable 'S' of type 'float'
     semantic got stmt, prod 0, @ 245-286, imperative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
      semantic got imp_stmt, prod 0, @ 245-286, imperative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
       semantic got if_block, prod 0, @ 245-286, imperative pass
-----------------
if(printX != 0) printY++; printX = 0; end
-----------------
symbol table ST_14 saved
        semantic got if_then, prod 0, @ 245-282, imperative pass
-----------------
if(printX != 0) printY++; printX = 0;
-----------------
symbol table ST_14 saved
         semantic got expr_!=, prod 0, @ 248-259, imperative pass
-----------------
printX != 0
-----------------
          semantic got expr_id, "printX", prod 0, @ 248-254, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
          semantic got expr_const, "0", prod 0, @ 258-259, imperative pass
-----------------
0
-----------------
symbol table ST_15 saved
analyzing (imp) scope ST_15 / CS_16
symbol table so far:
Symbol table 'ST_15'->'ST_14':
         semantic got stmt_list, prod 0, @ 261-282, imperative pass
-----------------
printY++; printX = 0;
-----------------
          semantic got stmt, prod 0, @ 261-270, imperative pass
-----------------
printY++;
-----------------
           semantic got imp_stmt, prod 2, @ 261-270, imperative pass
-----------------
printY++;
-----------------
            semantic got expr_++, prod 0, @ 261-269, imperative pass
-----------------
printY++
-----------------
             semantic got expr_id, "printY", prod 0, @ 261-267, imperative pass
-----------------
printY
-----------------
found symbol 'printY'->'ST'
found variable 'printY' of type 'float'
          semantic got stmt, prod 0, @ 271-282, imperative pass
-----------------
printX = 0;
-----------------
           semantic got imp_stmt, prod 2, @ 271-282, imperative pass
-----------------
printX = 0;
-----------------
            semantic got expr_=, prod 0, @ 271-281, imperative pass
-----------------
printX = 0
-----------------
             semantic got expr_id, "printX", prod 0, @ 271-277, imperative pass
-----------------
printX
-----------------
found symbol 'printX'->'ST'
found variable 'printX' of type 'float'
             semantic got expr_const, "0", prod 0, @ 280-281, imperative pass
-----------------
0
-----------------
symbol table ST_15 loaded
emitting code segment CS_16
emitting command [   /* printY++; */]
emitting command [   MOV temp_39 printY]
emitting command [   ADD printY printY 1]
emitting command [   /* printX = 0; */]
emitting command [   MOV printX 0]
symbol table ST_14 loaded
symbol table ST_14 loaded
symbol table ST loaded
emitting code segment CS_15
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_3 ARG]
emitting command [  /* print(S); */]
emitting command [  CALL temp_37 _print S_3]
emitting command [  /* if(printX != 0) */]
emitting command [  NOTEQUAL temp_38 printX 0]
emitting command [  SYMBOL lbl_if_then_1 LABEL]
emitting command [  JE 0 temp_38 lbl_if_then_1]
emitting command [  /* then */]
emitting command [     /* printY++; */]
emitting command [     MOV temp_39 printY]
emitting command [     ADD printY printY 1]
emitting command [     /* printX = 0; */]
emitting command [     MOV printX 0]
emitting command [  SYMBOL lbl_if_exit_1 LABEL]
emitting command [  JMP lbl_if_exit_1]
emitting command [  LABEL lbl_if_then_1]
emitting command [  LABEL lbl_if_exit_1]
emitting command [  /* end */]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 291-361, imperative pass
-----------------
float printnum(float N)
	float arr[20];
	itoa(arr,N);
	print(arr);
end
-----------------
   semantic got func_def, "printnum", prod 0, @ 291-361, imperative pass
-----------------
float printnum(float N)
	float arr[20];
	itoa(arr,N);
	print(arr);
end
-----------------
found symbol 'printnum'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_16 / CS_17
symbol table so far:
Symbol table 'ST_16'->'ST':
parameters:
type	name	ir_name	size	pos
float	N	N_1	1	0
variables:
type	name	ir_name	size	pos
float	arr	arr	1	0
    semantic got stmt_list, prod 0, @ 316-357, imperative pass
-----------------
float arr[20];
	itoa(arr,N);
	print(arr)
-----------------
     semantic got stmt, prod 1, @ 316-330, imperative pass
-----------------
float arr[20];
-----------------
      semantic got decl_stmt, prod 2, @ 316-330, imperative pass
-----------------
float arr[20];
-----------------
       semantic got var_decl, "arr", prod 1, @ 316-329, imperative pass
-----------------
float arr[20]
-----------------
     semantic got stmt, prod 0, @ 332-344, imperative pass
-----------------
itoa(arr,N);
-----------------
      semantic got imp_stmt, prod 2, @ 332-344, imperative pass
-----------------
itoa(arr,N);
-----------------
       semantic got expr_call, prod 0, @ 332-343, imperative pass
-----------------
itoa(arr,N)
-----------------
        semantic got expr_id, "itoa", prod 0, @ 332-336, imperative pass
-----------------
itoa
-----------------
found symbol 'itoa'->'ST'
found variable 'itoa' of type '(null)'
        semantic got expr_id, "arr", prod 0, @ 337-340, imperative pass
-----------------
arr
-----------------
found symbol 'arr'->'ST_16'
found variable 'arr' of type 'float'
        semantic got expr_id, "N", prod 0, @ 341-342, imperative pass
-----------------
N
-----------------
found symbol 'N'->'ST_16'
found variable 'N' of type 'float'
     semantic got stmt, prod 0, @ 346-357, imperative pass
-----------------
print(arr);
-----------------
      semantic got imp_stmt, prod 2, @ 346-357, imperative pass
-----------------
print(arr);
-----------------
       semantic got expr_call, prod 0, @ 346-356, imperative pass
-----------------
print(arr)
-----------------
        semantic got expr_id, "print", prod 0, @ 346-351, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_id, "arr", prod 0, @ 352-355, imperative pass
-----------------
arr
-----------------
found symbol 'arr'->'ST_16'
found variable 'arr' of type 'float'
symbol table ST loaded
emitting code segment CS_17
emitting command [  FRAME ENTER]
emitting command [  SYMBOL N_1 ARG]
emitting command [  SYMBOL arr VAR ARRAY 20]
emitting command [  /* itoa(arr,N); */]
emitting command [  CALL temp_40 _itoa arr N_1]
emitting command [  /* print(arr); */]
emitting command [  CALL temp_41 _print arr]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 362-656, imperative pass
-----------------
float printXY(float *S, float X, float Y)
	//scr(2,S);
	float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	end
end
-----------------
   semantic got func_def, "printXY", prod 0, @ 362-656, imperative pass
-----------------
float printXY(float *S, float X, float Y)
	//scr(2,S);
	float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	end
end
-----------------
found symbol 'printXY'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_17 / CS_18
symbol table so far:
Symbol table 'ST_17'->'ST':
parameters:
type	name	ir_name	size	pos
float	S	S_4	1	0
float	X	X	1	1
float	Y	Y	1	2
variables:
type	name	ir_name	size	pos
float	I	I_2	1	0
float	C	C_1	1	1
    semantic got stmt_list, prod 0, @ 418-652, imperative pass
-----------------
float I = 0;
	float C = *S++;
	//float C = S[I++];
	while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
     semantic got stmt, prod 1, @ 418-430, imperative pass
-----------------
float I = 0;
-----------------
      semantic got decl_stmt, prod 2, @ 418-430, imperative pass
-----------------
float I = 0;
-----------------
       semantic got var_decl_assign, "I", prod 0, @ 418-429, imperative pass
-----------------
float I = 0
-----------------
found symbol 'I'->'ST_17'
        semantic got expr_const, "0", prod 0, @ 428-429, imperative pass
-----------------
0
-----------------
     semantic got stmt, prod 1, @ 432-447, imperative pass
-----------------
float C = *S++;
-----------------
      semantic got decl_stmt, prod 2, @ 432-447, imperative pass
-----------------
float C = *S++;
-----------------
       semantic got var_decl_assign, "C", prod 0, @ 432-446, imperative pass
-----------------
float C = *S++
-----------------
found symbol 'C'->'ST_17'
        semantic got expr_deref, prod 0, @ 442-446, imperative pass
-----------------
*S++
-----------------
         semantic got expr_++, prod 0, @ 443-446, imperative pass
-----------------
S++
-----------------
          semantic got expr_id, "S", prod 0, @ 443-444, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_17'
found variable 'S' of type 'float'
     semantic got stmt, prod 0, @ 470-652, imperative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
      semantic got imp_stmt, prod 1, @ 470-652, imperative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
       semantic got while_loop, prod 0, @ 470-652, imperative pass
-----------------
while(C)
//		adr_console[2*I] = C;
//		adr_console[2*I+1] = 999;
		float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S++;
		//C = S[I++];
	en
-----------------
        semantic got expr_id, "C", prod 0, @ 476-477, imperative pass
-----------------
C
-----------------
found symbol 'C'->'ST_17'
found variable 'C' of type 'float'
symbol table ST_17 saved
symbol table ST_18 saved
analyzing (imp) scope ST_18 / CS_19
symbol table so far:
Symbol table 'ST_18'->'ST_17':
variables:
type	name	ir_name	size	pos
float	Adr	Adr	1	0
        semantic got stmt_list, prod 0, @ 537-631, imperative pass
-----------------
float Adr = 30*Y+X;
		adr_console[2*Adr] = C;
		adr_console[2*Adr+1] = 999;
		X++;
		C = *S+
-----------------
         semantic got stmt, prod 1, @ 537-556, imperative pass
-----------------
float Adr = 30*Y+X;
-----------------
          semantic got decl_stmt, prod 2, @ 537-556, imperative pass
-----------------
float Adr = 30*Y+X;
-----------------
           semantic got var_decl_assign, "Adr", prod 0, @ 537-555, imperative pass
-----------------
float Adr = 30*Y+X
-----------------
found symbol 'Adr'->'ST_18'
            semantic got expr_+, prod 0, @ 549-555, imperative pass
-----------------
30*Y+X
-----------------
             semantic got expr_*, prod 0, @ 549-553, imperative pass
-----------------
30*Y
-----------------
              semantic got expr_const, "30", prod 0, @ 549-551, imperative pass
-----------------
30
-----------------
              semantic got expr_id, "Y", prod 0, @ 552-553, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_17'
found variable 'Y' of type 'float'
             semantic got expr_id, "X", prod 0, @ 554-555, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_17'
found variable 'X' of type 'float'
         semantic got stmt, prod 0, @ 559-582, imperative pass
-----------------
adr_console[2*Adr] = C;
-----------------
          semantic got imp_stmt, prod 2, @ 559-582, imperative pass
-----------------
adr_console[2*Adr] = C;
-----------------
           semantic got expr_=, prod 0, @ 559-581, imperative pass
-----------------
adr_console[2*Adr] = C
-----------------
            semantic got expr_index, prod 0, @ 559-577, imperative pass
-----------------
adr_console[2*Adr]
-----------------
             semantic got expr_*, prod 0, @ 571-576, imperative pass
-----------------
2*Adr
-----------------
              semantic got expr_const, "2", prod 0, @ 571-572, imperative pass
-----------------
2
-----------------
              semantic got expr_id, "Adr", prod 0, @ 573-576, imperative pass
-----------------
Adr
-----------------
found symbol 'Adr'->'ST_18'
found variable 'Adr' of type 'float'
             semantic got expr_id, "adr_console", prod 0, @ 559-570, imperative pass
-----------------
adr_console
-----------------
found symbol 'adr_console'->'ST'
found variable 'adr_console' of type 'float'
found symbol 'adr_console'->'ST'
            semantic got expr_id, "C", prod 0, @ 580-581, imperative pass
-----------------
C
-----------------
found symbol 'C'->'ST_17'
found variable 'C' of type 'float'
         semantic got stmt, prod 0, @ 585-612, imperative pass
-----------------
adr_console[2*Adr+1] = 999;
-----------------
          semantic got imp_stmt, prod 2, @ 585-612, imperative pass
-----------------
adr_console[2*Adr+1] = 999;
-----------------
           semantic got expr_=, prod 0, @ 585-611, imperative pass
-----------------
adr_console[2*Adr+1] = 999
-----------------
            semantic got expr_index, prod 0, @ 585-605, imperative pass
-----------------
adr_console[2*Adr+1]
-----------------
             semantic got expr_+, prod 0, @ 597-604, imperative pass
-----------------
2*Adr+1
-----------------
              semantic got expr_*, prod 0, @ 597-602, imperative pass
-----------------
2*Adr
-----------------
               semantic got expr_const, "2", prod 0, @ 597-598, imperative pass
-----------------
2
-----------------
               semantic got expr_id, "Adr", prod 0, @ 599-602, imperative pass
-----------------
Adr
-----------------
found symbol 'Adr'->'ST_18'
found variable 'Adr' of type 'float'
              semantic got expr_const, "1", prod 0, @ 603-604, imperative pass
-----------------
1
-----------------
             semantic got expr_id, "adr_console", prod 0, @ 585-596, imperative pass
-----------------
adr_console
-----------------
found symbol 'adr_console'->'ST'
found variable 'adr_console' of type 'float'
found symbol 'adr_console'->'ST'
            semantic got expr_const, "999", prod 0, @ 608-611, imperative pass
-----------------
999
-----------------
         semantic got stmt, prod 0, @ 615-619, imperative pass
-----------------
X++;
-----------------
          semantic got imp_stmt, prod 2, @ 615-619, imperative pass
-----------------
X++;
-----------------
           semantic got expr_++, prod 0, @ 615-618, imperative pass
-----------------
X++
-----------------
            semantic got expr_id, "X", prod 0, @ 615-616, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_17'
found variable 'X' of type 'float'
         semantic got stmt, prod 0, @ 622-631, imperative pass
-----------------
C = *S++;
-----------------
          semantic got imp_stmt, prod 2, @ 622-631, imperative pass
-----------------
C = *S++;
-----------------
           semantic got expr_=, prod 0, @ 622-630, imperative pass
-----------------
C = *S++
-----------------
            semantic got expr_id, "C", prod 0, @ 622-623, imperative pass
-----------------
C
-----------------
found symbol 'C'->'ST_17'
found variable 'C' of type 'float'
            semantic got expr_deref, prod 0, @ 626-630, imperative pass
-----------------
*S++
-----------------
             semantic got expr_++, prod 0, @ 627-630, imperative pass
-----------------
S++
-----------------
              semantic got expr_id, "S", prod 0, @ 627-628, imperative pass
-----------------
S
-----------------
found symbol 'S'->'ST_17'
found variable 'S' of type 'float'
symbol table ST_18 loaded
emitting code segment CS_19
emitting command [   SYMBOL Adr VAR]
emitting command [   MUL temp_44 30 Y]
emitting command [   ADD temp_45 temp_44 X]
emitting command [   MOV Adr temp_45]
emitting command [   /* adr_console[2*Adr] = C; */]
emitting command [   MUL temp_46 2 Adr]
emitting command [   ADD temp_47 temp_46 adr_console]
emitting command [   MOV *temp_47 C_1]
emitting command [   /* adr_console[2*Adr+1] = 999; */]
emitting command [   MUL temp_48 2 Adr]
emitting command [   ADD temp_49 temp_48 1]
emitting command [   ADD temp_50 temp_49 adr_console]
emitting command [   MOV *temp_50 999]
emitting command [   /* X++; */]
emitting command [   MOV temp_51 X]
emitting command [   ADD X X 1]
emitting command [   /* C = *S++; */]
emitting command [   MOV temp_52 S_4]
emitting command [   ADD S_4 S_4 1]
emitting command [   MOV temp_53 *temp_52]
emitting command [   MOV C_1 temp_53]
symbol table ST_17 loaded
symbol table ST loaded
emitting code segment CS_18
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_4 ARG]
emitting command [  SYMBOL X ARG]
emitting command [  SYMBOL Y ARG]
emitting command [  SYMBOL I_2 VAR]
emitting command [  SYMBOL C_1 VAR]
emitting command [  MOV I_2 0]
emitting command [  MOV temp_42 S_4]
emitting command [  ADD S_4 S_4 1]
emitting command [  MOV temp_43 *temp_42]
emitting command [  MOV C_1 temp_43]
emitting command [  /* while(C) */]
emitting command [  SYMBOL lbl_while_do_4 LABEL]
emitting command [  SYMBOL lbl_while_exit_4 LABEL]
emitting command [  LABEL lbl_while_do_4]
emitting command [  JE 0 C_1 lbl_while_exit_4]
emitting command [  /* do */]
emitting command [     SYMBOL Adr VAR]
emitting command [     MUL temp_44 30 Y]
emitting command [     ADD temp_45 temp_44 X]
emitting command [     MOV Adr temp_45]
emitting command [     /* adr_console[2*Adr] = C; */]
emitting command [     MUL temp_46 2 Adr]
emitting command [     ADD temp_47 temp_46 adr_console]
emitting command [     MOV *temp_47 C_1]
emitting command [     /* adr_console[2*Adr+1] = 999; */]
emitting command [     MUL temp_48 2 Adr]
emitting command [     ADD temp_49 temp_48 1]
emitting command [     ADD temp_50 temp_49 adr_console]
emitting command [     MOV *temp_50 999]
emitting command [     /* X++; */]
emitting command [     MOV temp_51 X]
emitting command [     ADD X X 1]
emitting command [     /* C = *S++; */]
emitting command [     MOV temp_52 S_4]
emitting command [     ADD S_4 S_4 1]
emitting command [     MOV temp_53 *temp_52]
emitting command [     MOV C_1 temp_53]
emitting command [  JMP lbl_while_do_4]
emitting command [  LABEL lbl_while_exit_4]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 1, @ 269-305, imperative pass
-----------------
float unreachable() while(1) end end
-----------------
   semantic got func_def, "unreachable", prod 0, @ 269-305, imperative pass
-----------------
float unreachable() while(1) end end
-----------------
found symbol 'unreachable'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_19 / CS_20
symbol table so far:
Symbol table 'ST_19'->'ST':
    semantic got stmt_list, prod 0, @ 289-301, imperative pass
-----------------
while(1) end
-----------------
     semantic got stmt, prod 0, @ 289-301, imperative pass
-----------------
while(1) end
-----------------
      semantic got imp_stmt, prod 1, @ 289-301, imperative pass
-----------------
while(1) end
-----------------
       semantic got while_loop, prod 0, @ 289-301, imperative pass
-----------------
while(1) end
-----------------
        semantic got expr_const, "1", prod 0, @ 295-296, imperative pass
-----------------
1
-----------------
symbol table ST_19 saved
symbol table ST_20 saved
analyzing (imp) scope ST_20 / CS_21
symbol table so far:
Symbol table 'ST_20'->'ST_19':
        semantic got stmt_list, "<empty>", prod 1, @ 295-296, imperative pass
-----------------
1
-----------------
symbol table ST_20 loaded
emitting code segment CS_21
symbol table ST_19 loaded
symbol table ST loaded
emitting code segment CS_20
emitting command [  FRAME ENTER]
emitting command [  /* while(1) */]
emitting command [  SYMBOL lbl_while_do_5 LABEL]
emitting command [  SYMBOL lbl_while_exit_5 LABEL]
emitting command [  LABEL lbl_while_do_5]
emitting command [  JE 0 1 lbl_while_exit_5]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_5]
emitting command [  LABEL lbl_while_exit_5]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
  semantic got decl_stmt, prod 0, @ 354-478, imperative pass
-----------------
class vec2
	float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	end
end
-----------------
   semantic got class_def, "vec2", prod 0, @ 354-478, imperative pass
-----------------
class vec2
	float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	end
end
-----------------
found symbol 'vec2'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
new symbol table: ST_26
symbol table ST loaded
emitting code segment CS_22
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  RET]
emitting command [  FRAME LEAVE]
symbol table ST saved
new symbol table: ST_27
symbol table ST loaded
emitting code segment CS_23
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  RET]
emitting command [  FRAME LEAVE]
symbol table ST saved
    semantic got decl_stmt_list, prod 0, @ 366-474, imperative pass
-----------------
float X;
	float Y;
	float avg()
		return (X+Y)/2;
	end
	float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
     semantic got decl_stmt, prod 2, @ 366-374, imperative pass
-----------------
float X;
-----------------
      semantic got var_decl, "X", prod 0, @ 366-373, imperative pass
-----------------
float X
-----------------
     semantic got decl_stmt, prod 2, @ 376-384, imperative pass
-----------------
float Y;
-----------------
      semantic got var_decl, "Y", prod 0, @ 376-383, imperative pass
-----------------
float Y
-----------------
     semantic got decl_stmt, prod 1, @ 386-420, imperative pass
-----------------
float avg()
		return (X+Y)/2;
	en
-----------------
      semantic got func_def, "avg", prod 0, @ 386-420, imperative pass
-----------------
float avg()
		return (X+Y)/2;
	en
-----------------
found symbol 'avg'->'ST_21'
symbol table ST_21 saved
symbol table ST_21 loaded
symbol table ST_21 saved
analyzing (imp) scope ST_22 / CS_24
symbol table so far:
Symbol table 'ST_22'->'ST_21':
parameters:
type	name	ir_name	size	pos
vec2	this	this_1	1	0
       semantic got stmt_list, prod 0, @ 400-415, imperative pass
-----------------
return (X+Y)/2;
-----------------
        semantic got stmt, prod 0, @ 400-415, imperative pass
-----------------
return (X+Y)/2;
-----------------
         semantic got imp_stmt, prod 4, @ 400-415, imperative pass
-----------------
return (X+Y)/2;
-----------------
          semantic got expr_/, prod 0, @ 407-414, imperative pass
-----------------
(X+Y)/2
-----------------
           semantic got expr_subexpr, prod 0, @ 407-412, imperative pass
-----------------
(X+Y)
-----------------
            semantic got expr_+, prod 0, @ 408-411, imperative pass
-----------------
X+Y
-----------------
             semantic got expr_id, "X", prod 0, @ 408-409, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
             semantic got expr_id, "Y", prod 0, @ 410-411, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
           semantic got expr_const, "2", prod 0, @ 413-414, imperative pass
-----------------
2
-----------------
symbol table ST_21 loaded
emitting code segment CS_24
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  SYMBOL this_1 ARG]
emitting command [  /* return (X+Y)/2; */]
emitting command [  ADD temp_54 X_1 Y_1]
emitting command [  DIV temp_55 temp_54 2]
emitting command [  RET temp_55]
emitting command [  FRAME LEAVE]
     semantic got decl_stmt, prod 1, @ 422-474, imperative pass
-----------------
float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
      semantic got func_def, "switch", prod 0, @ 422-474, imperative pass
-----------------
float switch()
		float Z = X;
		X = Y;
		Y = Z;
	en
-----------------
found symbol 'switch'->'ST_21'
symbol table ST_21 saved
symbol table ST_21 loaded
symbol table ST_21 saved
analyzing (imp) scope ST_23 / CS_25
symbol table so far:
Symbol table 'ST_23'->'ST_21':
parameters:
type	name	ir_name	size	pos
vec2	this	this_2	1	0
variables:
type	name	ir_name	size	pos
float	Z	Z	1	0
       semantic got stmt_list, prod 0, @ 439-469, imperative pass
-----------------
float Z = X;
		X = Y;
		Y = 
-----------------
        semantic got stmt, prod 1, @ 439-451, imperative pass
-----------------
float Z = X;
-----------------
         semantic got decl_stmt, prod 2, @ 439-451, imperative pass
-----------------
float Z = X;
-----------------
          semantic got var_decl_assign, "Z", prod 0, @ 439-450, imperative pass
-----------------
float Z = X
-----------------
found symbol 'Z'->'ST_23'
           semantic got expr_id, "X", prod 0, @ 449-450, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
        semantic got stmt, prod 0, @ 454-460, imperative pass
-----------------
X = Y;
-----------------
         semantic got imp_stmt, prod 2, @ 454-460, imperative pass
-----------------
X = Y;
-----------------
          semantic got expr_=, prod 0, @ 454-459, imperative pass
-----------------
X = Y
-----------------
           semantic got expr_id, "X", prod 0, @ 454-455, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
           semantic got expr_id, "Y", prod 0, @ 458-459, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
        semantic got stmt, prod 0, @ 463-469, imperative pass
-----------------
Y = Z;
-----------------
         semantic got imp_stmt, prod 2, @ 463-469, imperative pass
-----------------
Y = Z;
-----------------
          semantic got expr_=, prod 0, @ 463-468, imperative pass
-----------------
Y = Z
-----------------
           semantic got expr_id, "Y", prod 0, @ 463-464, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
           semantic got expr_id, "Z", prod 0, @ 467-468, imperative pass
-----------------
Z
-----------------
found symbol 'Z'->'ST_23'
found variable 'Z' of type 'float'
symbol table ST_21 loaded
emitting code segment CS_25
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  SYMBOL this_2 ARG]
emitting command [  SYMBOL Z VAR]
emitting command [  MOV Z X_1]
emitting command [  /* X = Y; */]
emitting command [  MOV X_1 Y_1]
emitting command [  /* Y = Z; */]
emitting command [  MOV Y_1 Z]
emitting command [  FRAME LEAVE]
symbol table ST loaded
  semantic got decl_stmt, prod 1, @ 480-1020, imperative pass
-----------------
float main()
	println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) end
end
-----------------
   semantic got func_def, "main", prod 0, @ 480-1020, imperative pass
-----------------
float main()
	println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) end
end
-----------------
found symbol 'main'->'ST'
symbol table ST saved
symbol table ST loaded
symbol table ST saved
analyzing (imp) scope ST_24 / CS_26
symbol table so far:
Symbol table 'ST_24'->'ST':
variables:
type	name	ir_name	size	pos
vec2	A	A	2	0
vec2	B	B	2	1
symbol table ST_24 saved
found symbol 'constructor'->'ST_21'
symbol table ST_24 loaded
symbol table ST_24 saved
found symbol 'constructor'->'ST_21'
symbol table ST_24 loaded
    semantic got stmt_list, prod 0, @ 494-1016, imperative pass
-----------------
println("Hello World");
	class vec2 A;
	class vec2 B;
	B.X = 1;
	B.Y = 3;
	A.X = 5;
	A.Y = 7;
	print("A.avg() = ");printnum(A.avg());println("");
	print("B.avg() = ");printnum(B.avg());println("");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	A.switch();
	println("switched");
	print("A.X = ");printnum(A.X);print(", A.Y = ");printnum(A.Y);println("");
	//print("7*6 = ");printnum(7*6);println("");
	//println("yup");
	//print("strlen \"\" = ");printnum(strlen(""));println(" yep");
	while(1) en
-----------------
     semantic got stmt, prod 0, @ 494-511, imperative pass
-----------------
println("Hello Wo
-----------------
      semantic got imp_stmt, prod 2, @ 494-511, imperative pass
-----------------
println("Hello Wo
-----------------
       semantic got expr_call, prod 0, @ 494-510, imperative pass
-----------------
println("Hello W
-----------------
        semantic got expr_id, "println", prod 0, @ 494-501, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "no\nu", prod 5, @ 502-509, imperative pass
-----------------
"Hello 
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 1, @ 513-526, imperative pass
-----------------
class vec2 A;
-----------------
      semantic got decl_stmt, prod 2, @ 513-526, imperative pass
-----------------
class vec2 A;
-----------------
       semantic got var_decl, "A", prod 0, @ 513-525, imperative pass
-----------------
class vec2 A
-----------------
     semantic got stmt, prod 1, @ 528-541, imperative pass
-----------------
class vec2 B;
-----------------
      semantic got decl_stmt, prod 2, @ 528-541, imperative pass
-----------------
class vec2 B;
-----------------
       semantic got var_decl, "B", prod 0, @ 528-540, imperative pass
-----------------
class vec2 B
-----------------
     semantic got stmt, prod 0, @ 543-551, imperative pass
-----------------
B.X = 1;
-----------------
      semantic got imp_stmt, prod 2, @ 543-551, imperative pass
-----------------
B.X = 1;
-----------------
       semantic got expr_=, prod 0, @ 543-550, imperative pass
-----------------
B.X = 1
-----------------
        semantic got expr_., prod 0, @ 543-546, imperative pass
-----------------
B.X
-----------------
         semantic got expr_id, "B", prod 0, @ 543-544, imperative pass
-----------------
B
-----------------
found symbol 'B'->'ST_24'
found variable 'B' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "X", prod 0, @ 545-546, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
symbol table ST_24 loaded
        semantic got expr_const, "1", prod 0, @ 549-550, imperative pass
-----------------
1
-----------------
     semantic got stmt, prod 0, @ 553-561, imperative pass
-----------------
B.Y = 3;
-----------------
      semantic got imp_stmt, prod 2, @ 553-561, imperative pass
-----------------
B.Y = 3;
-----------------
       semantic got expr_=, prod 0, @ 553-560, imperative pass
-----------------
B.Y = 3
-----------------
        semantic got expr_., prod 0, @ 553-556, imperative pass
-----------------
B.Y
-----------------
         semantic got expr_id, "B", prod 0, @ 553-554, imperative pass
-----------------
B
-----------------
found symbol 'B'->'ST_24'
found variable 'B' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "Y", prod 0, @ 555-556, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
symbol table ST_24 loaded
        semantic got expr_const, "3", prod 0, @ 559-560, imperative pass
-----------------
3
-----------------
     semantic got stmt, prod 0, @ 563-571, imperative pass
-----------------
A.X = 5;
-----------------
      semantic got imp_stmt, prod 2, @ 563-571, imperative pass
-----------------
A.X = 5;
-----------------
       semantic got expr_=, prod 0, @ 563-570, imperative pass
-----------------
A.X = 5
-----------------
        semantic got expr_., prod 0, @ 563-566, imperative pass
-----------------
A.X
-----------------
         semantic got expr_id, "A", prod 0, @ 563-564, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "X", prod 0, @ 565-566, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
symbol table ST_24 loaded
        semantic got expr_const, "5", prod 0, @ 569-570, imperative pass
-----------------
5
-----------------
     semantic got stmt, prod 0, @ 573-581, imperative pass
-----------------
A.Y = 7;
-----------------
      semantic got imp_stmt, prod 2, @ 573-581, imperative pass
-----------------
A.Y = 7;
-----------------
       semantic got expr_=, prod 0, @ 573-580, imperative pass
-----------------
A.Y = 7
-----------------
        semantic got expr_., prod 0, @ 573-576, imperative pass
-----------------
A.Y
-----------------
         semantic got expr_id, "A", prod 0, @ 573-574, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "Y", prod 0, @ 575-576, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
symbol table ST_24 loaded
        semantic got expr_const, "7", prod 0, @ 579-580, imperative pass
-----------------
7
-----------------
     semantic got stmt, prod 0, @ 583-603, imperative pass
-----------------
print("A.avg() = ");
-----------------
      semantic got imp_stmt, prod 2, @ 583-603, imperative pass
-----------------
print("A.avg() = ");
-----------------
       semantic got expr_call, prod 0, @ 583-602, imperative pass
-----------------
print("A.avg() = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 583-588, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, "A.avg() = ", prod 5, @ 589-601, imperative pass
-----------------
"A.avg() = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 603-621, imperative pass
-----------------
printnum(A.avg());
-----------------
      semantic got imp_stmt, prod 2, @ 603-621, imperative pass
-----------------
printnum(A.avg());
-----------------
       semantic got expr_call, prod 0, @ 603-620, imperative pass
-----------------
printnum(A.avg())
-----------------
        semantic got expr_id, "printnum", prod 0, @ 603-611, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 612-619, imperative pass
-----------------
A.avg()
-----------------
         semantic got expr_id, "A", prod 0, @ 612-613, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_call, prod 0, @ 614-619, imperative pass
-----------------
avg()
-----------------
          semantic got expr_id, "avg", prod 0, @ 614-617, imperative pass
-----------------
avg
-----------------
found symbol 'avg'->'ST_21'
found variable 'avg' of type '(null)'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 621-633, imperative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 621-633, imperative pass
-----------------
println("");
-----------------
       semantic got expr_call, prod 0, @ 621-632, imperative pass
-----------------
println("")
-----------------
        semantic got expr_id, "println", prod 0, @ 621-628, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "", prod 5, @ 629-631, imperative pass
-----------------
""
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 635-655, imperative pass
-----------------
print("B.avg() = ");
-----------------
      semantic got imp_stmt, prod 2, @ 635-655, imperative pass
-----------------
print("B.avg() = ");
-----------------
       semantic got expr_call, prod 0, @ 635-654, imperative pass
-----------------
print("B.avg() = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 635-640, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, "B.avg() = ", prod 5, @ 641-653, imperative pass
-----------------
"B.avg() = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 655-673, imperative pass
-----------------
printnum(B.avg());
-----------------
      semantic got imp_stmt, prod 2, @ 655-673, imperative pass
-----------------
printnum(B.avg());
-----------------
       semantic got expr_call, prod 0, @ 655-672, imperative pass
-----------------
printnum(B.avg())
-----------------
        semantic got expr_id, "printnum", prod 0, @ 655-663, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 664-671, imperative pass
-----------------
B.avg()
-----------------
         semantic got expr_id, "B", prod 0, @ 664-665, imperative pass
-----------------
B
-----------------
found symbol 'B'->'ST_24'
found variable 'B' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_call, prod 0, @ 666-671, imperative pass
-----------------
avg()
-----------------
          semantic got expr_id, "avg", prod 0, @ 666-669, imperative pass
-----------------
avg
-----------------
found symbol 'avg'->'ST_21'
found variable 'avg' of type '(null)'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 673-685, imperative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 673-685, imperative pass
-----------------
println("");
-----------------
       semantic got expr_call, prod 0, @ 673-684, imperative pass
-----------------
println("")
-----------------
        semantic got expr_id, "println", prod 0, @ 673-680, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "", prod 5, @ 681-683, imperative pass
-----------------
""
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 687-703, imperative pass
-----------------
print("A.X = ");
-----------------
      semantic got imp_stmt, prod 2, @ 687-703, imperative pass
-----------------
print("A.X = ");
-----------------
       semantic got expr_call, prod 0, @ 687-702, imperative pass
-----------------
print("A.X = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 687-692, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, "A.X = ", prod 5, @ 693-701, imperative pass
-----------------
"A.X = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 703-717, imperative pass
-----------------
printnum(A.X);
-----------------
      semantic got imp_stmt, prod 2, @ 703-717, imperative pass
-----------------
printnum(A.X);
-----------------
       semantic got expr_call, prod 0, @ 703-716, imperative pass
-----------------
printnum(A.X)
-----------------
        semantic got expr_id, "printnum", prod 0, @ 703-711, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 712-715, imperative pass
-----------------
A.X
-----------------
         semantic got expr_id, "A", prod 0, @ 712-713, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "X", prod 0, @ 714-715, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 717-735, imperative pass
-----------------
print(", A.Y = ");
-----------------
      semantic got imp_stmt, prod 2, @ 717-735, imperative pass
-----------------
print(", A.Y = ");
-----------------
       semantic got expr_call, prod 0, @ 717-734, imperative pass
-----------------
print(", A.Y = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 717-722, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, ", A.Y = ", prod 5, @ 723-733, imperative pass
-----------------
", A.Y = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 735-749, imperative pass
-----------------
printnum(A.Y);
-----------------
      semantic got imp_stmt, prod 2, @ 735-749, imperative pass
-----------------
printnum(A.Y);
-----------------
       semantic got expr_call, prod 0, @ 735-748, imperative pass
-----------------
printnum(A.Y)
-----------------
        semantic got expr_id, "printnum", prod 0, @ 735-743, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 744-747, imperative pass
-----------------
A.Y
-----------------
         semantic got expr_id, "A", prod 0, @ 744-745, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "Y", prod 0, @ 746-747, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 749-761, imperative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 749-761, imperative pass
-----------------
println("");
-----------------
       semantic got expr_call, prod 0, @ 749-760, imperative pass
-----------------
println("")
-----------------
        semantic got expr_id, "println", prod 0, @ 749-756, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "", prod 5, @ 757-759, imperative pass
-----------------
""
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 763-774, imperative pass
-----------------
A.switch();
-----------------
      semantic got imp_stmt, prod 2, @ 763-774, imperative pass
-----------------
A.switch();
-----------------
       semantic got expr_., prod 0, @ 763-773, imperative pass
-----------------
A.switch()
-----------------
        semantic got expr_id, "A", prod 0, @ 763-764, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
        semantic got expr_call, prod 0, @ 765-773, imperative pass
-----------------
switch()
-----------------
         semantic got expr_id, "switch", prod 0, @ 765-771, imperative pass
-----------------
switch
-----------------
found symbol 'switch'->'ST_21'
found variable 'switch' of type '(null)'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 776-796, imperative pass
-----------------
println("switched");
-----------------
      semantic got imp_stmt, prod 2, @ 776-796, imperative pass
-----------------
println("switched");
-----------------
       semantic got expr_call, prod 0, @ 776-795, imperative pass
-----------------
println("switched")
-----------------
        semantic got expr_id, "println", prod 0, @ 776-783, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "switched", prod 5, @ 784-794, imperative pass
-----------------
"switched"
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 798-814, imperative pass
-----------------
print("A.X = ");
-----------------
      semantic got imp_stmt, prod 2, @ 798-814, imperative pass
-----------------
print("A.X = ");
-----------------
       semantic got expr_call, prod 0, @ 798-813, imperative pass
-----------------
print("A.X = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 798-803, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, "A.X = ", prod 5, @ 804-812, imperative pass
-----------------
"A.X = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 814-828, imperative pass
-----------------
printnum(A.X);
-----------------
      semantic got imp_stmt, prod 2, @ 814-828, imperative pass
-----------------
printnum(A.X);
-----------------
       semantic got expr_call, prod 0, @ 814-827, imperative pass
-----------------
printnum(A.X)
-----------------
        semantic got expr_id, "printnum", prod 0, @ 814-822, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 823-826, imperative pass
-----------------
A.X
-----------------
         semantic got expr_id, "A", prod 0, @ 823-824, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "X", prod 0, @ 825-826, imperative pass
-----------------
X
-----------------
found symbol 'X'->'ST_21'
found variable 'X' of type 'float'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 828-846, imperative pass
-----------------
print(", A.Y = ");
-----------------
      semantic got imp_stmt, prod 2, @ 828-846, imperative pass
-----------------
print(", A.Y = ");
-----------------
       semantic got expr_call, prod 0, @ 828-845, imperative pass
-----------------
print(", A.Y = ")
-----------------
        semantic got expr_id, "print", prod 0, @ 828-833, imperative pass
-----------------
print
-----------------
found symbol 'print'->'ST'
found variable 'print' of type '(null)'
        semantic got expr_const, ", A.Y = ", prod 5, @ 834-844, imperative pass
-----------------
", A.Y = "
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 846-860, imperative pass
-----------------
printnum(A.Y);
-----------------
      semantic got imp_stmt, prod 2, @ 846-860, imperative pass
-----------------
printnum(A.Y);
-----------------
       semantic got expr_call, prod 0, @ 846-859, imperative pass
-----------------
printnum(A.Y)
-----------------
        semantic got expr_id, "printnum", prod 0, @ 846-854, imperative pass
-----------------
printnum
-----------------
found symbol 'printnum'->'ST'
found variable 'printnum' of type '(null)'
        semantic got expr_., prod 0, @ 855-858, imperative pass
-----------------
A.Y
-----------------
         semantic got expr_id, "A", prod 0, @ 855-856, imperative pass
-----------------
A
-----------------
found symbol 'A'->'ST_24'
found variable 'A' of type 'vec2'
symbol table ST_24 saved
         semantic got expr_id, "Y", prod 0, @ 857-858, imperative pass
-----------------
Y
-----------------
found symbol 'Y'->'ST_21'
found variable 'Y' of type 'float'
symbol table ST_24 loaded
     semantic got stmt, prod 0, @ 860-872, imperative pass
-----------------
println("");
-----------------
      semantic got imp_stmt, prod 2, @ 860-872, imperative pass
-----------------
println("");
-----------------
       semantic got expr_call, prod 0, @ 860-871, imperative pass
-----------------
println("")
-----------------
        semantic got expr_id, "println", prod 0, @ 860-867, imperative pass
-----------------
println
-----------------
found symbol 'println'->'ST'
found variable 'println' of type '(null)'
        semantic got expr_const, "", prod 5, @ 868-870, imperative pass
-----------------
""
-----------------
pushing symbol str -> ST_24
     semantic got stmt, prod 0, @ 1004-1016, imperative pass
-----------------
while(1) end
-----------------
      semantic got imp_stmt, prod 1, @ 1004-1016, imperative pass
-----------------
while(1) end
-----------------
       semantic got while_loop, prod 0, @ 1004-1016, imperative pass
-----------------
while(1) end
-----------------
        semantic got expr_const, "1", prod 0, @ 1010-1011, imperative pass
-----------------
1
-----------------
symbol table ST_24 saved
symbol table ST_25 saved
analyzing (imp) scope ST_25 / CS_27
symbol table so far:
Symbol table 'ST_25'->'ST_24':
        semantic got stmt_list, "<empty>", prod 1, @ 1010-1011, imperative pass
-----------------
1
-----------------
symbol table ST_25 loaded
emitting code segment CS_27
symbol table ST_24 loaded
symbol table ST_24 saved
found symbol 'destructor'->'ST_21'
symbol table ST_24 loaded
symbol table ST_24 saved
found symbol 'destructor'->'ST_21'
symbol table ST_24 loaded
symbol table ST loaded
emitting code segment CS_26
emitting command [  FRAME ENTER]
emitting command [  SYMBOL A VAR]
emitting command [  SYMBOL B VAR]
emitting command [  /* initialize A */]
emitting command [  CALL temp_56 constructor A]
emitting command [  /* initialize B */]
emitting command [  CALL temp_57 constructor B]
emitting command [  /* println("Hello Wo */]
emitting command [  CALL temp_58 _println str_1]
emitting command [  /* B.X = 1; */]
emitting command [  ADD X_1_1 B &X_1]
emitting command [  MOV *X_1_1 1]
emitting command [  /* B.Y = 3; */]
emitting command [  ADD Y_1_1 B &Y_1]
emitting command [  MOV *Y_1_1 3]
emitting command [  /* A.X = 5; */]
emitting command [  ADD X_1_2 A &X_1]
emitting command [  MOV *X_1_2 5]
emitting command [  /* A.Y = 7; */]
emitting command [  ADD Y_1_2 A &Y_1]
emitting command [  MOV *Y_1_2 7]
emitting command [  /* print("A.avg() = "); */]
emitting command [  CALL temp_59 _print str_2]
emitting command [  /* printnum(A.avg()); */]
emitting command [  CALL temp_60 _avg]
emitting command [  CALL temp_61 _printnum temp_60]
emitting command [  /* println(""); */]
emitting command [  CALL temp_62 _println str_3]
emitting command [  /* print("B.avg() = "); */]
emitting command [  CALL temp_63 _print str_4]
emitting command [  /* printnum(B.avg()); */]
emitting command [  CALL temp_64 _avg]
emitting command [  CALL temp_65 _printnum temp_64]
emitting command [  /* println(""); */]
emitting command [  CALL temp_66 _println str_5]
emitting command [  /* print("A.X = "); */]
emitting command [  CALL temp_67 _print str_6]
emitting command [  /* printnum(A.X); */]
emitting command [  ADD X_1_3 A &X_1]
emitting command [  CALL temp_68 _printnum *X_1_3]
emitting command [  /* print(", A.Y = "); */]
emitting command [  CALL temp_69 _print str_7]
emitting command [  /* printnum(A.Y); */]
emitting command [  ADD Y_1_3 A &Y_1]
emitting command [  CALL temp_70 _printnum *Y_1_3]
emitting command [  /* println(""); */]
emitting command [  CALL temp_71 _println str_8]
emitting command [  /* A.switch(); */]
emitting command [  CALL temp_72 _switch]
emitting command [  /* println("switched"); */]
emitting command [  CALL temp_73 _println str_9]
emitting command [  /* print("A.X = "); */]
emitting command [  CALL temp_74 _print str_10]
emitting command [  /* printnum(A.X); */]
emitting command [  ADD X_1_4 A &X_1]
emitting command [  CALL temp_75 _printnum *X_1_4]
emitting command [  /* print(", A.Y = "); */]
emitting command [  CALL temp_76 _print str_11]
emitting command [  /* printnum(A.Y); */]
emitting command [  ADD Y_1_4 A &Y_1]
emitting command [  CALL temp_77 _printnum *Y_1_4]
emitting command [  /* println(""); */]
emitting command [  CALL temp_78 _println str_12]
emitting command [  /* while(1) */]
emitting command [  SYMBOL lbl_while_do_6 LABEL]
emitting command [  SYMBOL lbl_while_exit_6 LABEL]
emitting command [  LABEL lbl_while_do_6]
emitting command [  JE 0 1 lbl_while_exit_6]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_6]
emitting command [  LABEL lbl_while_exit_6]
emitting command [  /* end while*/]
emitting command [  /* destroy A */]
emitting command [  CALL temp_79 destructor A]
emitting command [  /* destroy B */]
emitting command [  CALL temp_80 destructor B]
emitting command [  FRAME LEAVE]
symbol table ST loaded
=========================
=== SEMANTIC FINALIZE ===
=========================
found symbol 'main'->'ST'
current CS = CS
emitting code segment CS
emitting command [/* float delay(float n) */]
emitting command [FUNCTION _delay BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL n ARG]
emitting command [  /* while(n--) */]
emitting command [  SYMBOL lbl_while_do LABEL]
emitting command [  SYMBOL lbl_while_exit LABEL]
emitting command [  LABEL lbl_while_do]
emitting command [  MOV temp n]
emitting command [  SUB n n 1]
emitting command [  JE 0 temp lbl_while_exit]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do]
emitting command [  LABEL lbl_while_exit]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _delay END]
emitting command [/* end */]
emitting command [/* float scr(float a, float b) */]
emitting command [FUNCTION _scr BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL a ARG]
emitting command [  SYMBOL b ARG]
emitting command [  /* adr_screen[a] = b; */]
emitting command [  ADD temp_1 a adr_screen]
emitting command [  MOV *temp_1 b]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _scr END]
emitting command [/* end */]
emitting command [/* float strtest(float *str) */]
emitting command [FUNCTION _strtest BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL str ARG]
emitting command [  /* scr(3,str); */]
emitting command [  CALL temp_2 _scr 3 str]
emitting command [  /* scr(4,*str); */]
emitting command [  MOV temp_3 *str]
emitting command [  CALL temp_4 _scr 4 temp_3]
emitting command [  /* scr(5,str[0]); */]
emitting command [  ADD temp_5 0 str]
emitting command [  CALL temp_6 _scr 5 *temp_5]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _strtest END]
emitting command [/* end */]
emitting command [/* float strlen(float *S) */]
emitting command [FUNCTION _strlen BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S ARG]
emitting command [  SYMBOL len VAR]
emitting command [  MOV len 0]
emitting command [  /* while(S[len++]) */]
emitting command [  SYMBOL lbl_while_do_1 LABEL]
emitting command [  SYMBOL lbl_while_exit_1 LABEL]
emitting command [  LABEL lbl_while_do_1]
emitting command [  MOV temp_7 len]
emitting command [  ADD len len 1]
emitting command [  ADD temp_8 temp_7 S]
emitting command [  JE 0 *temp_8 lbl_while_exit_1]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_1]
emitting command [  LABEL lbl_while_exit_1]
emitting command [  /* end while*/]
emitting command [  /* return --len; */]
emitting command [  SUB len len 1]
emitting command [  RET len]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _strlen END]
emitting command [/* end */]
emitting command [/* float strrev(float *S) */]
emitting command [FUNCTION _strrev BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_1 ARG]
emitting command [  SYMBOL len_1 VAR]
emitting command [  SYMBOL I VAR]
emitting command [  CALL temp_9 _strlen S_1]
emitting command [  MOV len_1 temp_9]
emitting command [  /* for(I = 0; I < len/2; I++) */]
emitting command [     /* I = 0; */]
emitting command [     /* I = 0; */]
emitting command [     MOV I 0]
emitting command [     SYMBOL lbl_for LABEL]
emitting command [     SYMBOL lbl_for_exit LABEL]
emitting command [     LABEL lbl_for]
emitting command [     /* I < len/2 */]
emitting command [     DIV temp_10 len_1 2]
emitting command [     LESS temp_11 I temp_10]
emitting command [     JE 0 temp_11 lbl_for_exit]
emitting command [     /* loop body */]
emitting command [     ADD temp_12 I S_1]
emitting command [     MOV C *temp_12]
emitting command [     /* S[I] = S[len-1-I]; */]
emitting command [     ADD temp_13 I S_1]
emitting command [     SUB temp_14 len_1 1]
emitting command [     SUB temp_15 temp_14 I]
emitting command [     ADD temp_16 temp_15 S_1]
emitting command [     MOV *temp_13 *temp_16]
emitting command [     /* S[len-1-I] = C; */]
emitting command [     SUB temp_17 len_1 1]
emitting command [     SUB temp_18 temp_17 I]
emitting command [     ADD temp_19 temp_18 S_1]
emitting command [     MOV *temp_19 C]
emitting command [     /* I++ */]
emitting command [     MOV temp_20 I]
emitting command [     ADD I I 1]
emitting command [     JMP lbl_for]
emitting command [     LABEL lbl_for_exit]
emitting command [     /* end for */]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _strrev END]
emitting command [/* end */]
emitting command [/* float itoa(float *buff, float N) */]
emitting command [FUNCTION _itoa BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL buff ARG]
emitting command [  SYMBOL N ARG]
emitting command [  SYMBOL I_1 VAR]
emitting command [  MOV I_1 0]
emitting command [  /* while(N) */]
emitting command [  SYMBOL lbl_while_do_2 LABEL]
emitting command [  SYMBOL lbl_while_exit_2 LABEL]
emitting command [  LABEL lbl_while_do_2]
emitting command [  JE 0 N lbl_while_exit_2]
emitting command [  /* do */]
emitting command [     /* buff[I++] = '0'+N%10; */]
emitting command [     MOV temp_21 I_1]
emitting command [     ADD I_1 I_1 1]
emitting command [     ADD temp_22 temp_21 buff]
emitting command [     MOD temp_23 N 10]
emitting command [     ADD temp_24 48 temp_23]
emitting command [     MOV *temp_22 temp_24]
emitting command [     /* N = N/10; */]
emitting command [     DIV temp_25 N 10]
emitting command [     MOV N temp_25]
emitting command [  JMP lbl_while_do_2]
emitting command [  LABEL lbl_while_exit_2]
emitting command [  /* end while*/]
emitting command [  /* if(I==0) */]
emitting command [  EQUAL temp_26 I_1 0]
emitting command [  SYMBOL lbl_if_then LABEL]
emitting command [  JE 0 temp_26 lbl_if_then]
emitting command [  /* then */]
emitting command [     /* buff[I++] = '0'; */]
emitting command [     MOV temp_27 I_1]
emitting command [     ADD I_1 I_1 1]
emitting command [     ADD temp_28 temp_27 buff]
emitting command [     MOV *temp_28 48]
emitting command [  SYMBOL lbl_if_exit LABEL]
emitting command [  JMP lbl_if_exit]
emitting command [  LABEL lbl_if_then]
emitting command [  LABEL lbl_if_exit]
emitting command [  /* end */]
emitting command [  /* buff[I] = 0; */]
emitting command [  ADD temp_29 I_1 buff]
emitting command [  MOV *temp_29 0]
emitting command [  /* strrev(buff); */]
emitting command [  CALL temp_30 _strrev buff]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _itoa END]
emitting command [/* end */]
emitting command [/* float print(float *S) */]
emitting command [FUNCTION _print BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_2 ARG]
emitting command [  SYMBOL len_2 VAR]
emitting command [  /* printXY(S,printX,printY); */]
emitting command [  CALL temp_31 _printXY S_2 printX printY]
emitting command [  CALL temp_32 _strlen S_2]
emitting command [  MOV len_2 temp_32]
emitting command [  /* while(len > 29) */]
emitting command [  SYMBOL lbl_while_do_3 LABEL]
emitting command [  SYMBOL lbl_while_exit_3 LABEL]
emitting command [  LABEL lbl_while_do_3]
emitting command [  GREATER temp_33 len_2 29]
emitting command [  JE 0 temp_33 lbl_while_exit_3]
emitting command [  /* do */]
emitting command [     /* len = len - 30; */]
emitting command [     SUB temp_34 len_2 30]
emitting command [     MOV len_2 temp_34]
emitting command [     /* printX = 0; */]
emitting command [     MOV printX 0]
emitting command [     /* printY++; */]
emitting command [     MOV temp_35 printY]
emitting command [     ADD printY printY 1]
emitting command [  JMP lbl_while_do_3]
emitting command [  LABEL lbl_while_exit_3]
emitting command [  /* end while*/]
emitting command [  /* printX = printX + len; */]
emitting command [  ADD temp_36 printX len_2]
emitting command [  MOV printX temp_36]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _print END]
emitting command [/* end */]
emitting command [/* float println(float *S) */]
emitting command [FUNCTION _println BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_3 ARG]
emitting command [  /* print(S); */]
emitting command [  CALL temp_37 _print S_3]
emitting command [  /* if(printX != 0) */]
emitting command [  NOTEQUAL temp_38 printX 0]
emitting command [  SYMBOL lbl_if_then_1 LABEL]
emitting command [  JE 0 temp_38 lbl_if_then_1]
emitting command [  /* then */]
emitting command [     /* printY++; */]
emitting command [     MOV temp_39 printY]
emitting command [     ADD printY printY 1]
emitting command [     /* printX = 0; */]
emitting command [     MOV printX 0]
emitting command [  SYMBOL lbl_if_exit_1 LABEL]
emitting command [  JMP lbl_if_exit_1]
emitting command [  LABEL lbl_if_then_1]
emitting command [  LABEL lbl_if_exit_1]
emitting command [  /* end */]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _println END]
emitting command [/* end */]
emitting command [/* float printnum(float N) */]
emitting command [FUNCTION _printnum BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL N_1 ARG]
emitting command [  SYMBOL arr VAR ARRAY 20]
emitting command [  /* itoa(arr,N); */]
emitting command [  CALL temp_40 _itoa arr N_1]
emitting command [  /* print(arr); */]
emitting command [  CALL temp_41 _print arr]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _printnum END]
emitting command [/* end */]
emitting command [/* float printXY(float *S, float X, float Y) */]
emitting command [FUNCTION _printXY BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL S_4 ARG]
emitting command [  SYMBOL X ARG]
emitting command [  SYMBOL Y ARG]
emitting command [  SYMBOL I_2 VAR]
emitting command [  SYMBOL C_1 VAR]
emitting command [  MOV I_2 0]
emitting command [  MOV temp_42 S_4]
emitting command [  ADD S_4 S_4 1]
emitting command [  MOV temp_43 *temp_42]
emitting command [  MOV C_1 temp_43]
emitting command [  /* while(C) */]
emitting command [  SYMBOL lbl_while_do_4 LABEL]
emitting command [  SYMBOL lbl_while_exit_4 LABEL]
emitting command [  LABEL lbl_while_do_4]
emitting command [  JE 0 C_1 lbl_while_exit_4]
emitting command [  /* do */]
emitting command [     SYMBOL Adr VAR]
emitting command [     MUL temp_44 30 Y]
emitting command [     ADD temp_45 temp_44 X]
emitting command [     MOV Adr temp_45]
emitting command [     /* adr_console[2*Adr] = C; */]
emitting command [     MUL temp_46 2 Adr]
emitting command [     ADD temp_47 temp_46 adr_console]
emitting command [     MOV *temp_47 C_1]
emitting command [     /* adr_console[2*Adr+1] = 999; */]
emitting command [     MUL temp_48 2 Adr]
emitting command [     ADD temp_49 temp_48 1]
emitting command [     ADD temp_50 temp_49 adr_console]
emitting command [     MOV *temp_50 999]
emitting command [     /* X++; */]
emitting command [     MOV temp_51 X]
emitting command [     ADD X X 1]
emitting command [     /* C = *S++; */]
emitting command [     MOV temp_52 S_4]
emitting command [     ADD S_4 S_4 1]
emitting command [     MOV temp_53 *temp_52]
emitting command [     MOV C_1 temp_53]
emitting command [  JMP lbl_while_do_4]
emitting command [  LABEL lbl_while_exit_4]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _printXY END]
emitting command [/* end */]
emitting command [/* float unreachable(float) */]
emitting command [FUNCTION _unreachable BEGIN]
emitting command [  FRAME ENTER]
emitting command [  /* while(1) */]
emitting command [  SYMBOL lbl_while_do_5 LABEL]
emitting command [  SYMBOL lbl_while_exit_5 LABEL]
emitting command [  LABEL lbl_while_do_5]
emitting command [  JE 0 1 lbl_while_exit_5]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_5]
emitting command [  LABEL lbl_while_exit_5]
emitting command [  /* end while*/]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _unreachable END]
emitting command [/* end */]
emitting command [STRUCT vec2 BEGIN]
emitting command [USING vec2]
emitting command [SYMBOL this ARG]
emitting command [SYMBOL X_1 VAR]
emitting command [SYMBOL Y_1 VAR]
emitting command [/* default class constructor */]
emitting command [FUNCTION constructor BEGIN]
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  RET]
emitting command [  FRAME LEAVE]
emitting command [FUNCTION constructor END]
emitting command [/* end */]
emitting command [/* default class constructor */]
emitting command [FUNCTION destructor BEGIN]
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  RET]
emitting command [  FRAME LEAVE]
emitting command [FUNCTION destructor END]
emitting command [/* end */]
emitting command [STRUCT vec2 END]
emitting command [/* float avg(float) */]
emitting command [FUNCTION _avg BEGIN]
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  SYMBOL this_1 ARG]
emitting command [  /* return (X+Y)/2; */]
emitting command [  ADD temp_54 X_1 Y_1]
emitting command [  DIV temp_55 temp_54 2]
emitting command [  RET temp_55]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _avg END]
emitting command [/* end */]
emitting command [/* float switch(float) */]
emitting command [FUNCTION _switch BEGIN]
emitting command [  FRAME ENTER]
emitting command [  USING vec2]
emitting command [  SYMBOL this_2 ARG]
emitting command [  SYMBOL Z VAR]
emitting command [  MOV Z X_1]
emitting command [  /* X = Y; */]
emitting command [  MOV X_1 Y_1]
emitting command [  /* Y = Z; */]
emitting command [  MOV Y_1 Z]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _switch END]
emitting command [/* end */]
emitting command [/* float main(float) */]
emitting command [FUNCTION _main BEGIN]
emitting command [  FRAME ENTER]
emitting command [  SYMBOL A VAR]
emitting command [  SYMBOL B VAR]
emitting command [  /* initialize A */]
emitting command [  CALL temp_56 constructor A]
emitting command [  /* initialize B */]
emitting command [  CALL temp_57 constructor B]
emitting command [  /* println("Hello Wo */]
emitting command [  CALL temp_58 _println str_1]
emitting command [  /* B.X = 1; */]
emitting command [  ADD X_1_1 B &X_1]
emitting command [  MOV *X_1_1 1]
emitting command [  /* B.Y = 3; */]
emitting command [  ADD Y_1_1 B &Y_1]
emitting command [  MOV *Y_1_1 3]
emitting command [  /* A.X = 5; */]
emitting command [  ADD X_1_2 A &X_1]
emitting command [  MOV *X_1_2 5]
emitting command [  /* A.Y = 7; */]
emitting command [  ADD Y_1_2 A &Y_1]
emitting command [  MOV *Y_1_2 7]
emitting command [  /* print("A.avg() = "); */]
emitting command [  CALL temp_59 _print str_2]
emitting command [  /* printnum(A.avg()); */]
emitting command [  CALL temp_60 _avg]
emitting command [  CALL temp_61 _printnum temp_60]
emitting command [  /* println(""); */]
emitting command [  CALL temp_62 _println str_3]
emitting command [  /* print("B.avg() = "); */]
emitting command [  CALL temp_63 _print str_4]
emitting command [  /* printnum(B.avg()); */]
emitting command [  CALL temp_64 _avg]
emitting command [  CALL temp_65 _printnum temp_64]
emitting command [  /* println(""); */]
emitting command [  CALL temp_66 _println str_5]
emitting command [  /* print("A.X = "); */]
emitting command [  CALL temp_67 _print str_6]
emitting command [  /* printnum(A.X); */]
emitting command [  ADD X_1_3 A &X_1]
emitting command [  CALL temp_68 _printnum *X_1_3]
emitting command [  /* print(", A.Y = "); */]
emitting command [  CALL temp_69 _print str_7]
emitting command [  /* printnum(A.Y); */]
emitting command [  ADD Y_1_3 A &Y_1]
emitting command [  CALL temp_70 _printnum *Y_1_3]
emitting command [  /* println(""); */]
emitting command [  CALL temp_71 _println str_8]
emitting command [  /* A.switch(); */]
emitting command [  CALL temp_72 _switch]
emitting command [  /* println("switched"); */]
emitting command [  CALL temp_73 _println str_9]
emitting command [  /* print("A.X = "); */]
emitting command [  CALL temp_74 _print str_10]
emitting command [  /* printnum(A.X); */]
emitting command [  ADD X_1_4 A &X_1]
emitting command [  CALL temp_75 _printnum *X_1_4]
emitting command [  /* print(", A.Y = "); */]
emitting command [  CALL temp_76 _print str_11]
emitting command [  /* printnum(A.Y); */]
emitting command [  ADD Y_1_4 A &Y_1]
emitting command [  CALL temp_77 _printnum *Y_1_4]
emitting command [  /* println(""); */]
emitting command [  CALL temp_78 _println str_12]
emitting command [  /* while(1) */]
emitting command [  SYMBOL lbl_while_do_6 LABEL]
emitting command [  SYMBOL lbl_while_exit_6 LABEL]
emitting command [  LABEL lbl_while_do_6]
emitting command [  JE 0 1 lbl_while_exit_6]
emitting command [  /* do */]
emitting command [  JMP lbl_while_do_6]
emitting command [  LABEL lbl_while_exit_6]
emitting command [  /* end while*/]
emitting command [  /* destroy A */]
emitting command [  CALL temp_79 destructor A]
emitting command [  /* destroy B */]
emitting command [  CALL temp_80 destructor B]
emitting command [  FRAME LEAVE]
emitting command [RET]
emitting command [FUNCTION _main END]
emitting command [/* end */]
pushing symbol n -> ST
pushing symbol a -> ST
pushing symbol b -> ST
pushing symbol str -> ST
pushing symbol S -> ST
pushing symbol len -> ST
pushing symbol S -> ST
pushing symbol len -> ST
pushing symbol I -> ST
pushing symbol C -> ST
pushing symbol buff -> ST
pushing symbol N -> ST
pushing symbol I -> ST
pushing symbol S -> ST
pushing symbol len -> ST
pushing symbol S -> ST
pushing symbol N -> ST
pushing symbol arr -> ST
pushing symbol S -> ST
pushing symbol X -> ST
pushing symbol Y -> ST
pushing symbol I -> ST
pushing symbol C -> ST
pushing symbol Adr -> ST
pushing symbol this -> ST
pushing symbol X -> ST
pushing symbol Y -> ST
pushing symbol avg -> ST
pushing symbol switch -> ST
pushing symbol constructor -> ST
pushing symbol destructor -> ST
pushing symbol this -> ST
pushing symbol this -> ST
pushing symbol Z -> ST
pushing symbol A -> ST
pushing symbol B -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
pushing symbol str -> ST
semantic: done
