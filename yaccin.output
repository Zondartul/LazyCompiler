State 52 conflicts: 3 shift/reduce
State 53 conflicts: 3 shift/reduce
State 54 conflicts: 3 shift/reduce
State 55 conflicts: 3 shift/reduce
State 56 conflicts: 3 shift/reduce
State 57 conflicts: 3 shift/reduce
State 58 conflicts: 3 shift/reduce
State 63 conflicts: 11 shift/reduce
State 64 conflicts: 11 shift/reduce
State 78 conflicts: 3 shift/reduce
State 81 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_stmt_list

    2 stmt: imp_stmt
    3     | decl_stmt

    4 stmt_list: stmt_list_ne
    5          | /* empty */

    6 stmt_list_ne: stmt_list_ne stmt
    7             | stmt

    8 decl_stmt: class_def
    9          | func_def
   10          | var_decl ';'

   11 decl_stmt_list: decl_stmt_list_ne
   12               | /* empty */

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt
   14                  | decl_stmt

   15 imp_stmt: if_block
   16         | while_loop
   17         | expr ';'
   18         | RETURN ';'
   19         | RETURN expr ';'

   20 class_def: CLASS ID decl_stmt_list END

   21 typename: TYPE
   22         | CLASS ID

   23 func_def: typename ID '(' var_decl_list ')' stmt_list END

   24 var_decl: typename ID
   25         | typename ID '=' expr

   26 var_decl_list: var_decl_list_ne
   27              | /* empty */

   28 var_decl_list_ne: var_decl_list_ne ',' var_decl
   29                 | var_decl

   30 if_block: if_then END
   31         | if_then ELSE stmt_list END

   32 if_then: IF '(' expr ')' THEN stmt_list
   33        | if_then ELSEIF '(' expr ')' THEN stmt_list

   34 while_loop: WHILE '(' expr ')' stmt_list END

   35 expr_list: expr_list_ne
   36          | /* empty */

   37 expr_list_ne: expr_list_ne ',' expr
   38             | expr

   39 expr: ID
   40     | INTEGER
   41     | INTEGERX
   42     | INTEGERB
   43     | FLOATING
   44     | CHARACTER
   45     | STRING
   46     | '(' expr ')'
   47     | expr '(' expr_list ')'
   48     | expr '.' expr
   49     | expr '^' expr
   50     | expr '/' expr
   51     | expr '*' expr
   52     | expr '-' expr
   53     | expr '+' expr
   54     | expr '=' '=' expr
   55     | expr '!' '=' expr
   56     | expr '>' expr
   57     | expr '<' expr
   58     | expr '=' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 55
'(' (40) 23 32 33 34 46 47
')' (41) 23 32 33 34 46 47
'*' (42) 51
'+' (43) 53
',' (44) 28 37
'-' (45) 52
'.' (46) 48
'/' (47) 50
';' (59) 10 17 18 19
'<' (60) 57
'=' (61) 25 54 55 58
'>' (62) 56
'^' (94) 49
error (256)
RETURN (258) 18 19
CLASS (259) 20 22
ID (260) 20 22 23 24 25 39
TYPE (261) 21
END (262) 20 23 30 31 34
IF (263) 32
THEN (264) 32 33
ELSE (265) 31
ELSEIF (266) 33
WHILE (267) 34
INTEGER (268) 40
INTEGERX (269) 41
INTEGERB (270) 42
FLOATING (271) 43
CHARACTER (272) 44
STRING (273) 45


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
stmt (35)
    on left: 2 3, on right: 6 7
stmt_list (36)
    on left: 4 5, on right: 23 31 32 33 34
stmt_list_ne (37)
    on left: 6 7, on right: 4 6
decl_stmt (38)
    on left: 8 9 10, on right: 3 13 14
decl_stmt_list (39)
    on left: 11 12, on right: 1 20
decl_stmt_list_ne (40)
    on left: 13 14, on right: 11 13
imp_stmt (41)
    on left: 15 16 17 18 19, on right: 2
class_def (42)
    on left: 20, on right: 8
typename (43)
    on left: 21 22, on right: 23 24 25
func_def (44)
    on left: 23, on right: 9
var_decl (45)
    on left: 24 25, on right: 10 28 29
var_decl_list (46)
    on left: 26 27, on right: 23
var_decl_list_ne (47)
    on left: 28 29, on right: 26 28
if_block (48)
    on left: 30 31, on right: 15
if_then (49)
    on left: 32 33, on right: 30 31 33
while_loop (50)
    on left: 34, on right: 16
expr_list (51)
    on left: 35 36, on right: 47
expr_list_ne (52)
    on left: 37 38, on right: 35 37
expr (53)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58, on right: 17 19 25 32 33 34 37 38 46 47 48 49 50 51 52 53
    54 55 56 57 58


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 12 (decl_stmt_list)

    program            go to state 3
    decl_stmt          go to state 4
    decl_stmt_list     go to state 5
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 1

   20 class_def: CLASS . ID decl_stmt_list END
   22 typename: CLASS . ID

    ID  shift, and go to state 11


state 2

   21 typename: TYPE .

    $default  reduce using rule 21 (typename)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 12


state 4

   14 decl_stmt_list_ne: decl_stmt .

    $default  reduce using rule 14 (decl_stmt_list_ne)


state 5

    1 program: decl_stmt_list .

    $default  reduce using rule 1 (program)


state 6

   11 decl_stmt_list: decl_stmt_list_ne .
   13 decl_stmt_list_ne: decl_stmt_list_ne . decl_stmt

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 11 (decl_stmt_list)

    decl_stmt  go to state 13
    class_def  go to state 7
    typename   go to state 8
    func_def   go to state 9
    var_decl   go to state 10


state 7

    8 decl_stmt: class_def .

    $default  reduce using rule 8 (decl_stmt)


state 8

   23 func_def: typename . ID '(' var_decl_list ')' stmt_list END
   24 var_decl: typename . ID
   25         | typename . ID '=' expr

    ID  shift, and go to state 14


state 9

    9 decl_stmt: func_def .

    $default  reduce using rule 9 (decl_stmt)


state 10

   10 decl_stmt: var_decl . ';'

    ';'  shift, and go to state 15


state 11

   20 class_def: CLASS ID . decl_stmt_list END
   22 typename: CLASS ID .

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    ID        reduce using rule 22 (typename)
    $default  reduce using rule 12 (decl_stmt_list)

    decl_stmt          go to state 4
    decl_stmt_list     go to state 16
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 12

    0 $accept: program $end .

    $default  accept


state 13

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt .

    $default  reduce using rule 13 (decl_stmt_list_ne)


state 14

   23 func_def: typename ID . '(' var_decl_list ')' stmt_list END
   24 var_decl: typename ID .
   25         | typename ID . '=' expr

    '='  shift, and go to state 17
    '('  shift, and go to state 18

    $default  reduce using rule 24 (var_decl)


state 15

   10 decl_stmt: var_decl ';' .

    $default  reduce using rule 10 (decl_stmt)


state 16

   20 class_def: CLASS ID decl_stmt_list . END

    END  shift, and go to state 19


state 17

   25 var_decl: typename ID '=' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 28


state 18

   23 func_def: typename ID '(' . var_decl_list ')' stmt_list END

    CLASS  shift, and go to state 29
    TYPE   shift, and go to state 2

    $default  reduce using rule 27 (var_decl_list)

    typename          go to state 30
    var_decl          go to state 31
    var_decl_list     go to state 32
    var_decl_list_ne  go to state 33


state 19

   20 class_def: CLASS ID decl_stmt_list END .

    $default  reduce using rule 20 (class_def)


state 20

   39 expr: ID .

    $default  reduce using rule 39 (expr)


state 21

   40 expr: INTEGER .

    $default  reduce using rule 40 (expr)


state 22

   41 expr: INTEGERX .

    $default  reduce using rule 41 (expr)


state 23

   42 expr: INTEGERB .

    $default  reduce using rule 42 (expr)


state 24

   43 expr: FLOATING .

    $default  reduce using rule 43 (expr)


state 25

   44 expr: CHARACTER .

    $default  reduce using rule 44 (expr)


state 26

   45 expr: STRING .

    $default  reduce using rule 45 (expr)


state 27

   46 expr: '(' . expr ')'

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 34


state 28

   25 var_decl: typename ID '=' expr .
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    $default  reduce using rule 25 (var_decl)


state 29

   22 typename: CLASS . ID

    ID  shift, and go to state 46


state 30

   24 var_decl: typename . ID
   25         | typename . ID '=' expr

    ID  shift, and go to state 47


state 31

   29 var_decl_list_ne: var_decl .

    $default  reduce using rule 29 (var_decl_list_ne)


state 32

   23 func_def: typename ID '(' var_decl_list . ')' stmt_list END

    ')'  shift, and go to state 48


state 33

   26 var_decl_list: var_decl_list_ne .
   28 var_decl_list_ne: var_decl_list_ne . ',' var_decl

    ','  shift, and go to state 49

    $default  reduce using rule 26 (var_decl_list)


state 34

   46 expr: '(' expr . ')'
   47     | expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ')'  shift, and go to state 50
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 35

   54 expr: expr '=' . '=' expr
   58     | expr '=' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '='        shift, and go to state 51
    '('        shift, and go to state 27

    expr  go to state 52


state 36

   53 expr: expr '+' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 53


state 37

   52 expr: expr '-' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 54


state 38

   49 expr: expr '^' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 55


state 39

   50 expr: expr '/' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 56


state 40

   51 expr: expr '*' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 57


state 41

   48 expr: expr '.' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 58


state 42

   47 expr: expr '(' . expr_list ')'

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 36 (expr_list)

    expr_list     go to state 59
    expr_list_ne  go to state 60
    expr          go to state 61


state 43

   55 expr: expr '!' . '=' expr

    '='  shift, and go to state 62


state 44

   56 expr: expr '>' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 63


state 45

   57 expr: expr '<' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 64


state 46

   22 typename: CLASS ID .

    $default  reduce using rule 22 (typename)


state 47

   24 var_decl: typename ID .
   25         | typename ID . '=' expr

    '='  shift, and go to state 17

    $default  reduce using rule 24 (var_decl)


state 48

   23 func_def: typename ID '(' var_decl_list ')' . stmt_list END

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 68
    stmt_list     go to state 69
    stmt_list_ne  go to state 70
    decl_stmt     go to state 71
    imp_stmt      go to state 72
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 73
    if_then       go to state 74
    while_loop    go to state 75
    expr          go to state 76


state 49

   28 var_decl_list_ne: var_decl_list_ne ',' . var_decl

    CLASS  shift, and go to state 29
    TYPE   shift, and go to state 2

    typename  go to state 30
    var_decl  go to state 77


state 50

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


state 51

   54 expr: expr '=' '=' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 78


state 52

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr
   58     | expr '=' expr .

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 58 (expr)]
    '>'       [reduce using rule 58 (expr)]
    '<'       [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


state 53

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   53     | expr '+' expr .
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 53 (expr)]
    '>'       [reduce using rule 53 (expr)]
    '<'       [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


state 54

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   52     | expr '-' expr .
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 52 (expr)]
    '>'       [reduce using rule 52 (expr)]
    '<'       [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


state 55

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   49     | expr '^' expr .
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 49 (expr)]
    '>'       [reduce using rule 49 (expr)]
    '<'       [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


state 56

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   50     | expr '/' expr .
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 50 (expr)]
    '>'       [reduce using rule 50 (expr)]
    '<'       [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


state 57

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   51     | expr '*' expr .
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 51 (expr)]
    '>'       [reduce using rule 51 (expr)]
    '<'       [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


state 58

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   48     | expr '.' expr .
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 48 (expr)]
    '>'       [reduce using rule 48 (expr)]
    '<'       [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


state 59

   47 expr: expr '(' expr_list . ')'

    ')'  shift, and go to state 79


state 60

   35 expr_list: expr_list_ne .
   37 expr_list_ne: expr_list_ne . ',' expr

    ','  shift, and go to state 80

    $default  reduce using rule 35 (expr_list)


state 61

   38 expr_list_ne: expr .
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    $default  reduce using rule 38 (expr_list_ne)


state 62

   55 expr: expr '!' '=' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 81


state 63

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   56     | expr '>' expr .
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '='       [reduce using rule 56 (expr)]
    '+'       [reduce using rule 56 (expr)]
    '-'       [reduce using rule 56 (expr)]
    '^'       [reduce using rule 56 (expr)]
    '/'       [reduce using rule 56 (expr)]
    '*'       [reduce using rule 56 (expr)]
    '.'       [reduce using rule 56 (expr)]
    '('       [reduce using rule 56 (expr)]
    '!'       [reduce using rule 56 (expr)]
    '>'       [reduce using rule 56 (expr)]
    '<'       [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


state 64

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   57     | expr '<' expr .
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '='       [reduce using rule 57 (expr)]
    '+'       [reduce using rule 57 (expr)]
    '-'       [reduce using rule 57 (expr)]
    '^'       [reduce using rule 57 (expr)]
    '/'       [reduce using rule 57 (expr)]
    '*'       [reduce using rule 57 (expr)]
    '.'       [reduce using rule 57 (expr)]
    '('       [reduce using rule 57 (expr)]
    '!'       [reduce using rule 57 (expr)]
    '>'       [reduce using rule 57 (expr)]
    '<'       [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


state 65

   18 imp_stmt: RETURN . ';'
   19         | RETURN . expr ';'

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 82

    expr  go to state 83


state 66

   32 if_then: IF . '(' expr ')' THEN stmt_list

    '('  shift, and go to state 84


state 67

   34 while_loop: WHILE . '(' expr ')' stmt_list END

    '('  shift, and go to state 85


state 68

    7 stmt_list_ne: stmt .

    $default  reduce using rule 7 (stmt_list_ne)


state 69

   23 func_def: typename ID '(' var_decl_list ')' stmt_list . END

    END  shift, and go to state 86


state 70

    4 stmt_list: stmt_list_ne .
    6 stmt_list_ne: stmt_list_ne . stmt

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 4 (stmt_list)

    stmt        go to state 87
    decl_stmt   go to state 71
    imp_stmt    go to state 72
    class_def   go to state 7
    typename    go to state 8
    func_def    go to state 9
    var_decl    go to state 10
    if_block    go to state 73
    if_then     go to state 74
    while_loop  go to state 75
    expr        go to state 76


state 71

    3 stmt: decl_stmt .

    $default  reduce using rule 3 (stmt)


state 72

    2 stmt: imp_stmt .

    $default  reduce using rule 2 (stmt)


state 73

   15 imp_stmt: if_block .

    $default  reduce using rule 15 (imp_stmt)


state 74

   30 if_block: if_then . END
   31         | if_then . ELSE stmt_list END
   33 if_then: if_then . ELSEIF '(' expr ')' THEN stmt_list

    END     shift, and go to state 88
    ELSE    shift, and go to state 89
    ELSEIF  shift, and go to state 90


state 75

   16 imp_stmt: while_loop .

    $default  reduce using rule 16 (imp_stmt)


state 76

   17 imp_stmt: expr . ';'
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ';'  shift, and go to state 91
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 77

   28 var_decl_list_ne: var_decl_list_ne ',' var_decl .

    $default  reduce using rule 28 (var_decl_list_ne)


state 78

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   54     | expr '=' '=' expr .
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 54 (expr)]
    '>'       [reduce using rule 54 (expr)]
    '<'       [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


state 79

   47 expr: expr '(' expr_list ')' .

    $default  reduce using rule 47 (expr)


state 80

   37 expr_list_ne: expr_list_ne ',' . expr

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 92


state 81

   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   55     | expr '!' '=' expr .
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    '!'       [reduce using rule 55 (expr)]
    '>'       [reduce using rule 55 (expr)]
    '<'       [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


state 82

   18 imp_stmt: RETURN ';' .

    $default  reduce using rule 18 (imp_stmt)


state 83

   19 imp_stmt: RETURN expr . ';'
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ';'  shift, and go to state 93
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 84

   32 if_then: IF '(' . expr ')' THEN stmt_list

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 94


state 85

   34 while_loop: WHILE '(' . expr ')' stmt_list END

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 95


state 86

   23 func_def: typename ID '(' var_decl_list ')' stmt_list END .

    $default  reduce using rule 23 (func_def)


state 87

    6 stmt_list_ne: stmt_list_ne stmt .

    $default  reduce using rule 6 (stmt_list_ne)


state 88

   30 if_block: if_then END .

    $default  reduce using rule 30 (if_block)


state 89

   31 if_block: if_then ELSE . stmt_list END

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 68
    stmt_list     go to state 96
    stmt_list_ne  go to state 70
    decl_stmt     go to state 71
    imp_stmt      go to state 72
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 73
    if_then       go to state 74
    while_loop    go to state 75
    expr          go to state 76


state 90

   33 if_then: if_then ELSEIF . '(' expr ')' THEN stmt_list

    '('  shift, and go to state 97


state 91

   17 imp_stmt: expr ';' .

    $default  reduce using rule 17 (imp_stmt)


state 92

   37 expr_list_ne: expr_list_ne ',' expr .
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45

    $default  reduce using rule 37 (expr_list_ne)


state 93

   19 imp_stmt: RETURN expr ';' .

    $default  reduce using rule 19 (imp_stmt)


state 94

   32 if_then: IF '(' expr . ')' THEN stmt_list
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ')'  shift, and go to state 98
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 95

   34 while_loop: WHILE '(' expr . ')' stmt_list END
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ')'  shift, and go to state 99
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 96

   31 if_block: if_then ELSE stmt_list . END

    END  shift, and go to state 100


state 97

   33 if_then: if_then ELSEIF '(' . expr ')' THEN stmt_list

    ID         shift, and go to state 20
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    expr  go to state 101


state 98

   32 if_then: IF '(' expr ')' . THEN stmt_list

    THEN  shift, and go to state 102


state 99

   34 while_loop: WHILE '(' expr ')' . stmt_list END

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 68
    stmt_list     go to state 103
    stmt_list_ne  go to state 70
    decl_stmt     go to state 71
    imp_stmt      go to state 72
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 73
    if_then       go to state 74
    while_loop    go to state 75
    expr          go to state 76


state 100

   31 if_block: if_then ELSE stmt_list END .

    $default  reduce using rule 31 (if_block)


state 101

   33 if_then: if_then ELSEIF '(' expr . ')' THEN stmt_list
   47 expr: expr . '(' expr_list ')'
   48     | expr . '.' expr
   49     | expr . '^' expr
   50     | expr . '/' expr
   51     | expr . '*' expr
   52     | expr . '-' expr
   53     | expr . '+' expr
   54     | expr . '=' '=' expr
   55     | expr . '!' '=' expr
   56     | expr . '>' expr
   57     | expr . '<' expr
   58     | expr . '=' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '^'  shift, and go to state 38
    '/'  shift, and go to state 39
    '*'  shift, and go to state 40
    '.'  shift, and go to state 41
    '('  shift, and go to state 42
    ')'  shift, and go to state 104
    '!'  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45


state 102

   32 if_then: IF '(' expr ')' THEN . stmt_list

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 68
    stmt_list     go to state 105
    stmt_list_ne  go to state 70
    decl_stmt     go to state 71
    imp_stmt      go to state 72
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 73
    if_then       go to state 74
    while_loop    go to state 75
    expr          go to state 76


state 103

   34 while_loop: WHILE '(' expr ')' stmt_list . END

    END  shift, and go to state 106


state 104

   33 if_then: if_then ELSEIF '(' expr ')' . THEN stmt_list

    THEN  shift, and go to state 107


state 105

   32 if_then: IF '(' expr ')' THEN stmt_list .

    $default  reduce using rule 32 (if_then)


state 106

   34 while_loop: WHILE '(' expr ')' stmt_list END .

    $default  reduce using rule 34 (while_loop)


state 107

   33 if_then: if_then ELSEIF '(' expr ')' THEN . stmt_list

    RETURN     shift, and go to state 65
    CLASS      shift, and go to state 1
    ID         shift, and go to state 20
    TYPE       shift, and go to state 2
    IF         shift, and go to state 66
    WHILE      shift, and go to state 67
    INTEGER    shift, and go to state 21
    INTEGERX   shift, and go to state 22
    INTEGERB   shift, and go to state 23
    FLOATING   shift, and go to state 24
    CHARACTER  shift, and go to state 25
    STRING     shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 68
    stmt_list     go to state 108
    stmt_list_ne  go to state 70
    decl_stmt     go to state 71
    imp_stmt      go to state 72
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 73
    if_then       go to state 74
    while_loop    go to state 75
    expr          go to state 76


state 108

   33 if_then: if_then ELSEIF '(' expr ')' THEN stmt_list .

    $default  reduce using rule 33 (if_then)
