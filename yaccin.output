Grammar

    0 $accept: program $end

    1 program: decl_stmt_list

    2 stmt: imp_stmt
    3     | decl_stmt

    4 stmt_list: stmt_list_ne
    5          | /* empty */

    6 stmt_list_ne: stmt_list_ne stmt
    7             | stmt

    8 decl_stmt: class_def
    9          | func_def
   10          | var_decl ';'

   11 decl_stmt_list: decl_stmt_list_ne
   12               | /* empty */

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt
   14                  | decl_stmt

   15 imp_stmt: if_block
   16         | while_loop
   17         | expr ';'
   18         | RETURN ';'
   19         | RETURN expr ';'

   20 class_def: CLASS ID decl_stmt_list END

   21 typename: TYPE
   22         | CLASS ID

   23 func_def: typename ID '(' var_decl_list ')' stmt_list END

   24 var_decl: typename ID
   25         | typename ID '=' expr

   26 var_decl_list: var_decl_list_ne
   27              | /* empty */

   28 var_decl_list_ne: var_decl_list_ne ',' var_decl
   29                 | var_decl

   30 if_block: if_then END
   31         | if_then ELSE stmt_list END

   32 if_then: IF '(' expr ')' THEN stmt_list
   33        | if_then ELSEIF '(' expr ')' THEN stmt_list

   34 while_loop: WHILE '(' expr ')' stmt_list END

   35 expr_list: expr_list_ne
   36          | /* empty */

   37 expr_list_ne: expr_list_ne ',' expr
   38             | expr

   39 expr: ID
   40     | CONSTANT
   41     | '(' expr ')'
   42     | expr '(' expr_list ')'
   43     | expr '.' expr
   44     | expr '^' expr
   45     | expr '/' expr
   46     | expr '*' expr
   47     | expr '-' expr
   48     | expr '+' expr
   49     | expr '=' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 32 33 34 41 42
')' (41) 23 32 33 34 41 42
'*' (42) 46
'+' (43) 48
',' (44) 28 37
'-' (45) 47
'.' (46) 43
'/' (47) 45
';' (59) 10 17 18 19
'=' (61) 25 49
'^' (94) 44
error (256)
RETURN (258) 18 19
CLASS (259) 20 22
ID (260) 20 22 23 24 25 39
TYPE (261) 21
END (262) 20 23 30 31 34
IF (263) 32
THEN (264) 32 33
ELSE (265) 31
ELSEIF (266) 33
WHILE (267) 34
CONSTANT (268) 40


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
stmt (27)
    on left: 2 3, on right: 6 7
stmt_list (28)
    on left: 4 5, on right: 23 31 32 33 34
stmt_list_ne (29)
    on left: 6 7, on right: 4 6
decl_stmt (30)
    on left: 8 9 10, on right: 3 13 14
decl_stmt_list (31)
    on left: 11 12, on right: 1 20
decl_stmt_list_ne (32)
    on left: 13 14, on right: 11 13
imp_stmt (33)
    on left: 15 16 17 18 19, on right: 2
class_def (34)
    on left: 20, on right: 8
typename (35)
    on left: 21 22, on right: 23 24 25
func_def (36)
    on left: 23, on right: 9
var_decl (37)
    on left: 24 25, on right: 10 28 29
var_decl_list (38)
    on left: 26 27, on right: 23
var_decl_list_ne (39)
    on left: 28 29, on right: 26 28
if_block (40)
    on left: 30 31, on right: 15
if_then (41)
    on left: 32 33, on right: 30 31 33
while_loop (42)
    on left: 34, on right: 16
expr_list (43)
    on left: 35 36, on right: 42
expr_list_ne (44)
    on left: 37 38, on right: 35 37
expr (45)
    on left: 39 40 41 42 43 44 45 46 47 48 49, on right: 17 19 25 32
    33 34 37 38 41 42 43 44 45 46 47 48 49


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 12 (decl_stmt_list)

    program            go to state 3
    decl_stmt          go to state 4
    decl_stmt_list     go to state 5
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 1

   20 class_def: CLASS . ID decl_stmt_list END
   22 typename: CLASS . ID

    ID  shift, and go to state 11


state 2

   21 typename: TYPE .

    $default  reduce using rule 21 (typename)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 12


state 4

   14 decl_stmt_list_ne: decl_stmt .

    $default  reduce using rule 14 (decl_stmt_list_ne)


state 5

    1 program: decl_stmt_list .

    $default  reduce using rule 1 (program)


state 6

   11 decl_stmt_list: decl_stmt_list_ne .
   13 decl_stmt_list_ne: decl_stmt_list_ne . decl_stmt

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 11 (decl_stmt_list)

    decl_stmt  go to state 13
    class_def  go to state 7
    typename   go to state 8
    func_def   go to state 9
    var_decl   go to state 10


state 7

    8 decl_stmt: class_def .

    $default  reduce using rule 8 (decl_stmt)


state 8

   23 func_def: typename . ID '(' var_decl_list ')' stmt_list END
   24 var_decl: typename . ID
   25         | typename . ID '=' expr

    ID  shift, and go to state 14


state 9

    9 decl_stmt: func_def .

    $default  reduce using rule 9 (decl_stmt)


state 10

   10 decl_stmt: var_decl . ';'

    ';'  shift, and go to state 15


state 11

   20 class_def: CLASS ID . decl_stmt_list END
   22 typename: CLASS ID .

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    ID        reduce using rule 22 (typename)
    $default  reduce using rule 12 (decl_stmt_list)

    decl_stmt          go to state 4
    decl_stmt_list     go to state 16
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 12

    0 $accept: program $end .

    $default  accept


state 13

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt .

    $default  reduce using rule 13 (decl_stmt_list_ne)


state 14

   23 func_def: typename ID . '(' var_decl_list ')' stmt_list END
   24 var_decl: typename ID .
   25         | typename ID . '=' expr

    '='  shift, and go to state 17
    '('  shift, and go to state 18

    $default  reduce using rule 24 (var_decl)


state 15

   10 decl_stmt: var_decl ';' .

    $default  reduce using rule 10 (decl_stmt)


state 16

   20 class_def: CLASS ID decl_stmt_list . END

    END  shift, and go to state 19


state 17

   25 var_decl: typename ID '=' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 23


state 18

   23 func_def: typename ID '(' . var_decl_list ')' stmt_list END

    CLASS  shift, and go to state 24
    TYPE   shift, and go to state 2

    $default  reduce using rule 27 (var_decl_list)

    typename          go to state 25
    var_decl          go to state 26
    var_decl_list     go to state 27
    var_decl_list_ne  go to state 28


state 19

   20 class_def: CLASS ID decl_stmt_list END .

    $default  reduce using rule 20 (class_def)


state 20

   39 expr: ID .

    $default  reduce using rule 39 (expr)


state 21

   40 expr: CONSTANT .

    $default  reduce using rule 40 (expr)


state 22

   41 expr: '(' . expr ')'

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 29


state 23

   25 var_decl: typename ID '=' expr .
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 25 (var_decl)


state 24

   22 typename: CLASS . ID

    ID  shift, and go to state 38


state 25

   24 var_decl: typename . ID
   25         | typename . ID '=' expr

    ID  shift, and go to state 39


state 26

   29 var_decl_list_ne: var_decl .

    $default  reduce using rule 29 (var_decl_list_ne)


state 27

   23 func_def: typename ID '(' var_decl_list . ')' stmt_list END

    ')'  shift, and go to state 40


state 28

   26 var_decl_list: var_decl_list_ne .
   28 var_decl_list_ne: var_decl_list_ne . ',' var_decl

    ','  shift, and go to state 41

    $default  reduce using rule 26 (var_decl_list)


state 29

   41 expr: '(' expr . ')'
   42     | expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ')'  shift, and go to state 42


state 30

   49 expr: expr '=' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 43


state 31

   48 expr: expr '+' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 44


state 32

   47 expr: expr '-' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 45


state 33

   44 expr: expr '^' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 46


state 34

   45 expr: expr '/' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 47


state 35

   46 expr: expr '*' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 48


state 36

   43 expr: expr '.' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 49


state 37

   42 expr: expr '(' . expr_list ')'

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 36 (expr_list)

    expr_list     go to state 50
    expr_list_ne  go to state 51
    expr          go to state 52


state 38

   22 typename: CLASS ID .

    $default  reduce using rule 22 (typename)


state 39

   24 var_decl: typename ID .
   25         | typename ID . '=' expr

    '='  shift, and go to state 17

    $default  reduce using rule 24 (var_decl)


state 40

   23 func_def: typename ID '(' var_decl_list ')' . stmt_list END

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 56
    stmt_list     go to state 57
    stmt_list_ne  go to state 58
    decl_stmt     go to state 59
    imp_stmt      go to state 60
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 61
    if_then       go to state 62
    while_loop    go to state 63
    expr          go to state 64


state 41

   28 var_decl_list_ne: var_decl_list_ne ',' . var_decl

    CLASS  shift, and go to state 24
    TYPE   shift, and go to state 2

    typename  go to state 25
    var_decl  go to state 65


state 42

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


state 43

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr
   49     | expr '=' expr .

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 49 (expr)


state 44

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   48     | expr '+' expr .
   49     | expr . '=' expr

    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 48 (expr)


state 45

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   47     | expr '-' expr .
   48     | expr . '+' expr
   49     | expr . '=' expr

    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 47 (expr)


state 46

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   44     | expr '^' expr .
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 44 (expr)


state 47

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   45     | expr '/' expr .
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 45 (expr)


state 48

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   46     | expr '*' expr .
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 46 (expr)


state 49

   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   43     | expr '.' expr .
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '('  shift, and go to state 37

    $default  reduce using rule 43 (expr)


state 50

   42 expr: expr '(' expr_list . ')'

    ')'  shift, and go to state 66


state 51

   35 expr_list: expr_list_ne .
   37 expr_list_ne: expr_list_ne . ',' expr

    ','  shift, and go to state 67

    $default  reduce using rule 35 (expr_list)


state 52

   38 expr_list_ne: expr .
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 38 (expr_list_ne)


state 53

   18 imp_stmt: RETURN . ';'
   19         | RETURN . expr ';'

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22
    ';'       shift, and go to state 68

    expr  go to state 69


state 54

   32 if_then: IF . '(' expr ')' THEN stmt_list

    '('  shift, and go to state 70


state 55

   34 while_loop: WHILE . '(' expr ')' stmt_list END

    '('  shift, and go to state 71


state 56

    7 stmt_list_ne: stmt .

    $default  reduce using rule 7 (stmt_list_ne)


state 57

   23 func_def: typename ID '(' var_decl_list ')' stmt_list . END

    END  shift, and go to state 72


state 58

    4 stmt_list: stmt_list_ne .
    6 stmt_list_ne: stmt_list_ne . stmt

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 4 (stmt_list)

    stmt        go to state 73
    decl_stmt   go to state 59
    imp_stmt    go to state 60
    class_def   go to state 7
    typename    go to state 8
    func_def    go to state 9
    var_decl    go to state 10
    if_block    go to state 61
    if_then     go to state 62
    while_loop  go to state 63
    expr        go to state 64


state 59

    3 stmt: decl_stmt .

    $default  reduce using rule 3 (stmt)


state 60

    2 stmt: imp_stmt .

    $default  reduce using rule 2 (stmt)


state 61

   15 imp_stmt: if_block .

    $default  reduce using rule 15 (imp_stmt)


state 62

   30 if_block: if_then . END
   31         | if_then . ELSE stmt_list END
   33 if_then: if_then . ELSEIF '(' expr ')' THEN stmt_list

    END     shift, and go to state 74
    ELSE    shift, and go to state 75
    ELSEIF  shift, and go to state 76


state 63

   16 imp_stmt: while_loop .

    $default  reduce using rule 16 (imp_stmt)


state 64

   17 imp_stmt: expr . ';'
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ';'  shift, and go to state 77


state 65

   28 var_decl_list_ne: var_decl_list_ne ',' var_decl .

    $default  reduce using rule 28 (var_decl_list_ne)


state 66

   42 expr: expr '(' expr_list ')' .

    $default  reduce using rule 42 (expr)


state 67

   37 expr_list_ne: expr_list_ne ',' . expr

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 78


state 68

   18 imp_stmt: RETURN ';' .

    $default  reduce using rule 18 (imp_stmt)


state 69

   19 imp_stmt: RETURN expr . ';'
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ';'  shift, and go to state 79


state 70

   32 if_then: IF '(' . expr ')' THEN stmt_list

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 80


state 71

   34 while_loop: WHILE '(' . expr ')' stmt_list END

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 81


state 72

   23 func_def: typename ID '(' var_decl_list ')' stmt_list END .

    $default  reduce using rule 23 (func_def)


state 73

    6 stmt_list_ne: stmt_list_ne stmt .

    $default  reduce using rule 6 (stmt_list_ne)


state 74

   30 if_block: if_then END .

    $default  reduce using rule 30 (if_block)


state 75

   31 if_block: if_then ELSE . stmt_list END

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 56
    stmt_list     go to state 82
    stmt_list_ne  go to state 58
    decl_stmt     go to state 59
    imp_stmt      go to state 60
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 61
    if_then       go to state 62
    while_loop    go to state 63
    expr          go to state 64


state 76

   33 if_then: if_then ELSEIF . '(' expr ')' THEN stmt_list

    '('  shift, and go to state 83


state 77

   17 imp_stmt: expr ';' .

    $default  reduce using rule 17 (imp_stmt)


state 78

   37 expr_list_ne: expr_list_ne ',' expr .
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37

    $default  reduce using rule 37 (expr_list_ne)


state 79

   19 imp_stmt: RETURN expr ';' .

    $default  reduce using rule 19 (imp_stmt)


state 80

   32 if_then: IF '(' expr . ')' THEN stmt_list
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ')'  shift, and go to state 84


state 81

   34 while_loop: WHILE '(' expr . ')' stmt_list END
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ')'  shift, and go to state 85


state 82

   31 if_block: if_then ELSE stmt_list . END

    END  shift, and go to state 86


state 83

   33 if_then: if_then ELSEIF '(' . expr ')' THEN stmt_list

    ID        shift, and go to state 20
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    expr  go to state 87


state 84

   32 if_then: IF '(' expr ')' . THEN stmt_list

    THEN  shift, and go to state 88


state 85

   34 while_loop: WHILE '(' expr ')' . stmt_list END

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 56
    stmt_list     go to state 89
    stmt_list_ne  go to state 58
    decl_stmt     go to state 59
    imp_stmt      go to state 60
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 61
    if_then       go to state 62
    while_loop    go to state 63
    expr          go to state 64


state 86

   31 if_block: if_then ELSE stmt_list END .

    $default  reduce using rule 31 (if_block)


state 87

   33 if_then: if_then ELSEIF '(' expr . ')' THEN stmt_list
   42 expr: expr . '(' expr_list ')'
   43     | expr . '.' expr
   44     | expr . '^' expr
   45     | expr . '/' expr
   46     | expr . '*' expr
   47     | expr . '-' expr
   48     | expr . '+' expr
   49     | expr . '=' expr

    '='  shift, and go to state 30
    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '^'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35
    '.'  shift, and go to state 36
    '('  shift, and go to state 37
    ')'  shift, and go to state 90


state 88

   32 if_then: IF '(' expr ')' THEN . stmt_list

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 56
    stmt_list     go to state 91
    stmt_list_ne  go to state 58
    decl_stmt     go to state 59
    imp_stmt      go to state 60
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 61
    if_then       go to state 62
    while_loop    go to state 63
    expr          go to state 64


state 89

   34 while_loop: WHILE '(' expr ')' stmt_list . END

    END  shift, and go to state 92


state 90

   33 if_then: if_then ELSEIF '(' expr ')' . THEN stmt_list

    THEN  shift, and go to state 93


state 91

   32 if_then: IF '(' expr ')' THEN stmt_list .

    $default  reduce using rule 32 (if_then)


state 92

   34 while_loop: WHILE '(' expr ')' stmt_list END .

    $default  reduce using rule 34 (while_loop)


state 93

   33 if_then: if_then ELSEIF '(' expr ')' THEN . stmt_list

    RETURN    shift, and go to state 53
    CLASS     shift, and go to state 1
    ID        shift, and go to state 20
    TYPE      shift, and go to state 2
    IF        shift, and go to state 54
    WHILE     shift, and go to state 55
    CONSTANT  shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 56
    stmt_list     go to state 94
    stmt_list_ne  go to state 58
    decl_stmt     go to state 59
    imp_stmt      go to state 60
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 61
    if_then       go to state 62
    while_loop    go to state 63
    expr          go to state 64


state 94

   33 if_then: if_then ELSEIF '(' expr ')' THEN stmt_list .

    $default  reduce using rule 33 (if_then)
