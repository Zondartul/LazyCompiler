State 48 conflicts: 3 shift/reduce
State 49 conflicts: 3 shift/reduce
State 50 conflicts: 3 shift/reduce
State 51 conflicts: 3 shift/reduce
State 52 conflicts: 3 shift/reduce
State 54 conflicts: 3 shift/reduce
State 79 conflicts: 3 shift/reduce
State 80 conflicts: 3 shift/reduce
State 81 conflicts: 3 shift/reduce
State 82 conflicts: 3 shift/reduce
State 83 conflicts: 3 shift/reduce
State 84 conflicts: 3 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 3 shift/reduce
State 87 conflicts: 3 shift/reduce
State 88 conflicts: 3 shift/reduce
State 89 conflicts: 3 shift/reduce
State 90 conflicts: 3 shift/reduce
State 91 conflicts: 3 shift/reduce
State 96 conflicts: 18 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_stmt_list

    2 stmt: imp_stmt
    3     | decl_stmt

    4 stmt_list: stmt_list_ne
    5          | /* empty */

    6 stmt_list_ne: stmt_list_ne stmt
    7             | stmt

    8 decl_stmt: class_def
    9          | func_def
   10          | var_decl ';'

   11 decl_stmt_list: decl_stmt_list_ne
   12               | /* empty */

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt
   14                  | decl_stmt

   15 imp_stmt: if_block
   16         | while_loop
   17         | expr ';'
   18         | RETURN ';'
   19         | RETURN expr ';'
   20         | for_loop

   21 class_def: CLASS ID decl_stmt_list END

   22 STAR: '*'

   23 ptr_stars: ptr_stars_ne
   24          | /* empty */

   25 ptr_stars_ne: ptr_stars_ne STAR
   26             | STAR

   27 typename: TYPE ptr_stars
   28         | CLASS ID ptr_stars

   29 func_def: typename ID '(' var_decl_list ')' stmt_list END

   30 var_decl: typename ID
   31         | typename ID '[' expr ']'
   32         | typename ID '=' expr

   33 var_decl_list: var_decl_list_ne
   34              | /* empty */

   35 var_decl_list_ne: var_decl_list_ne ',' var_decl
   36                 | var_decl

   37 if_block: if_then END
   38         | if_then ELSE stmt_list END

   39 if_then: IF '(' expr ')' stmt_list
   40        | if_then ELSEIF '(' expr ')' stmt_list

   41 while_loop: WHILE '(' expr ')' stmt_list END

   42 for_loop: FOR '(' stmt expr ';' expr ')' stmt_list END

   43 expr_list: expr_list_ne
   44          | /* empty */

   45 expr_list_ne: expr_list_ne ',' expr
   46             | expr

   47 expr: ID
   48     | INTEGER
   49     | INTEGERX
   50     | INTEGERB
   51     | FLOATING
   52     | CHARACTER
   53     | STRING
   54     | expr '[' expr ']'
   55     | '(' expr ')'
   56     | expr '(' expr_list ')'
   57     | expr '.' expr
   58     | expr '^' expr
   59     | expr '/' expr
   60     | expr '*' expr
   61     | expr '%' expr
   62     | expr '-' expr
   63     | expr '+' expr
   64     | '!' expr
   65     | expr '&' expr
   66     | expr '|' expr
   67     | expr EQUAL expr
   68     | expr NOTEQUAL expr
   69     | expr '>' expr
   70     | expr '<' expr
   71     | expr '=' expr
   72     | expr INC
   73     | INC expr
   74     | expr DEC
   75     | DEC expr
   76     | '-' expr
   77     | '*' expr
   78     | '&' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 61
'&' (38) 65 78
'(' (40) 29 39 40 41 42 55 56
')' (41) 29 39 40 41 42 55 56
'*' (42) 22 60 77
'+' (43) 63
',' (44) 35 45
'-' (45) 62 76
'.' (46) 57
'/' (47) 59
';' (59) 10 17 18 19 42
'<' (60) 70
'=' (61) 32 71
'>' (62) 69
'[' (91) 31 54
']' (93) 31 54
'^' (94) 58
'|' (124) 66
error (256)
RETURN (258) 18 19
CLASS (259) 21 28
ID (260) 21 28 29 30 31 32 47
TYPE (261) 27
END (262) 21 29 37 38 41 42
IF (263) 39
ELSE (264) 38
ELSEIF (265) 40
WHILE (266) 41
FOR (267) 42
INTEGER (268) 48
INTEGERX (269) 49
INTEGERB (270) 50
FLOATING (271) 51
CHARACTER (272) 52
STRING (273) 53
EQUAL (274) 67
NOTEQUAL (275) 68
INC (276) 72 73
DEC (277) 74 75
PREREF (278)
PREDEREF (279)
PREDEC (280)
PREINC (281)
PRENEG (282)
POSTDEC (283)
POSTINC (284)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmt (51)
    on left: 2 3, on right: 6 7 42
stmt_list (52)
    on left: 4 5, on right: 29 38 39 40 41 42
stmt_list_ne (53)
    on left: 6 7, on right: 4 6
decl_stmt (54)
    on left: 8 9 10, on right: 3 13 14
decl_stmt_list (55)
    on left: 11 12, on right: 1 21
decl_stmt_list_ne (56)
    on left: 13 14, on right: 11 13
imp_stmt (57)
    on left: 15 16 17 18 19 20, on right: 2
class_def (58)
    on left: 21, on right: 8
STAR (59)
    on left: 22, on right: 25 26
ptr_stars (60)
    on left: 23 24, on right: 27 28
ptr_stars_ne (61)
    on left: 25 26, on right: 23 25
typename (62)
    on left: 27 28, on right: 29 30 31 32
func_def (63)
    on left: 29, on right: 9
var_decl (64)
    on left: 30 31 32, on right: 10 35 36
var_decl_list (65)
    on left: 33 34, on right: 29
var_decl_list_ne (66)
    on left: 35 36, on right: 33 35
if_block (67)
    on left: 37 38, on right: 15
if_then (68)
    on left: 39 40, on right: 37 38 40
while_loop (69)
    on left: 41, on right: 16
for_loop (70)
    on left: 42, on right: 20
expr_list (71)
    on left: 43 44, on right: 56
expr_list_ne (72)
    on left: 45 46, on right: 43 45
expr (73)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 78, on right: 17 19 31 32
    39 40 41 42 45 46 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76 77 78


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 12 (decl_stmt_list)

    program            go to state 3
    decl_stmt          go to state 4
    decl_stmt_list     go to state 5
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 1

   21 class_def: CLASS . ID decl_stmt_list END
   28 typename: CLASS . ID ptr_stars

    ID  shift, and go to state 11


state 2

   27 typename: TYPE . ptr_stars

    '*'  shift, and go to state 12

    $default  reduce using rule 24 (ptr_stars)

    STAR          go to state 13
    ptr_stars     go to state 14
    ptr_stars_ne  go to state 15


state 3

    0 $accept: program . $end

    $end  shift, and go to state 16


state 4

   14 decl_stmt_list_ne: decl_stmt .

    $default  reduce using rule 14 (decl_stmt_list_ne)


state 5

    1 program: decl_stmt_list .

    $default  reduce using rule 1 (program)


state 6

   11 decl_stmt_list: decl_stmt_list_ne .
   13 decl_stmt_list_ne: decl_stmt_list_ne . decl_stmt

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2

    $default  reduce using rule 11 (decl_stmt_list)

    decl_stmt  go to state 17
    class_def  go to state 7
    typename   go to state 8
    func_def   go to state 9
    var_decl   go to state 10


state 7

    8 decl_stmt: class_def .

    $default  reduce using rule 8 (decl_stmt)


state 8

   29 func_def: typename . ID '(' var_decl_list ')' stmt_list END
   30 var_decl: typename . ID
   31         | typename . ID '[' expr ']'
   32         | typename . ID '=' expr

    ID  shift, and go to state 18


state 9

    9 decl_stmt: func_def .

    $default  reduce using rule 9 (decl_stmt)


state 10

   10 decl_stmt: var_decl . ';'

    ';'  shift, and go to state 19


state 11

   21 class_def: CLASS ID . decl_stmt_list END
   28 typename: CLASS ID . ptr_stars

    CLASS  shift, and go to state 1
    TYPE   shift, and go to state 2
    '*'    shift, and go to state 12

    ID        reduce using rule 24 (ptr_stars)
    $default  reduce using rule 12 (decl_stmt_list)

    decl_stmt          go to state 4
    decl_stmt_list     go to state 20
    decl_stmt_list_ne  go to state 6
    class_def          go to state 7
    STAR               go to state 13
    ptr_stars          go to state 21
    ptr_stars_ne       go to state 15
    typename           go to state 8
    func_def           go to state 9
    var_decl           go to state 10


state 12

   22 STAR: '*' .

    $default  reduce using rule 22 (STAR)


state 13

   26 ptr_stars_ne: STAR .

    $default  reduce using rule 26 (ptr_stars_ne)


state 14

   27 typename: TYPE ptr_stars .

    $default  reduce using rule 27 (typename)


state 15

   23 ptr_stars: ptr_stars_ne .
   25 ptr_stars_ne: ptr_stars_ne . STAR

    '*'  shift, and go to state 12

    $default  reduce using rule 23 (ptr_stars)

    STAR  go to state 22


state 16

    0 $accept: program $end .

    $default  accept


state 17

   13 decl_stmt_list_ne: decl_stmt_list_ne decl_stmt .

    $default  reduce using rule 13 (decl_stmt_list_ne)


state 18

   29 func_def: typename ID . '(' var_decl_list ')' stmt_list END
   30 var_decl: typename ID .
   31         | typename ID . '[' expr ']'
   32         | typename ID . '=' expr

    '='  shift, and go to state 23
    '('  shift, and go to state 24
    '['  shift, and go to state 25

    $default  reduce using rule 30 (var_decl)


state 19

   10 decl_stmt: var_decl ';' .

    $default  reduce using rule 10 (decl_stmt)


state 20

   21 class_def: CLASS ID decl_stmt_list . END

    END  shift, and go to state 26


state 21

   28 typename: CLASS ID ptr_stars .

    $default  reduce using rule 28 (typename)


state 22

   25 ptr_stars_ne: ptr_stars_ne STAR .

    $default  reduce using rule 25 (ptr_stars_ne)


state 23

   32 var_decl: typename ID '=' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 41


state 24

   29 func_def: typename ID '(' . var_decl_list ')' stmt_list END

    CLASS  shift, and go to state 42
    TYPE   shift, and go to state 2

    $default  reduce using rule 34 (var_decl_list)

    typename          go to state 43
    var_decl          go to state 44
    var_decl_list     go to state 45
    var_decl_list_ne  go to state 46


state 25

   31 var_decl: typename ID '[' . expr ']'

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 47


state 26

   21 class_def: CLASS ID decl_stmt_list END .

    $default  reduce using rule 21 (class_def)


state 27

   47 expr: ID .

    $default  reduce using rule 47 (expr)


state 28

   48 expr: INTEGER .

    $default  reduce using rule 48 (expr)


state 29

   49 expr: INTEGERX .

    $default  reduce using rule 49 (expr)


state 30

   50 expr: INTEGERB .

    $default  reduce using rule 50 (expr)


state 31

   51 expr: FLOATING .

    $default  reduce using rule 51 (expr)


state 32

   52 expr: CHARACTER .

    $default  reduce using rule 52 (expr)


state 33

   53 expr: STRING .

    $default  reduce using rule 53 (expr)


state 34

   73 expr: INC . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 48


state 35

   75 expr: DEC . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 49


state 36

   78 expr: '&' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 50


state 37

   76 expr: '-' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 51


state 38

   77 expr: '*' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 52


state 39

   55 expr: '(' . expr ')'

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 53


state 40

   64 expr: '!' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 54


state 41

   32 var_decl: typename ID '=' expr .
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    $default  reduce using rule 32 (var_decl)


state 42

   28 typename: CLASS . ID ptr_stars

    ID  shift, and go to state 73


state 43

   30 var_decl: typename . ID
   31         | typename . ID '[' expr ']'
   32         | typename . ID '=' expr

    ID  shift, and go to state 74


state 44

   36 var_decl_list_ne: var_decl .

    $default  reduce using rule 36 (var_decl_list_ne)


state 45

   29 func_def: typename ID '(' var_decl_list . ')' stmt_list END

    ')'  shift, and go to state 75


state 46

   33 var_decl_list: var_decl_list_ne .
   35 var_decl_list_ne: var_decl_list_ne . ',' var_decl

    ','  shift, and go to state 76

    $default  reduce using rule 33 (var_decl_list)


state 47

   31 var_decl: typename ID '[' expr . ']'
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    ']'       shift, and go to state 77
    '%'       shift, and go to state 72


state 48

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   73     | INC expr .
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 73 (expr)]
    DEC       [reduce using rule 73 (expr)]
    '%'       [reduce using rule 73 (expr)]
    $default  reduce using rule 73 (expr)


state 49

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC
   75     | DEC expr .

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 75 (expr)]
    DEC       [reduce using rule 75 (expr)]
    '%'       [reduce using rule 75 (expr)]
    $default  reduce using rule 75 (expr)


state 50

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC
   78     | '&' expr .

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 78 (expr)]
    DEC       [reduce using rule 78 (expr)]
    '%'       [reduce using rule 78 (expr)]
    $default  reduce using rule 78 (expr)


state 51

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC
   76     | '-' expr .

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 76 (expr)]
    DEC       [reduce using rule 76 (expr)]
    '%'       [reduce using rule 76 (expr)]
    $default  reduce using rule 76 (expr)


state 52

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC
   77     | '*' expr .

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 77 (expr)]
    DEC       [reduce using rule 77 (expr)]
    '%'       [reduce using rule 77 (expr)]
    $default  reduce using rule 77 (expr)


state 53

   54 expr: expr . '[' expr ']'
   55     | '(' expr . ')'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    ')'       shift, and go to state 78
    '['       shift, and go to state 71
    '%'       shift, and go to state 72


state 54

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   64     | '!' expr .
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '%'  shift, and go to state 72

    INC       [reduce using rule 64 (expr)]
    DEC       [reduce using rule 64 (expr)]
    '%'       [reduce using rule 64 (expr)]
    $default  reduce using rule 64 (expr)


state 55

   67 expr: expr EQUAL . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 79


state 56

   68 expr: expr NOTEQUAL . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 80


state 57

   72 expr: expr INC .

    $default  reduce using rule 72 (expr)


state 58

   74 expr: expr DEC .

    $default  reduce using rule 74 (expr)


state 59

   71 expr: expr '=' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 81


state 60

   66 expr: expr '|' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 82


state 61

   65 expr: expr '&' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 83


state 62

   70 expr: expr '<' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 84


state 63

   69 expr: expr '>' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 85


state 64

   63 expr: expr '+' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 86


state 65

   62 expr: expr '-' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 87


state 66

   58 expr: expr '^' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 88


state 67

   59 expr: expr '/' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 89


state 68

   60 expr: expr '*' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 90


state 69

   57 expr: expr '.' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 91


state 70

   56 expr: expr '(' . expr_list ')'

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 44 (expr_list)

    expr_list     go to state 92
    expr_list_ne  go to state 93
    expr          go to state 94


state 71

   54 expr: expr '[' . expr ']'

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 95


state 72

   61 expr: expr '%' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 96


state 73

   28 typename: CLASS ID . ptr_stars

    '*'  shift, and go to state 12

    $default  reduce using rule 24 (ptr_stars)

    STAR          go to state 13
    ptr_stars     go to state 21
    ptr_stars_ne  go to state 15


state 74

   30 var_decl: typename ID .
   31         | typename ID . '[' expr ']'
   32         | typename ID . '=' expr

    '='  shift, and go to state 23
    '['  shift, and go to state 25

    $default  reduce using rule 30 (var_decl)


state 75

   29 func_def: typename ID '(' var_decl_list ')' . stmt_list END

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 102
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 76

   35 var_decl_list_ne: var_decl_list_ne ',' . var_decl

    CLASS  shift, and go to state 42
    TYPE   shift, and go to state 2

    typename  go to state 43
    var_decl  go to state 111


state 77

   31 var_decl: typename ID '[' expr ']' .

    $default  reduce using rule 31 (var_decl)


state 78

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 79

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   67     | expr EQUAL expr .
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 67 (expr)]
    DEC       [reduce using rule 67 (expr)]
    '%'       [reduce using rule 67 (expr)]
    $default  reduce using rule 67 (expr)


state 80

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   68     | expr NOTEQUAL expr .
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 68 (expr)]
    DEC       [reduce using rule 68 (expr)]
    '%'       [reduce using rule 68 (expr)]
    $default  reduce using rule 68 (expr)


state 81

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   71     | expr '=' expr .
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    INC       [reduce using rule 71 (expr)]
    DEC       [reduce using rule 71 (expr)]
    '%'       [reduce using rule 71 (expr)]
    $default  reduce using rule 71 (expr)


state 82

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   66     | expr '|' expr .
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    INC       [reduce using rule 66 (expr)]
    DEC       [reduce using rule 66 (expr)]
    '%'       [reduce using rule 66 (expr)]
    $default  reduce using rule 66 (expr)


state 83

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   65     | expr '&' expr .
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    INC       [reduce using rule 65 (expr)]
    DEC       [reduce using rule 65 (expr)]
    '%'       [reduce using rule 65 (expr)]
    $default  reduce using rule 65 (expr)


state 84

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   70     | expr '<' expr .
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 70 (expr)]
    DEC       [reduce using rule 70 (expr)]
    '%'       [reduce using rule 70 (expr)]
    $default  reduce using rule 70 (expr)


state 85

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   69     | expr '>' expr .
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 69 (expr)]
    DEC       [reduce using rule 69 (expr)]
    '%'       [reduce using rule 69 (expr)]
    $default  reduce using rule 69 (expr)


state 86

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   63     | expr '+' expr .
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 63 (expr)]
    DEC       [reduce using rule 63 (expr)]
    '%'       [reduce using rule 63 (expr)]
    $default  reduce using rule 63 (expr)


state 87

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   62     | expr '-' expr .
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '^'  shift, and go to state 66
    '/'  shift, and go to state 67
    '*'  shift, and go to state 68
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 62 (expr)]
    DEC       [reduce using rule 62 (expr)]
    '%'       [reduce using rule 62 (expr)]
    $default  reduce using rule 62 (expr)


state 88

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   58     | expr '^' expr .
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 58 (expr)]
    DEC       [reduce using rule 58 (expr)]
    '%'       [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


state 89

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   59     | expr '/' expr .
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 59 (expr)]
    DEC       [reduce using rule 59 (expr)]
    '%'       [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


state 90

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   60     | expr '*' expr .
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '.'  shift, and go to state 69
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 60 (expr)]
    DEC       [reduce using rule 60 (expr)]
    '%'       [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)


state 91

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   57     | expr '.' expr .
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '%'  shift, and go to state 72

    INC       [reduce using rule 57 (expr)]
    DEC       [reduce using rule 57 (expr)]
    '%'       [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


state 92

   56 expr: expr '(' expr_list . ')'

    ')'  shift, and go to state 112


state 93

   43 expr_list: expr_list_ne .
   45 expr_list_ne: expr_list_ne . ',' expr

    ','  shift, and go to state 113

    $default  reduce using rule 43 (expr_list)


state 94

   46 expr_list_ne: expr .
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    $default  reduce using rule 46 (expr_list_ne)


state 95

   54 expr: expr . '[' expr ']'
   54     | expr '[' expr . ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    ']'       shift, and go to state 114
    '%'       shift, and go to state 72


state 96

   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   61     | expr '%' expr .
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    EQUAL     [reduce using rule 61 (expr)]
    NOTEQUAL  [reduce using rule 61 (expr)]
    INC       [reduce using rule 61 (expr)]
    DEC       [reduce using rule 61 (expr)]
    '='       [reduce using rule 61 (expr)]
    '|'       [reduce using rule 61 (expr)]
    '&'       [reduce using rule 61 (expr)]
    '<'       [reduce using rule 61 (expr)]
    '>'       [reduce using rule 61 (expr)]
    '+'       [reduce using rule 61 (expr)]
    '-'       [reduce using rule 61 (expr)]
    '^'       [reduce using rule 61 (expr)]
    '/'       [reduce using rule 61 (expr)]
    '*'       [reduce using rule 61 (expr)]
    '.'       [reduce using rule 61 (expr)]
    '('       [reduce using rule 61 (expr)]
    '['       [reduce using rule 61 (expr)]
    '%'       [reduce using rule 61 (expr)]
    $default  reduce using rule 61 (expr)


state 97

   18 imp_stmt: RETURN . ';'
   19         | RETURN . expr ';'

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40
    ';'        shift, and go to state 115

    expr  go to state 116


state 98

   39 if_then: IF . '(' expr ')' stmt_list

    '('  shift, and go to state 117


state 99

   41 while_loop: WHILE . '(' expr ')' stmt_list END

    '('  shift, and go to state 118


state 100

   42 for_loop: FOR . '(' stmt expr ';' expr ')' stmt_list END

    '('  shift, and go to state 119


state 101

    7 stmt_list_ne: stmt .

    $default  reduce using rule 7 (stmt_list_ne)


state 102

   29 func_def: typename ID '(' var_decl_list ')' stmt_list . END

    END  shift, and go to state 120


state 103

    4 stmt_list: stmt_list_ne .
    6 stmt_list_ne: stmt_list_ne . stmt

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 4 (stmt_list)

    stmt        go to state 121
    decl_stmt   go to state 104
    imp_stmt    go to state 105
    class_def   go to state 7
    typename    go to state 8
    func_def    go to state 9
    var_decl    go to state 10
    if_block    go to state 106
    if_then     go to state 107
    while_loop  go to state 108
    for_loop    go to state 109
    expr        go to state 110


state 104

    3 stmt: decl_stmt .

    $default  reduce using rule 3 (stmt)


state 105

    2 stmt: imp_stmt .

    $default  reduce using rule 2 (stmt)


state 106

   15 imp_stmt: if_block .

    $default  reduce using rule 15 (imp_stmt)


state 107

   37 if_block: if_then . END
   38         | if_then . ELSE stmt_list END
   40 if_then: if_then . ELSEIF '(' expr ')' stmt_list

    END     shift, and go to state 122
    ELSE    shift, and go to state 123
    ELSEIF  shift, and go to state 124


state 108

   16 imp_stmt: while_loop .

    $default  reduce using rule 16 (imp_stmt)


state 109

   20 imp_stmt: for_loop .

    $default  reduce using rule 20 (imp_stmt)


state 110

   17 imp_stmt: expr . ';'
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    ';'       shift, and go to state 125
    '%'       shift, and go to state 72


state 111

   35 var_decl_list_ne: var_decl_list_ne ',' var_decl .

    $default  reduce using rule 35 (var_decl_list_ne)


state 112

   56 expr: expr '(' expr_list ')' .

    $default  reduce using rule 56 (expr)


state 113

   45 expr_list_ne: expr_list_ne ',' . expr

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 126


state 114

   54 expr: expr '[' expr ']' .

    $default  reduce using rule 54 (expr)


state 115

   18 imp_stmt: RETURN ';' .

    $default  reduce using rule 18 (imp_stmt)


state 116

   19 imp_stmt: RETURN expr . ';'
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    ';'       shift, and go to state 127
    '%'       shift, and go to state 72


state 117

   39 if_then: IF '(' . expr ')' stmt_list

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 128


state 118

   41 while_loop: WHILE '(' . expr ')' stmt_list END

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 129


state 119

   42 for_loop: FOR '(' . stmt expr ';' expr ')' stmt_list END

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    stmt        go to state 130
    decl_stmt   go to state 104
    imp_stmt    go to state 105
    class_def   go to state 7
    typename    go to state 8
    func_def    go to state 9
    var_decl    go to state 10
    if_block    go to state 106
    if_then     go to state 107
    while_loop  go to state 108
    for_loop    go to state 109
    expr        go to state 110


state 120

   29 func_def: typename ID '(' var_decl_list ')' stmt_list END .

    $default  reduce using rule 29 (func_def)


state 121

    6 stmt_list_ne: stmt_list_ne stmt .

    $default  reduce using rule 6 (stmt_list_ne)


state 122

   37 if_block: if_then END .

    $default  reduce using rule 37 (if_block)


state 123

   38 if_block: if_then ELSE . stmt_list END

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 131
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 124

   40 if_then: if_then ELSEIF . '(' expr ')' stmt_list

    '('  shift, and go to state 132


state 125

   17 imp_stmt: expr ';' .

    $default  reduce using rule 17 (imp_stmt)


state 126

   45 expr_list_ne: expr_list_ne ',' expr .
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    '%'       shift, and go to state 72

    $default  reduce using rule 45 (expr_list_ne)


state 127

   19 imp_stmt: RETURN expr ';' .

    $default  reduce using rule 19 (imp_stmt)


state 128

   39 if_then: IF '(' expr . ')' stmt_list
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    ')'       shift, and go to state 133
    '['       shift, and go to state 71
    '%'       shift, and go to state 72


state 129

   41 while_loop: WHILE '(' expr . ')' stmt_list END
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    ')'       shift, and go to state 134
    '['       shift, and go to state 71
    '%'       shift, and go to state 72


state 130

   42 for_loop: FOR '(' stmt . expr ';' expr ')' stmt_list END

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 135


state 131

   38 if_block: if_then ELSE stmt_list . END

    END  shift, and go to state 136


state 132

   40 if_then: if_then ELSEIF '(' . expr ')' stmt_list

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 137


state 133

   39 if_then: IF '(' expr ')' . stmt_list

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 138
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 134

   41 while_loop: WHILE '(' expr ')' . stmt_list END

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 139
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 135

   42 for_loop: FOR '(' stmt expr . ';' expr ')' stmt_list END
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    '['       shift, and go to state 71
    ';'       shift, and go to state 140
    '%'       shift, and go to state 72


state 136

   38 if_block: if_then ELSE stmt_list END .

    $default  reduce using rule 38 (if_block)


state 137

   40 if_then: if_then ELSEIF '(' expr . ')' stmt_list
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    ')'       shift, and go to state 141
    '['       shift, and go to state 71
    '%'       shift, and go to state 72


state 138

   39 if_then: IF '(' expr ')' stmt_list .

    $default  reduce using rule 39 (if_then)


state 139

   41 while_loop: WHILE '(' expr ')' stmt_list . END

    END  shift, and go to state 142


state 140

   42 for_loop: FOR '(' stmt expr ';' . expr ')' stmt_list END

    ID         shift, and go to state 27
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    expr  go to state 143


state 141

   40 if_then: if_then ELSEIF '(' expr ')' . stmt_list

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 144
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 142

   41 while_loop: WHILE '(' expr ')' stmt_list END .

    $default  reduce using rule 41 (while_loop)


state 143

   42 for_loop: FOR '(' stmt expr ';' expr . ')' stmt_list END
   54 expr: expr . '[' expr ']'
   56     | expr . '(' expr_list ')'
   57     | expr . '.' expr
   58     | expr . '^' expr
   59     | expr . '/' expr
   60     | expr . '*' expr
   61     | expr . '%' expr
   62     | expr . '-' expr
   63     | expr . '+' expr
   65     | expr . '&' expr
   66     | expr . '|' expr
   67     | expr . EQUAL expr
   68     | expr . NOTEQUAL expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '=' expr
   72     | expr . INC
   74     | expr . DEC

    EQUAL     shift, and go to state 55
    NOTEQUAL  shift, and go to state 56
    INC       shift, and go to state 57
    DEC       shift, and go to state 58
    '='       shift, and go to state 59
    '|'       shift, and go to state 60
    '&'       shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '^'       shift, and go to state 66
    '/'       shift, and go to state 67
    '*'       shift, and go to state 68
    '.'       shift, and go to state 69
    '('       shift, and go to state 70
    ')'       shift, and go to state 145
    '['       shift, and go to state 71
    '%'       shift, and go to state 72


state 144

   40 if_then: if_then ELSEIF '(' expr ')' stmt_list .

    $default  reduce using rule 40 (if_then)


state 145

   42 for_loop: FOR '(' stmt expr ';' expr ')' . stmt_list END

    RETURN     shift, and go to state 97
    CLASS      shift, and go to state 1
    ID         shift, and go to state 27
    TYPE       shift, and go to state 2
    IF         shift, and go to state 98
    WHILE      shift, and go to state 99
    FOR        shift, and go to state 100
    INTEGER    shift, and go to state 28
    INTEGERX   shift, and go to state 29
    INTEGERB   shift, and go to state 30
    FLOATING   shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STRING     shift, and go to state 33
    INC        shift, and go to state 34
    DEC        shift, and go to state 35
    '&'        shift, and go to state 36
    '-'        shift, and go to state 37
    '*'        shift, and go to state 38
    '('        shift, and go to state 39
    '!'        shift, and go to state 40

    $default  reduce using rule 5 (stmt_list)

    stmt          go to state 101
    stmt_list     go to state 146
    stmt_list_ne  go to state 103
    decl_stmt     go to state 104
    imp_stmt      go to state 105
    class_def     go to state 7
    typename      go to state 8
    func_def      go to state 9
    var_decl      go to state 10
    if_block      go to state 106
    if_then       go to state 107
    while_loop    go to state 108
    for_loop      go to state 109
    expr          go to state 110


state 146

   42 for_loop: FOR '(' stmt expr ';' expr ')' stmt_list . END

    END  shift, and go to state 147


state 147

   42 for_loop: FOR '(' stmt expr ';' expr ')' stmt_list END .

    $default  reduce using rule 42 (for_loop)
